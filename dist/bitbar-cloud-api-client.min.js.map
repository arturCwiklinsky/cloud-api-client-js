{"version":3,"file":"bitbar-cloud-api-client.min.js","sources":["../src/finka.ts","../src/api/APIEntity.ts","../src/Filter.ts","../src/FilterBuilder.ts","../src/api/APIList.ts","../src/api/APIResource.ts","../src/api/APIListCleanupConfigurations.ts","../src/api/APIResourceCleanupConfiguration.ts","../src/api/APIListDevices.ts","../src/api/APIListUsers.ts","../src/api/APIResourceBillingPeriod.ts","../src/api/APIResourceBuild.ts","../src/api/APIResourceJob.ts","../src/api/APIResourceDeviceGroup.ts","../src/api/factory/postDeviceRunIds.ts","../src/api/APIResourceRunCommon.ts","../src/api/class/InputFileset.ts","../src/api/class/OutputFileset.ts","../src/api/APIResourceDeviceSessionCommon.ts","../src/api/APIResourceDeviceSession.ts","../src/api/APIResourceRun.ts","../src/api/APIResourceProject.ts","../src/api/APIResourceFile.ts","../src/api/APIResourceNotification.ts","../src/api/APIResourceAccessGroup.ts","../src/api/APIResourceAdditionalUser.ts","../src/api/APIUserResourceAccount.ts","../src/api/APIListDeviceTime.ts","../src/api/APIListFiles.ts","../src/api/APIListPurchased.ts","../src/api/APIListServices.ts","../src/api/APIListRuns.ts","../src/api/APIListNotifications.ts","../src/api/APIListSmartbearTunnels.ts","../src/api/APIResourceDeviceSessionStandalone.ts","../src/api/APIResourceUser.ts","../src/api/APIResourceDevice.ts","../src/api/APIResourceUserSession.ts","../src/api/APIAdminListRuns.ts","../src/api/APIAdminResourceCluster.ts","../src/api/APIAdminResourceDeviceTime.ts","../src/api/APIAdminResourceRunStandalone.ts","../src/api/APIAdminResourceDevice.ts","../src/api/APIAdminResourceAccountService.ts","../src/api/APIAdminResourceUserAccount.ts","../src/api/APIAdminResourceUser.ts","../src/api/APIAdminResourceDeviceSessionStandalone.ts","../src/api/factory/postAdminDeviceSessionChangeBillable.ts","../src/api/APIAdminListDevices.ts","../src/api/APIAdminResourceFramework.ts","../src/api/APIAdminResourceLicense.ts","../src/api/APIAdminListNotificationPlans.ts","../src/api/APIAdminResourceNotificationPlan.ts","../src/api/APIAdminResourceService.ts","../src/api/APIAdminListServices.ts","../src/api/APIAdminListStatistics.ts","../src/api/APIAdminResourceDeviceModel.ts","../src/api/APIAdminResource.ts","../src/api/APIResourceAccount.ts","../src/api/APIResourceBroker.ts","../src/API.ts","../src/CloudAPIClient.ts"],"sourcesContent":["import finka from '@bitbar/finka';\n\nfinka();\n\nexport default {};\n","import qs from 'qs';\nimport { AxiosRequestConfig, Method } from 'axios';\n\n\n/**\n * Allowed methods\n *\n * @constant\n * @type {Array}\n * @default\n */\nenum ALLOWED_HTTP_METHODS {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE'\n};\n\n\n/**\n * APIEntity\n *\n * @class\n * @abstract\n */\nclass APIEntity {\n\n  /**\n   * Stack\n   *\n   * @public\n   * @type {Array}\n   */\n  public stack: Array<string|number>;\n\n  /**\n   * object of request config\n   *\n   * @protected\n   * @type {AxiosRequestConfig}\n   */\n  protected requestConfig: AxiosRequestConfig;\n\n  /**\n   * Root\n   *\n   * @public\n   * @type {API}\n   */\n  public root: object;\n\n  /**\n   * Constructor\n   * @param {APIEntity|object} [parent] - Specifies a parent from which should be inherited properties\n   */\n  constructor (parent: APIEntity | object) {\n    this.stack = [];\n    this.requestConfig = {};\n\n    if (parent instanceof APIEntity) {\n      this.root = parent.root;\n\n      if (Array.isArray(parent.stack)) {\n        this.push(...parent.stack);\n      }\n\n      if (parent.requestConfig != null) {\n        this.setRequestConfig(parent.requestConfig);\n      }\n    } else {\n      this.root = parent;\n    }\n  }\n\n  /**\n   * Push\n   *\n   * @public\n   * @param {string|number} items... - Items that should be pushed to stack\n   * @returns this\n   */\n  public push (...items: Array<string|number>) {\n    for (const item of items) {\n      this.stack.push(item);\n    }\n    return this;\n  }\n\n  /**\n   * Pop\n   *\n   * @public\n   * @return this\n   */\n  public pop () {\n    this.stack.pop();\n    return this;\n  }\n\n  /**\n   * Shift\n   *\n   * @public\n   * @return this\n   */\n  public shift () {\n    this.stack.shift();\n    return this;\n  }\n\n  /**\n   * Unshift\n   *\n   * @public\n   * @return this\n   */\n   public unshift (...items: Array<string|number>) {\n    for (const item of items) {\n      this.stack.unshift(item);\n    }\n    return this;\n  }\n\n  public restack (...items: Array<string|number>) {\n    this.stack = items;\n    return this;\n  }\n\n  /**\n   * Get first element of the stack\n   */\n  public get first () {\n    return this.stack[0];\n  }\n\n  /**\n   * Set first element of the stack\n   */\n  public set first (val) {\n    this.stack[0] = val;\n  }\n\n  /**\n   * Get last element of the stack\n   */\n  public get last () {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Set last element of the stack\n   */\n  public set last (val) {\n    this.stack[this.stack.length - 1] = val;\n  }\n\n  /**\n   * To URL\n   *\n   * @param {boolean} absolute\n   */\n  public toUrl (absolute = false) {\n    let url = `/${this.stack.join('/')}`;\n\n    if (absolute) {\n      // @ts-ignore\n      url = this.root.axiosConfig.baseURL + url;\n    }\n\n    return url;\n  }\n\n  /**\n   * Set request config\n   *\n   * @public\n   * @param {AxiosRequestConfig} requestConfig - object of request config to be set\n   * @returns this\n   */\n  public setRequestConfig (requestConfig: AxiosRequestConfig) {\n    Object.deepAssign(this.requestConfig, requestConfig);\n    return this;\n  }\n\n  /**\n   * Remove request config key\n   *\n   * @public\n   * @param {string} key - Key to me removed from request config\n   * @returns this\n   */\n  public removeRequestConfig (key: string) {\n    // @ts-ignore\n    delete this.requestConfig[key];\n    return this;\n  }\n\n  /**\n   * Set headers\n   *\n   * @public\n   * @param {object} headers - Headers object\n   * @returns this\n   */\n  public headers (headers: object) {\n    const _headers = {};\n\n    // Unify/Standarize headers keys\n    for (const key in headers) {\n      const newKey = key.replace(/(?:^|-)([a-z])/g, (letter) => letter.toUpperCase());\n      // @ts-ignore\n      _headers[newKey] = headers[key];\n    }\n\n    // Set\n    return this.setRequestConfig({\n      headers: _headers\n    });\n  }\n\n  /**\n   * Set HTTP method\n   *\n   * @public\n   * @param {string} name - HTTP methods name\n   * @returns this\n   */\n  public method (name: Method) {\n    const NAME: Method = <Method> name.toLocaleUpperCase();\n\n    // @ts-ignore\n    if (!ALLOWED_HTTP_METHODS[NAME]) {\n      throw new Error(`Method '${NAME}' is not allowed! You can use: ${Object.keys(ALLOWED_HTTP_METHODS).join(', ')}`);\n    }\n\n    return this.setRequestConfig({\n      method: NAME\n    });\n  }\n\n  /**\n   * Set GET as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public get () {\n    return this.method('GET');\n  }\n\n  /**\n   * Set POST as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public post () {\n    return this.method('POST');\n  }\n\n  /**\n   * Set params\n   *\n   * @public\n   * @param {object} params - object of params to be set\n   * @returns this\n   */\n  public params (params: object) {\n    Object.deepAssign(this.requestConfig, {\n      params\n    });\n    return this;\n  }\n\n  /**\n   * Get params\n   *\n   * @public\n   * @returns object\n   */\n  public getParams () {\n    return this.requestConfig.params == null ? {} : this.requestConfig.params;\n  }\n\n  /**\n   * Remove params key\n   *\n   * @public\n   * @param {string} key - Key to me removed from params\n   * @returns this\n   */\n  public removeParam (key: string) {\n    delete this.requestConfig.params[key];\n    return this;\n  }\n\n  /**\n   * Set data\n   *\n   * @public\n   * @param {object} data - object of data to be set\n   * @returns this\n   */\n  public data (data: object) {\n    Object.deepAssign(this.requestConfig, {\n      data\n    });\n    return this;\n  }\n\n  /**\n   * Set JSON data\n   *\n   * @public\n   * @param {object} data - JSON object to be set\n   * @returns this\n   */\n  public jsonData (data: object) {\n    this.headers({\n      'Content-Type': 'application/json'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Set form data\n   *\n   * @public\n   * @param {object} data - JSON object to be set\n   * @returns this\n   */\n  public formData (data: FormData) {\n    this.headers({\n      'Content-Type': 'multipart/form-data'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Custom params serializer\n   * @private\n   * @param {object} params\n   */\n  private paramsSerializer (params: object) {\n    return qs.stringify(params, {\n      arrayFormat: 'brackets'\n    });\n  }\n\n  /**\n   * Send request\n   *\n   * @public\n   * @returns Promise\n   */\n  public send () {\n    const requestConfig = <AxiosRequestConfig> Object.deepAssign({}, this.requestConfig, {\n      url: `/${this.stack.join('/')}`\n    });\n\n    // Set default headers\n    if (requestConfig.headers == null) {\n      requestConfig.headers = {};\n    }\n\n    // Set default Content-Type\n    if (requestConfig.headers['Content-Type'] == null) {\n      requestConfig.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // Convert data if needed\n    if (requestConfig.method === 'POST' &&\n    requestConfig.headers['Content-Type'].startsWith('application/x-www-form-urlencoded') &&\n    requestConfig.data != null) {\n      requestConfig.data = qs.stringify(requestConfig.data, {\n        arrayFormat: 'brackets'\n      });\n    }\n\n    if (requestConfig.params) {\n      requestConfig.paramsSerializer = this.paramsSerializer;\n    }\n\n    // Send request\n    // @ts-ignore\n    return this.root.axios.request(requestConfig);\n  }\n}\n\n\nexport default APIEntity;\n","/**\n * Filter\n */\n\nclass Filter {\n  public name: string;\n  public value: any;\n  public operand: string;\n\n  constructor (name: string, value: any, operand: string) {\n    this.name = name;\n    this.value = value;\n    this.operand = operand;\n  }\n}\n\nexport default Filter;\n","import './finka';\nimport Filter from './Filter';\n\n/**\n * FilterBuilder\n *\n * Builds filter string according to Bitbar Cloud backend convention\n */\n\nclass FilterBuilder {\n\n  private filters: Array<Filter>;\n\n  constructor () {\n    this.filters = [];\n  }\n\n  /**\n   * Add filter to filters list\n   * @param name {string} Name\n   * @param value {*} Value\n   * @param operand {string} Operand\n   * @param [checkNull=false] {boolean} Check null?\n   * @returns {FilterBuilder}\n   */\n  private add (name: string, value: any, operand: string, checkNull = false): FilterBuilder {\n\n    value = Array.wrap(value);\n\n    if (value.length === 0) {\n      return this;\n    }\n\n    // auto-convert\n    for (let i = 0; i < value.length; i++) {\n      const v = value[i];\n      if (typeof v === 'object' && v instanceof Date) {\n        value[i] = v.getTime();\n      }\n    }\n\n    let isNull = false;\n    if (checkNull) {\n      // check null existence\n      for (const v of value) {\n        if (v !== null) {\n          continue;\n          isNull = true;\n        }\n      }\n\n      if (isNull) {\n        value = value.filter((item: any) => item !== null);\n        operand += 'ornull';\n      }\n    }\n\n    // @ts-ignore\n    if (operand.endsWith('ornull') && value.length === 0) {\n      operand = 'isnull';\n    }\n\n    // add filter\n    this.filters.push(new Filter(name, value, operand));\n\n    return this;\n  }\n\n\n\n  public gt (name: string, value: number) {\n    return this.add(name, value, 'gt');\n  }\n\n  public lt (name: string, value: number) {\n    return this.add(name, value, 'lt');\n  }\n\n  public after (name: string, value: Date | number) {\n    return this.add(name, value, 'after', true);\n  }\n\n  public afterorequal (name: string, value: Date | number) {\n    return this.add(name, value, 'afterorequal', true);\n  }\n\n  public before (name: string, value: Date | number) {\n    return this.add(name, value, 'before', true);\n  }\n\n  public beforeorequal (name: string, value: Date | number) {\n    return this.add(name, value, 'beforeorequal', true);\n  }\n\n  public on (name: string, value: any) {\n    return this.add(name, value, 'on');\n  }\n\n  public eq (name: string, value: any) {\n    return this.add(name, value, 'eq');\n  }\n\n  public contains (name: string, value: string) {\n    return this.add(name, value, 'contains');\n  }\n\n  public like (name: string, value: string) {\n    return this.add(name, value, 'like');\n  }\n\n  public notlike (name: string, value: string) {\n    return this.add(name, value, 'notlike');\n  }\n\n  public isnull (name: string) {\n    return this.add(name, undefined, 'isnull');\n  }\n\n  public in (name: string, value: Array<any>) {\n    return this.add(name, value, 'in', true);\n  }\n\n  public notin (name: string, value: Array<any>) {\n    return this.add(name, value, 'notin', true);\n  }\n\n\n  public raw (filter: Filter) {\n    const filters = Array.wrap(filter);\n    for (const filter of filters) {\n      if (this.isFilterPart(filter)) {\n        this.filters.push(filter);\n      } else {\n        throw new SyntaxError(`Filter ${filter} has invalid syntax`);\n      }\n    }\n  }\n\n  /**\n   * Check if given string is proper filter part\n   */\n  public isFilterPart (str: string) {\n    return /^[a-zA-Z0-9.]{2,12}_(?:isnull$|(?:gt|lt|(?:after|before)(?:orequal)?|on|eq|contains|like|(?:not)?in)_)/.test(<string> str);\n  }\n\n  /**\n   * To string\n   */\n  public toString () {\n    const parts: Array<string> = [];\n\n    let part: string,\n        val: string;\n\n    for (const filter of this.filters) {\n      if (typeof filter === 'string') {\n        part = filter;\n      } else {\n        val = '';\n        if (filter.value.length > 1 || typeof filter.value[0] !== 'undefined') {\n          val = `_${filter.value.join('|')}`;\n        }\n        part = `${filter.name}_${filter.operand}${val}`;\n      }\n      parts.push(part);\n    }\n\n    return parts.join(';');\n  }\n}\n\n\nexport default FilterBuilder;\n","import APIEntity from './APIEntity'\nimport FilterBuilder from '../FilterBuilder'\n\n\n/**\n * Default limit\n *\n * @constant\n * @type {number}\n * @default\n */\nconst DEFAULT_LIMIT = 20;\n\n/**\n * Default offset\n *\n * @constant\n * @type {number}\n * @default\n */\nconst DEFAULT_OFFSET = 0;\n\n/**\n * API Order Enum\n */\nenum APIOrder {\n  'asc' = 'a',\n  'desc' = 'd'\n};\n\n\n/**\n * APIList\n *\n * @class\n * @extends APIEntity\n */\nclass APIList extends APIEntity {\n\n  /**\n   * Create\n   * Shortcut for sending data POST\n   *\n   * @param {object} data\n   */\n  public create (data: object) {\n    return this.post().data(data).send();\n  }\n\n  /**\n   * Sets sorting\n   *\n   * @public\n   * @param {string} name - Name of the column according to which the data will be sorted\n   * @param {string} [order=a] - Sorting order. Possibilities: 'a', 'd'\n   * @returns this\n   */\n  public sort (name: string, order: APIOrder = APIOrder.asc) {\n    // if order not in ['a', 'd']\n    //   throw new Error(`Order '\\${order}' is invalid! Use 'a' for ascending or 'd' for descending.`);\n\n    return this.params({\n      sort: `${name}_${order}`\n    });\n  }\n\n  /**\n   * Sets limit\n   *\n   * @public\n   * @param {number} [limit=DEFAULT_LIMIT] - Limit to be set\n   * @returns this\n   */\n  public limit (limit = DEFAULT_LIMIT) {\n    if (!Number.isNatural(limit)) {\n      throw new Error(`Limit '${limit}' is invalid!`);\n    }\n\n    return this.params({\n      limit\n    });\n  }\n\n  /**\n   * Gets limit\n   *\n   * @public\n   * @returns number\n   */\n  public getLimit () {\n    const params = this.getParams();\n    return params.limit == null ? DEFAULT_LIMIT : params.limit;\n  }\n\n  /**\n   * Disables limit\n   *\n   * @public\n   * @returns this\n   */\n  public noLimit () {\n    return this.limit(0);\n  }\n\n  /**\n   * Sets offset\n   *\n   * @public\n   * @param {number} [offset=DEFAULT_OFFSET] - Offset to be set\n   * @returns this\n   */\n  public offset (offset: number = DEFAULT_OFFSET) {\n    if (!Number.isNatural(offset)) {\n      throw new Error(`Offset '${offset}' is invalid!`);\n    }\n\n    return this.params({\n      offset\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE records between range\n   *\n   * @public\n   * @param {number} from - From index\n   * @param {number} to - To index\n   * @returns this\n   */\n  public between (from: number, to: number) {\n    if (!Number.isNatural(from)) {\n      throw new Error(`From '${from}' is invalid!`);\n    }\n\n    if (!Number.isNatural(to)) {\n      throw new Error(`To '${to}' is invalid!`);\n    }\n\n    return this.params({\n      offset: from,\n      limit: 1 + (to - from)\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE one record on given index\n   *\n   * @public\n   * @param {number} idx - Index\n   * @returns this\n   */\n  public only (idx: number) {\n    if (!Number.isNatural(idx)) {\n      throw new Error(`Index '${idx}' is invalid!`);\n    }\n\n    return this.params({\n      offset: idx,\n      limit: 1\n    });\n  }\n\n  /**\n   * Gets current limit and sets offset so that will request from BE one page of records\n   *\n   * @public\n   * @param {number} [page=1] - Page number (counted from 1)\n   * @returns this\n   */\n  public page (page = 1) {\n    if (!Number.isNatural(page) || page == 0) {\n      throw new Error(`Page '${page}' is invalid!`);\n    }\n\n    const limit = this.getLimit();\n    const offset = (page - 1) * limit;\n\n    return this.params({\n      offset,\n      limit\n    });\n  }\n\n  /**\n   * Sets search\n   *\n   * query param is working like SQL LIKE. BE sets wraps around query with %, and replaces every white character\n   * with %. So e.g. if query='my device', then it's searching for '%my%device%' in DB.\n   *\n   * @public\n   * @param {string} query - Query to search for\n   * @returns this\n   */\n  public search (query: string) {\n    if (typeof query !== 'string') {\n      throw new Error('Search query must be a string!');\n    }\n\n    return this.params({\n      search: query\n    });\n  }\n\n  /**\n   * Sets filter\n   *\n   * @public\n   * @param {FilterBuilder|string} filter - Filter\n   * @returns this\n   */\n  public filter (filter: FilterBuilder | string) {\n    const isFilterBuilder = filter instanceof FilterBuilder;\n\n    if (typeof filter !== 'string' && !isFilterBuilder) {\n      throw new Error('Filter must be either string or instance of FilterBuilder');\n    }\n\n    if (isFilterBuilder) {\n      filter = filter.toString();\n    }\n\n    return this.params({\n      filter\n    });\n  }\n}\n\ninterface APIList {\n\n  /**\n   * Alias for 'noLimit'\n   *\n   * @public\n   * @see noLimit\n   * @returns this\n   */\n  all: typeof APIList.prototype.noLimit;\n\n  /**\n   * Alias for 'between'\n   *\n   * @public\n   * @param {number} from - From idx\n   * @param {number} to - To idx\n   * @returns this\n   */\n  cut: typeof APIList.prototype.between;\n}\n\nAPIList.prototype.all = APIList.prototype.noLimit;\nAPIList.prototype.cut = APIList.prototype.between;\n\nexport default APIList;\n","import APIEntity from './APIEntity'\n\n\n/**\n * APIResource\n *\n * @class\n * @extends APIEntity\n */\nclass APIResource extends APIEntity {\n\n  /**\n   * Set DELETE as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public delete () {\n    return this.method('DELETE');\n  }\n}\n\n\nexport default APIResource\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIListCleanupConfigurations\n *\n * @class\n * @extends APIList\n */\nclass APIListCleanupConfigurations extends APIList {\n\n  /**\n   * /builds/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('cleanup-configurations');\n  }\n\n  // /cleanup-configurations/specific\n  public specific () {\n    return new APIResource(this).push('specific');\n  }\n\n}\n\nexport default APIListCleanupConfigurations\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceCleanupConfiguration\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceCleanupConfiguration extends APIResource {\n\n  /**\n   * /cleanup-configurations/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('cleanup-configurations', id);\n  }\n\n  // /cleanup-configurations/specific\n  public devices () {\n    return new APIList(this).push('devices');\n  }\n\n}\n\nexport default APIResourceCleanupConfiguration\n","import APIList from './APIList'\nimport APIResource from './APIResource'\nimport APIListCleanupConfigurations from \"./APIListCleanupConfigurations\";\nimport APIResourceCleanupConfiguration from \"./APIResourceCleanupConfiguration\";\n\n\n/**\n * APIListDevices\n *\n * @class\n * @extends APIList\n */\nclass APIListDevices extends APIList {\n\n  /**\n   * /devices\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('devices');\n  }\n\n  // /devices/filters\n  public filters () {\n    return new APIResource(this).push('filters');\n  }\n\n  // /devices/cleanup-configurations\n  public cleanupConfigurations () {\n    return new APIListCleanupConfigurations(this);\n  }\n\n  /**\n   * /devices/cleanup-configurations/{id}\n   *\n   * @param {number} id - Resource ID\n   */\n  public cleanupConfiguration (id: number) {\n    return new APIResourceCleanupConfiguration(this, id);\n  }\n\n  // /devices/desktop-browser-capabilities\n  public desktopBrowserCapabilities () {\n    return new APIResource(this).push('desktop-browser-capabilities');\n  }\n\n}\n\nexport default APIListDevices;\n","import APIList from './APIList'\nimport APIResource from './APIResource'\n\n\n/**\n * APIListDevices\n *\n * @class\n * @extends APIList\n */\nclass APIListUsers extends APIList {\n\n  /**\n   * /users\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('users');\n  }\n\n  // /users/activate\n  public activate () {\n    return new APIResource(this).push('activate').post();\n  }\n\n  // /users/recoveries\n  public recoveries () {\n    return new APIResource(this).push('recoveries');\n  }\n\n  // /users/passwordRecovery\n  public passwordRecovery () {\n    return new APIResource(this).push('password-recovery');\n  }\n\n  // /users/resetApiKey\n  public resetApiKey () {\n    return new APIResource(this).push('reset-api-key');\n  }\n\n  // /users/resetApiKey\n  public validateVatId () {\n    return new APIResource(this).push('validateVatId');\n  }\n\n}\n\nexport default APIListUsers;\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceBillingPeriod\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceBillingPeriod extends APIResource {\n\n  /**\n   * /billing-periods/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('billing-periods', id);\n  }\n\n  // /billing-periods/{id}/receipt\n  public receipt () {\n    return new APIResource(this).push('receipt').setRequestConfig({\n      responseType: 'arraybuffer'\n    });\n  }\n\n}\n\nexport default APIResourceBillingPeriod\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceBuild\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceBuild extends APIResource {\n\n  /**\n   * /builds/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('builds', id);\n  }\n\n  // /builds/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort');\n  }\n\n  // /builds/{id}/output-file-set/files\n  public outputFiles () {\n    return new APIList(this).push('output-file-set', 'files');\n  }\n\n}\n\nexport default APIResourceBuild\n","import APIResource from './APIResource'\nimport APIResourceBuild from './APIResourceBuild'\n\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceJob extends APIResource {\n\n  /**\n   * /jobs/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('jobs', id);\n  }\n\n  // /jobs/{id}/builds\n  public builds () {\n    return new APIList(this).push('builds');\n  }\n\n  // /jobs/{id}/builds/{id}\n  public build (id: number) {\n    return new APIResourceBuild(this, id);\n  }\n\n}\n\nexport default APIResourceJob\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceBillingPeriod\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceGroup extends APIResource {\n\n  /**\n   * /device-groups/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-groups', id);\n  }\n\n  // /device-groups/{id}/devices\n  public devices () {\n    return new APIList(this).push('devices');\n  }\n\n  // /device-groups/{id}/device/{id}\n  public device (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('devices', id);\n  }\n\n  // /device-groups/{id}/selectors\n  public selectors () {\n    return new APIList(this).push('selectors');\n  }\n\n  // /device-groups/{id}/selectors/{id}\n  public selector (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('selectors', id);\n  }\n\n  // /device-groups/{id}/share\n  public share () {\n    return new APIResource(this).push('share');\n  }\n\n}\n\nexport default APIResourceDeviceGroup\n","import APIEntity from '../APIEntity';\nimport APIResource from '../APIResource';\n\nfunction postDeviceRunIds (parent: APIEntity, name: string, ids?: Array<number>) {\n    const a = new APIResource(parent).push(name);\n\n    if (ids != null) {\n      a.params({\n        deviceRunIds: ids\n      });\n    }\n\n    return a.post(); \n}\n\nexport default postDeviceRunIds;\n","import APIResource from './APIResource'\nimport APIList from './APIList'\nimport postDeviceRunIds from './factory/postDeviceRunIds';\n\n\n/**\n * APIResourceRun\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceRunCommon extends APIResource {\n\n  /**\n   * /runs/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('runs', id);\n  }\n\n  // /runs/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort').post();\n  }\n\n  // /runs/{id}/data-availability\n  public dataAvailability () {\n    return new APIList(this).push('data-availability');\n  }\n\n  // /runs/{id}/device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /runs/{id}/files.zip\n  public filesZip (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'files.zip', ids);\n  }\n\n  // /runs/{id}/logs.zip\n  public logsZip (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'logs.zip', ids);\n  }\n\n  // /runs/{id}/performance.zip\n  public performanceZip (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'performance.zip', ids);\n  }\n\n  // /runs/{id}/retry\n  public retry (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n  // /runs/{id}/screenshot-names\n  public screenshotNames () {\n    return new APIList(this).push('screenshot-names');\n  }\n\n  // /runs/{id}/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /runs/{id}/screenshots.zip\n  public screenshotsZip (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'screenshots.zip', ids);\n  }\n\n  // /runs/{id}/steps\n  public steps () {\n    return new APIList(this).push('steps');\n  }\n\n  // /runs/{id}/tags\n  public tags () {\n    return new APIList(this).push('tags');\n  }\n\n  // /runs/{id}/tag\n  public tag (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('tags', id);\n  }\n\n}\n\nexport default APIResourceRunCommon\n","import APIResource from '../APIResource'\nimport APIList from '../APIList'\n\n/**\n * InputFileset\n *\n * @class\n * @extends APIResource\n */\nclass InputFileset extends APIResource {\n\n  /**\n   * /input-file-set\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('input-file-set');\n  }\n\n  // /input-file-set/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /input-file-set/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n}\n\nexport default InputFileset\n","import APIResource from '../APIResource'\nimport APIList from '../APIList'\n\nimport FilterBuilder from '../../FilterBuilder'\n\n// Create non-media files filter\nconst NON_MEDIA_FILES_FILTER = new FilterBuilder();\nNON_MEDIA_FILES_FILTER.eq('state', 'READY');\nNON_MEDIA_FILES_FILTER.notin('mimetype', [\n  // no images\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif',\n\n  // no videos\n  'video/mp4', 'video/avi', 'video/webm', 'video/ogg', 'video/mpeg'\n]);\n\n/**\n * OutputFileset\n *\n * @class\n * @extends APIResource\n */\nclass OutputFileset extends APIResource {\n\n  /**\n   * /output-file-set\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('output-file-set');\n  }\n\n  // /output-file-set/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /output-file-set/files/{id}\n  public file (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('files', id);\n  }\n\n  // /output-file-set/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n\n  // /output-file-set/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /output-file-set/screenshots/{id}\n  public screenshot (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /output-file-set/screenshots/{id}/file/{id}\n  public screenshotFile (id: number) {\n    this.screenshot(id).push('file');\n  }\n\n  // Filter files out by ready videos\n  public videos () {\n    return this.files().params({\n      filter: 's_state_eq_READY',\n      tag: ['video']\n    });\n  }\n\n  // Filter files out by non-media\n  public nonMediaFiles () {\n    return this.files().filter(NON_MEDIA_FILES_FILTER);\n  }\n\n}\n\nexport default OutputFileset\n","import APIResource from './APIResource'\nimport APIList from './APIList';\n\nimport InputFileset from './class/InputFileset'\nimport OutputFileset from './class/OutputFileset'\n\nimport DeviceSessionCommon from './interface/DeviceSessionCommon';\n\n\n/**\n * APIResourceDeviceSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceSessionCommon extends APIResource implements DeviceSessionCommon {\n\n  /**\n   * /device-sessions/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/commands\n  public commands () {\n    return new APIList(this).push('commands');\n  }\n\n  // /device-sessions/{id}/input-file-set\n  public input () {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  public output () {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /device-sessions/{id}/screenshots/{id}\n  public screenshot (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /device-sessions/{id}/steps\n  public steps () {\n    return new APIList(this).push('steps');\n  }\n\n  // /device-sessions/{id}/steps/{id}\n  public step (id: number | 'current') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('steps', id);\n  }\n\n  // /device-sessions/{id}/steps/current\n  public currentStep () {\n    return this.step('current');\n  }\n\n  // /device-sessions/{id}/test-case-runs\n  public testCaseRuns () {\n    return new APIList(this).push('test-case-runs');\n  }\n\n}\n\nexport default APIResourceDeviceSessionCommon\n","import APIResource from './APIResource';\nimport APIResourceDeviceSessionCommon from './APIResourceDeviceSessionCommon';\n\nimport DeviceSession from './interface/DeviceSession';\n\n\n/**\n * APIResourceDeviceSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceSession extends APIResourceDeviceSessionCommon implements DeviceSession {\n\n  // /device-sessions/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort').post();\n  }\n\n  // /device-sessions/{id}/retry\n  public retry () {\n    return new APIResource(this).push('retry').post();\n  }\n\n}\n\nexport default APIResourceDeviceSession\n","import APIResourceRunCommon from './APIResourceRunCommon'\nimport APIResourceDeviceSession from './APIResourceDeviceSession'\n\n\n/**\n * APIResourceRun\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceRun extends APIResourceRunCommon {\n\n  // /runs/{id}/device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n}\n\nexport default APIResourceRun\n","import APIResource from './APIResource'\nimport APIResourceRun from './APIResourceRun'\n\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceProject extends APIResource {\n\n  /**\n   * /projects/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('projects', id);\n  }\n\n  // /projects/{id}/runs\n  public runs () {\n    return new APIList(this).push('runs');\n  }\n\n  // /projects/{id}/runs/{id}\n  public run (id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n  // /projects/{id}/runs-extended\n  public runsExtended () {\n    return new APIList(this).push('runs-extended');\n  }\n\n  // /projects/{id}/runs-extended/{id}\n  public runExtended (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('runs-extended', id);\n  }\n\n  // /projects/{id}/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /projects/{id}/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n\n  // /projects/{id}/sharings\n  public sharings () {\n    return new APIList(this).push('sharings');\n  }\n\n  // /projects/{id}/sharings/{id}\n  public sharing (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('sharings', id);\n  }\n\n}\n\nexport default APIResourceProject\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceFile extends APIResource {\n\n  /**\n   * /files/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('files', id);\n  }\n\n  // use this to download file content\n  public file () {\n    return new APIResource(this).push('file');\n  }\n\n  // /files/{id}/icon\n  public icon () {\n    return new APIResource(this).push('icon');\n  }\n\n  // /files/{id}/tags\n  public tags () {\n    return new APIList(this).push('tags');\n  }\n\n}\n\nexport default APIResourceFile\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceNotification\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceNotification extends APIResource {\n\n  /**\n   * /notifications/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('notifications', id);\n  }\n\n  // /notifications/{id}/test\n  public test () {\n    return new APIResource(this).push('test');\n  }\n\n}\n\nexport default APIResourceNotification\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceAccessGroup\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAccessGroup extends APIResource {\n\n  /**\n   * /device-groups/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('access-groups', id);\n  }\n\n  // /access-groups/{id}/users\n  public users () {\n    return new APIList(this).push('users');\n  }\n\n  // /access-groups/{id}/users/{id}\n  public user (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('users', id);\n  }\n\n  // /access-groups/{id}/resources\n  public resources () {\n    return new APIList(this).push('resources');\n  }\n\n  // /access-groups/{id}/resources/{id}\n  public resource (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('resources', id);\n  }\n\n}\n\nexport default APIResourceAccessGroup\n","import APIResource from './APIResource'\n\n/**\n * APIResourceAdditionalUser\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAdditionalUser extends APIResource {\n\n  /**\n   * /additional-users/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('additional-users', id);\n  }\n\n  // /account/resend-activation\n  public resendActivation () {\n    return new APIResource(this).push('resend-activation');\n  }\n\n}\n\nexport default APIResourceAdditionalUser\n","import APIResource from './APIResource'\nimport APIResourceAdditionalUser from './APIResourceAdditionalUser';\n\nimport APIList from './APIList'\n\n/**\n * APIUserResourceAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIUserResourceAccount extends APIResource {\n\n  /**\n   * /account\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/additional-users\n  public additionalUsers () {\n    return new APIList(this).push('additional-users');\n  }\n\n  // /account/additional-users/{id}\n  public additionalUser (id: number) {\n    return new APIResourceAdditionalUser(this, id);\n  }\n\n  // /account-services/{id}/billing-period\n  public serviceBillingPeriod (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const a = new APIResource(this);\n    a.last += '-services';\n    a.push(id, 'billing-period');\n    return a;\n  }\n\n}\n\nexport default APIUserResourceAccount\n","import APIList from './APIList'\n\n\n/**\n * APIListDeviceTime\n *\n * @class\n * @extends APIList\n */\nclass APIListDeviceTime extends APIList {\n\n  /**\n   * /device-time\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('device-time');\n  }\n\n  // /device-time/reserved\n  public reserved () {\n    return new APIList(this).push('reserved');\n  }\n\n  // /device-time/used\n  public used () {\n    return new APIList(this).push('used');\n  }\n\n}\n\nexport default APIListDeviceTime;\n","import APIList from './APIList'\n\ninterface UploadObj {\n  /**\n   * Directory\n   */\n  dir: string;\n\n  /**\n   * Filename\n   */\n  filename: string;\n}\n\n/**\n * APIListFiles\n *\n * @class\n * @extends APIList\n */\nclass APIListFiles extends APIList {\n\n  // Constructor\n  constructor (parent: object) {\n    super(parent);\n    this.push('files');\n  }\n\n  // Siplifies process of uploading\n  public upload (obj: UploadObj) {\n    let form;\n\n    // For NodeJS\n    // @ts-ignore\n    if (global.isNodeJs) {\n      // @ts-ignore\n      const fs = require('fs');\n      // @ts-ignore\n      const FormData = require('form-data');\n\n      form = new FormData();\n      form.append('file', fs.createReadStream(obj.dir + '/' + obj.filename), {\n        filename: obj.filename\n      });\n\n    /**\n     * Browser\n     * @todo\n     */\n    } else {\n      throw new Error('Not supported yet!');\n    }\n\n    return this.post().headers(form.getHeaders()).data(form);\n  }\n\n}\n\nexport default APIListFiles\n","import APIList from './APIList'\n\n\n/**\n * APIListPurchased\n *\n * @class\n * @extends APIList\n */\nclass APIListPurchased extends APIList {\n\n  /**\n   * /purchased\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('purchased');\n  }\n\n}\n\nexport default APIListPurchased\n","import APIList from './APIList'\nimport APIListPurchased from './APIListPurchased'\n\n\n/**\n * APIListServices\n *\n * @class\n * @extends APIList\n */\nclass APIListServices extends APIList {\n\n  // Constructor\n  constructor (parent: object) {\n    super(parent);\n    this.push('services');\n  }\n\n  // /services/purchased\n  public purchased () {\n    return new APIListPurchased(this);\n  }\n\n  // /services/available\n  public available () {\n    return new APIList(this).push('available');\n  }\n\n  public active () {\n    const a = new APIList(this);\n    if (this.first === 'me') {\n      a.push('active');\n    } else {\n      a.params({\n        notArchived: true\n      });\n    }\n    return a;\n  }\n\n}\n\nexport default APIListServices\n","import APIList from './APIList'\nimport APIResource from './APIResource'\n\n\n/**\n * APIListRuns\n *\n * @class\n * @extends APIList\n */\nclass APIListRuns extends APIList {\n\n  /**\n   * /runs\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('runs');\n  }\n\n  // /runs/config\n  public config () {\n    return new APIResource(this).push('config');\n  }\n\n}\n\nexport default APIListRuns\n","import APIList from './APIList'\n\n\n/**\n * APIListNotifications\n *\n * @class\n * @extends APIList\n */\nclass APIListNotifications extends APIList {\n\n  /**\n   * /notifications\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('notifications');\n  }\n\n  // /notifications/scopes\n  public scopes () {\n    return new APIList(this).push('scopes');\n  }\n\n  // /notifications/channels\n  public channels () {\n    return new APIList(this).push('channels');\n  }\n\n}\n\nexport default APIListNotifications\n","import APIList from './APIList'\n\n/**\n * APIListSmartbearTunnels\n *\n * @class\n * @extends APIList\n */\nclass APIListSmartbearTunnels extends APIList {\n\n  /**\n   * /tunnels\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('tunnels');\n  }\n\n  /**\n   * Sets tunnel activity parameter\n   *\n   * @public\n   * @param {number} active - fetching active or inactive tunnels\n   * @returns this\n   */\n  public active (active: boolean) {\n    return this.params({ active: active });\n  }\n}\n\nexport default APIListSmartbearTunnels;\n","import DeviceSessionStandalone from './interface/DeviceSessionStandalone';\nimport APIList from './APIList';\nimport APIResource from './APIResource';\n\nimport InputFileset from './class/InputFileset';\nimport OutputFileset from './class/OutputFileset';\n\n\n/**\n * APIResourceDeviceSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceSessionStandalone extends APIResource implements DeviceSessionStandalone {\n\n  /**\n   * /device-sessions/{id}\n   *\n   * Constructor\n   */\n   constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/connections\n  public connections () {\n    return new APIList(this).push('connections');\n  }\n\n  // /device-sessions/{id}/connections/{id}\n  public connection (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('connections', id);\n  }\n\n  // /device-sessions/{id}/input-file-set\n  public input () {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  public output () {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/release\n  public release () {\n    return new APIResource(this).push('release').post();\n  }\n\n}\n\nexport default APIResourceDeviceSessionStandalone\n","import APIResource from './APIResource'\nimport APIResourceBillingPeriod from './APIResourceBillingPeriod'\nimport APIResourceJob from './APIResourceJob'\nimport APIResourceDeviceGroup from './APIResourceDeviceGroup'\nimport APIResourceProject from './APIResourceProject'\nimport APIResourceFile from './APIResourceFile'\nimport APIResourceNotification from './APIResourceNotification'\nimport APIResourceAccessGroup from './APIResourceAccessGroup'\n\nimport APIUserResourceAccount from './APIUserResourceAccount'\n\nimport APIList from './APIList'\nimport APIListDeviceTime from './APIListDeviceTime'\nimport APIListFiles from './APIListFiles'\nimport APIListServices from './APIListServices'\nimport APIListRuns from './APIListRuns'\nimport APIListNotifications from './APIListNotifications'\nimport APIListSmartbearTunnels from './APIListSmartbearTunnels'\nimport APIResourceDeviceSessionStandalone from './APIResourceDeviceSessionStandalone'\n\n\n/**\n * APIResourceUser\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceUser extends APIResource {\n\n  /**\n   * /users/{id} | /me\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number | 'me') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n\n    if (id === 'me') {\n      this.push('me');\n    } else if (typeof id === 'number') {\n      this.push('users', id);\n    } else {\n      throw new TypeError('id is not a number');\n    }\n  }\n\n  // /users/{id}/account\n  public account () {\n    return new APIUserResourceAccount(this);\n  }\n\n  // /users/{id}/device-time\n  public deviceTime () {\n    return new APIListDeviceTime(this);\n  }\n\n  // /users/{id}/device-time-summary\n  public deviceTimeSummary () {\n    return new APIList(this).push('device-time-summary');\n  }\n\n  // /users/{id}/services\n  public services () {\n    return new APIListServices(this);\n  }\n\n  // /users/{id}/services/{id}\n  public service (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('services', id);\n  }\n\n  // /users/{id}/billing-periods\n  public billingPeriods () {\n    return new APIList(this).push('billing-periods');\n  }\n\n  // /users/{id}/billing-periods/{id}\n  public billingPeriod (id: number) {\n    return new APIResourceBillingPeriod(this, id);\n  }\n\n  // /users/{id}/jobs\n  public jobs () {\n    return new APIList(this).push('jobs');\n  }\n\n  // /users/{id}/jobs/{id}\n  public job (id: number) {\n    return new APIResourceJob(this, id);\n  }\n\n  // /users/{id}/device-groups\n  public deviceGroups () {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /users/{id}/device-groups/{id}\n  public deviceGroup (id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /users/{id}/device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /users/{id}/device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /users/{id}/projects\n  public projects () {\n    return new APIList(this).push('projects');\n  }\n\n  // /users/{id}/projects/{id}\n  public project (id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /users/{id}/files\n  public files () {\n    return new APIListFiles(this);\n  }\n\n  // /users/{id}/files/{id}\n  public file (id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /users/{id}/runs\n  public runs () {\n    return new APIListRuns(this);\n  }\n\n  // /users/{id}/available-build-executors\n  public availableBuildExecutors () {\n    return new APIList(this).push('available-build-executors');\n  }\n\n  // /users/{id}/available-frameworks\n  public availableFrameworks () {\n    return new APIList(this).push('available-frameworks');\n  }\n\n  /**\n   * /users/{id}/\n   * /users/{id}/reset-api-key\n   */\n  public resetApiKey () {\n    return new APIResource(this).push('reset-api-key');\n  }\n\n  // /users/{id}/restore\n  public restore () {\n    return new APIResource(this).push('restore');\n  }\n\n  // /users/{id}/feedback\n  public feedback () {\n    return new APIResource(this).push('feedback');\n  }\n\n  // /users/{id}/notifications\n  public notifications () {\n    return new APIListNotifications(this);\n  }\n\n  // /users/{id}/notifications/{id}\n  public notification (id: number) {\n    return new APIResourceNotification(this, id);\n  }\n\n  // /users/{id}/receipts\n  public receipts () {\n    return new APIList(this).push('receipts');\n  }\n\n  // /users/{id}/preferences\n  public preferences () {\n    return new APIResource(this).push('preferences');\n  }\n\n  // /users/{id}/ui-preferences\n  public uiPreferences () {\n    return new APIResource(this).push('ui-preferences');\n  }\n\n  // /users/{id}/device-usage\n  public deviceUsage () {\n    return new APIList(this).push('device-usage');\n  }\n\n  // /users/{id}/statistics\n  public statistics () {\n    return new APIList(this).push('statistics');\n  }\n\n  // /users/{id}/statistics\n  public deviceStatistics () {\n    return new APIList(this).push('device-statistics');\n  }\n\n  // /users/{id}/access-groups\n  public accessGroups () {\n    return new APIList(this).push('access-groups');\n  }\n\n  // /users/{id}/access-groups/{id}\n  public accessGroup (id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /users/{id}/tunnels/{id}\n  public smartbearTunnel (id: number) {\n    return new APIResource(this).push('tunnels', id);\n  }\n\n  // /users/{id}/tunnels\n  public smartbearTunnels () {\n    return new APIListSmartbearTunnels(this);\n  }\n}\n\nexport default APIResourceUser\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDevice extends APIResource {\n\n  /**\n   * /devices/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('devices', id);\n  }\n\n  // /devices/{id}/properties\n  public properties () {\n    return new APIList(this).push('properties');\n  }\n\n}\n\nexport default APIResourceDevice\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceUserSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceUserSession extends APIResource {\n\n  // Constructor\n  // /user-sessions\n  constructor (parent: object) {\n    super(parent);\n    this.push('user-sessions');\n  }\n\n  // /user-sessions/login\n  public login (data: object) {\n    return new APIResource(this).push('login').post().data(data);\n  }\n\n  // /user-sessions/logout\n  public logout () {\n    return new APIResource(this).push('logout').post();\n  }\n\n  // /user-sessions/{name}-login\n  public sso (name: string) {\n    return new APIResource(this).push(name + '-login');\n  }\n\n  // /user-sessions/portal-login\n  public portalLogin () {\n    return new APIResource(this).push('portal-login').post();\n  }\n\n}\n\nexport default APIResourceUserSession\n","import APIList from './APIList'\nimport APIResource from './APIResource';\n\n\n/**\n * APIAdminListRuns\n *\n * @class\n * @extends APIList\n */\nclass APIAdminListRuns extends APIList {\n\n  /**\n   * /admin/runs\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'runs');\n  }\n\n  // /runs/config\n  public config () {\n    const a = new APIResource(this);\n    a.stack = ['runs', 'config'];\n    return a;\n  }\n\n}\n\n\nexport default APIAdminListRuns\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceCluster\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceCluster extends APIResource {\n\n  /**\n   * /clusters/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('clusters', id);\n  }\n\n  // /clusters/{id}/devices\n  public devices () {\n    return new APIList(this).push('devices');\n  }\n\n}\n\nexport default APIAdminResourceCluster\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceDeviceTime\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDeviceTime extends APIResource {\n\n  /**\n   * /device-time\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'device-time');\n  }\n\n  // /device-time/count-session-report\n  public countSessionReport () {\n    return new APIList(this).push('count-session-report');\n  }\n\n  // /device-time/step-time-report\n  public stepTimeReport () {\n    return new APIList(this).push('step-time-report');\n  }\n\n}\n\nexport default APIAdminResourceDeviceTime\n","import APIList from './APIList';\nimport APIResource from './APIResource'\nimport APIResourceDeviceSessionCommon from './APIResourceDeviceSessionCommon';\nimport postDeviceRunIds from './factory/postDeviceRunIds';\n\n\n/**\n * APIAdminResourceRun\n *\n * @class\n * @extends APIResourceRun\n */\nclass APIAdminResourceRunStandalone extends APIResource {\n\n  /**\n   * /runs/{id}\n   *\n   * Constructor\n   */\n   constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'runs', id);\n  }\n\n  // /runs/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort').post();\n  }  \n\n  // /runs/{id}/changebillable\n  public changeBillable (billable: boolean) {\n    return new APIResource(this).push('changebillable').post().params({\n      billable\n    });\n  }\n\n  // /runs/{id}/changepriority\n  public changePriority (priority: boolean) {\n    return new APIResource(this).push('changepriority').post().params({\n      priority\n    });\n  }\n\n  // /runs/{id}/retry\n  public retry (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n  // /runs/{id}/device-sessions\n  public deviceSessions () {\n    return new APIList(this).shift().push('device-sessions');\n  }\n\n  // /runs/{id}/device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSessionCommon(this, id).shift();\n  }\n\n}\n\nexport default APIAdminResourceRunStandalone\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDevice extends APIResource {\n\n  /**\n   * /admin/devices/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'devices', id);\n  }\n\n  // /admin/devices/{id}/queue\n  public queue () {\n    return new APIList(this).push('queue');\n  }\n\n  // /admin/devices/{id}/cleanup-configuration\n  public cleanupConfiguration () {\n    return new APIResource(this).push('cleanup-configuration');\n  }\n\n  // /admin/devices/{id}/labels\n  public labels () {\n    return new APIList(this).push('labels');\n  }\n\n  // /admin/devices/{id}/labels/{id}\n  public label (id: number) {\n    return new APIResource(this).push('labels', id);\n  }\n\n  // /admin/devices/{id}/blink\n  public blink () {\n    return new APIResource(this).push('blink').post();\n  }\n\n}\n\nexport default APIAdminResourceDevice\n","import APIResource from './APIResource'\n\n/**\n * APIAdminResourceAccountService\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceAccountService extends APIResource {\n\n  /**\n   * /account-services/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'account-services', id);\n  }\n\n  // /account-services/{id}/activate\n  public activate () {\n    return new APIResource(this).push('activate').post();\n  }\n\n  // /account-services/{id}/deactivate\n  public deactivate () {\n    return new APIResource(this).push('deactivate').post();\n  }\n\n}\n\nexport default APIAdminResourceAccountService\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceUserAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceUserAccount extends APIResource {\n\n  /**\n   * /acount\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/roles\n  public roles () {\n    return new APIList(this).push('roles');\n  }\n\n  // /account/roles/{id}\n  public role (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('roles', id);\n  }\n\n  // /account-services\n  public services () {\n    const a = new APIList(this);\n    a.last += '-services';\n    return a;\n  }\n\n  // /update-account\n  public update () {\n    const a = new APIResource(this);\n    a.last = 'update-account';\n    return a.post();\n  }\n\n}\n\nexport default APIAdminResourceUserAccount\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\nimport APIAdminResourceUserAccount from './APIAdminResourceUserAccount';\n\n\n/**\n * APIAdminResourceUser\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceUser extends APIResource {\n\n  /**\n   * /users/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'users', id);\n  }\n\n  // /users/{id}/disable\n  public disable () {\n    return new APIResource(this).push('disable');\n  }\n\n  // /users/{id}/enable\n  public enable () {\n    return new APIResource(this).push('enable');\n  }\n\n  // /users/{id}/licenses\n  public licenses () {\n    return new APIList(this).push('licenses');\n  }\n\n  // /users/{id}/resend-activation\n  public resendActivation () {\n    return new APIResource(this).push('resend-activation').post();\n  }\n\n  // users/{id}/account\n  public account () {\n    return new APIAdminResourceUserAccount(this);\n  }\n\n}\n\nexport default APIAdminResourceUser\n","import APIResource from './APIResource'\nimport APIList from './APIList';\n\nimport APIResourceDeviceSessionCommon from './APIResourceDeviceSessionCommon';\n\nimport postAdminDeviceSessionChangeBillable from './factory/postAdminDeviceSessionChangeBillable';\n\nimport DeviceSessionStandalone from './interface/DeviceSessionStandalone';\nimport DeviceSessionCommon from './interface/DeviceSessionCommon';\n\n\n/**\n * APIAdminResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDeviceSessionStandalone extends APIResourceDeviceSessionCommon implements DeviceSessionCommon, DeviceSessionStandalone {\n\n  // /admin/device-sessions/{id}/changebillable\n  public changeBillable (billable: boolean) {\n    return postAdminDeviceSessionChangeBillable(this, billable);\n  }\n\n  // /device-sessions/{id}/connections\n  public connections () {\n    return new APIList(this).push('connections');\n  }\n\n  // /device-sessions/{id}/connections/{id}\n  public connection (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('connections', id);\n  }\n\n  // /device-sessions/{id}/release\n  public release () {\n    return new APIResource(this).push('release').post();\n  }\n\n}\n\nexport default APIAdminResourceDeviceSessionStandalone\n","import APIEntity from '../APIEntity';\nimport APIResource from '../APIResource';\n\nfunction postAdminDeviceSessionChangeBillable (parent: APIEntity, billable: boolean) {\n    const a = new APIResource(parent);\n    const deviceSessionId = a.last;\n\n    return a.restack('admin', 'device-sessions', deviceSessionId, 'changebillable').params({\n      billable\n    }).post();\n}\n\nexport default postAdminDeviceSessionChangeBillable;\n","import APIList from './APIList'\nimport APIResource from './APIResource'\nimport APIListCleanupConfigurations from \"./APIListCleanupConfigurations\";\nimport APIResourceCleanupConfiguration from \"./APIResourceCleanupConfiguration\";\n\n\n/**\n * APIAdminListDevices\n *\n * @class\n * @extends APIList\n */\nclass APIAdminListDevices extends APIList {\n\n  /**\n   * /devices\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'devices');\n  }\n\n  // /devices/filters\n  public filters () {\n    return new APIResource(this).push('filters');\n  }\n\n  // /devices/cleanup-configurations\n  public cleanupConfigurations () {\n    return new APIListCleanupConfigurations(this);\n  }\n\n  /**\n   * /devices/cleanup-configurations/{id}\n   *\n   * @param {number} id - Resource ID\n   */\n  public cleanupConfiguration (id: number) {\n    return new APIResourceCleanupConfiguration(this, id);\n  }\n\n  // /devices/desktop-browser-capabilities\n  public desktopBrowserCapabilities () {\n    return new APIResource(this).push('desktop-browser-capabilities');\n  }\n\n}\n\nexport default APIAdminListDevices;\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceFramework\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceFramework extends APIResource {\n\n  /**\n   * /frameworks/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'frameworks', id);\n  }\n\n  // /frameworks/{id}/config\n  public config () {\n    return new APIResource(this).push('config');\n  }\n\n  // /frameworks/{id}/required-roles\n  public requiredRoles () {\n    return new APIList(this).push('required-roles');\n  }\n\n}\n\nexport default APIAdminResourceFramework\n","import APIResource from './APIResource'\n\n\n/**\n * APIAdminResourceLicense\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceLicense extends APIResource {\n\n  /**\n   * /licenses/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'licenses', id);\n  }\n\n  // /licenses/{id}/activate\n  public activate () {\n    return new APIResource(this).push('activate');\n  }\n\n  // /licenses/{id}/deactivate\n  public deactivate () {\n    return new APIResource(this).push('deactivate');\n  }\n\n  // /licenses/{id}/resend\n  public resend () {\n    return new APIResource(this).push('resend');\n  }\n\n  // /licenses/{id}/download\n  public download () {\n    return new APIResource(this).push('download');\n  }\n\n}\n\nexport default APIAdminResourceLicense\n","import APIList from './APIList'\n\n\n/**\n * APIListNotificationPlans\n *\n * @class\n * @extends APIList\n */\nclass APIAdminListNotificationPlans extends APIList {\n\n  /**\n   * /notification-plans\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'notification-plans');\n  }\n\n  // /notification-plans/channels\n  public channels () {\n    return new APIList(this).push('channels');\n  }\n\n  // /notification-plans/scopes\n  public scopes () {\n    return new APIList(this).push('scopes');\n  }\n\n}\n\n\nexport default APIAdminListNotificationPlans\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceNotificationPlan\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceNotificationPlan extends APIResource {\n\n  /**\n   * /notification-plans/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'notification-plans', id);\n  }\n\n  // /notification-plans/{id}/check\n  public check () {\n    return new APIList(this).push('check');\n  }\n\n  // /notification-plans/{id}/test\n  public test () {\n    return new APIResource(this).push('test');\n  }\n\n  // /notification-plans/{id}/execute\n  public execute () {\n    return new APIResource(this).push('execute');\n  }\n\n}\n\nexport default APIAdminResourceNotificationPlan\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceService\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceService extends APIResource {\n\n  /**\n   * /services/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'services', id);\n  }\n\n  // /services/{id}/activate\n  public activate () {\n    return new APIResource(this).push('activate').post();\n  }\n\n  // /services/{id}/deactivate\n  public deactivate () {\n    return new APIResource(this).push('deactivate').post();\n  }\n\n  // /services/{id}/roles\n  public roles () {\n    return new APIList(this).push('roles');\n  }\n\n}\n\nexport default APIAdminResourceService\n","import APIList from './APIList'\nimport APIListPurchased from './APIListPurchased'\n\n\n/**\n * APIAdminListServices\n *\n * @class\n * @extends APIList\n */\nclass APIAdminListServices extends APIList {\n\n  // Constructor\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'services');\n  }\n\n  // /services/purchased\n  public purchased () {\n    return new APIListPurchased(this);\n  }\n\n  // /services/available\n  public available () {\n    return new APIList(this).push('available');\n  }\n\n  public active () {\n    const a = new APIList(this);\n    if (this.first === 'me') {\n      a.push('active');\n    } else {\n      a.params({\n        notArchived: true\n      });\n    }\n    return a;\n  }\n\n  public activated () {\n    const a = this.active();\n    a.params({\n      filter: 'activated_eq_true',\n      limit: 0,\n      sort: 'name_a'\n    })\n    return a;\n  }\n\n  public inUse () {\n    const a = new APIList(this);\n    a.params({\n      inUse: true,\n      limit: 0,\n      sort: 'name_a'\n    })\n    return a;\n  }\n\n  public byPrice () {\n    const a = new APIList(this);\n    a.params({\n      sort: 'centPrice_a'\n    })\n    return a;\n  }\n\n}\n\nexport default APIAdminListServices\n","import APIList from './APIList'\n\n\n/**\n * APIAdminListStatistics\n *\n * @class\n * @extends APIList\n */\nclass APIAdminListStatistics extends APIList {\n\n  /**\n   * /statistics\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'statistics');\n  }\n\n  // /statistics/device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /statistics/frameworks\n  public frameworks () {\n    return new APIList(this).push('frameworks');\n  }\n\n\n}\n\n\nexport default APIAdminListStatistics\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceDeviceModel\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDeviceModel extends APIResource {\n\n  /**\n   * /device-models/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'device-models', id);\n  }\n\n  // /device-models/{id}/browsers\n  public browsers () {\n    return new APIList(this).push('browsers');\n  }\n\n}\n\nexport default APIAdminResourceDeviceModel\n","import APIList from './APIList'\n\nimport APIResource from './APIResource'\nimport APIResourceFile from './APIResourceFile'\nimport APIResourceProject from './APIResourceProject';\nimport APIResourceAccessGroup from './APIResourceAccessGroup';\n\nimport APIAdminListRuns from './APIAdminListRuns';\n\nimport APIAdminResourceCluster from './APIAdminResourceCluster';\nimport APIAdminResourceDeviceTime from './APIAdminResourceDeviceTime';\nimport APIAdminResourceRunStandalone from './APIAdminResourceRunStandalone';\nimport APIAdminResourceDevice from './APIAdminResourceDevice';\nimport APIAdminResourceAccountService from './APIAdminResourceAccountService';\nimport APIAdminResourceUser from './APIAdminResourceUser';\nimport APIAdminResourceDeviceSessionStandalone from './APIAdminResourceDeviceSessionStandalone';\nimport APIAdminListDevices from \"./APIAdminListDevices\";\nimport APIResourceDeviceGroup from \"./APIResourceDeviceGroup\";\nimport APIAdminResourceFramework from \"./APIAdminResourceFramework\";\nimport APIAdminResourceLicense from \"./APIAdminResourceLicense\";\nimport APIAdminListNotificationPlans from \"./APIAdminListNotificationPlans\";\nimport APIAdminResourceNotificationPlan from \"./APIAdminResourceNotificationPlan\";\nimport APIAdminResourceService from \"./APIAdminResourceService\";\nimport APIAdminListServices from \"./APIAdminListServices\";\nimport APIAdminListStatistics from \"./APIAdminListStatistics\";\nimport APIAdminResourceDeviceModel from \"./APIAdminResourceDeviceModel\";\n\n\n/**\n * APIAdminResource\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResource extends APIResource {\n\n  /**\n   * /admin\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n  }\n\n  // /access-groups\n  public accessGroups () {\n    return new APIList(this).push('access-groups');\n  }\n\n  // /access-groups/{id}\n  public accessGroup (id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /admin/accounts\n  public accounts () {\n    return new APIList(this).push('admin', 'accounts');\n  }\n\n  // /admin/accounts/{id}\n  public account (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'accounts', id);\n  }\n\n  // /admin/account-services\n  public accountServices () {\n    return new APIList(this).push('admin', 'account-services');\n  }\n\n  // /admin/account-services/{id}\n  public accountService (id: number) {\n    return new APIAdminResourceAccountService(this, id);\n  }\n\n  // activities\n  public activities () {\n    return new APIList(this).push('admin', 'activities');\n  }\n\n  // /admin/billing-periods\n  public billingPeriods () {\n    return new APIList(this).push('admin', 'billing-periods');\n  }\n\n  // /admin/billing-periods/{id}\n  public billingPeriod (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'billing-periods', id);\n  }\n\n  // /admin/browsers\n  public browsers () {\n    return new APIList(this).push('admin', 'browsers');\n  }\n\n  // /admin/browsers/{id}\n  public browser (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'browsers', id);\n  }\n\n  // /clusters\n  public clusters () {\n    return new APIList(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  public cluster (id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n\n  // /admin/country-vat-rates\n  public countryVatRates () {\n    return new APIList(this).push('admin', 'country-vat-rates');\n  }\n\n  // /admin/country-vat-rates/{id}\n  public countryVatRate (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'country-vat-rates', id);\n  }\n\n  // /admin/devices\n  public devices () {\n    return new APIAdminListDevices(this);\n  }\n\n  // /admin/devices/{id}\n  public device (id: number) {\n    return new APIAdminResourceDevice(this, id);\n  }\n\n  public devicesForModel (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const a = this.devices();\n    a.params({\n      filter: 'deviceModelId_eq_' + id\n    });\n    return a;\n  }\n\n  // /admin/device/statuses\n  public deviceStatuses () {\n    return new APIList(this).push('admin', 'device', 'statuses');\n  }\n\n  // /admin/device-models\n  public deviceModels () {\n    return new APIList(this).push('admin', 'device-models');\n  }\n\n  // /admin/device-models/{id}\n  public deviceModel (id: number) {\n    return new APIAdminResourceDeviceModel(this, id);\n  }\n\n  // /admin/device-problems\n  public deviceProblems () {\n    return new APIList(this).push('admin', 'device-problems');\n  }\n\n  // /admin/device-model-criteria\n  public deviceModelCriterias () {\n    return new APIList(this).push('admin', 'device-model-criteria');\n  }\n\n  // /admin/device-model-criteria/{id}\n  public deviceModelCriteria (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'device-model-criteria', id);\n  }\n\n  // /device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('admin', 'device-sessions');\n  }\n\n  // /device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIAdminResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /device-time\n  public deviceTime () {\n    return new APIAdminResourceDeviceTime(this);\n  }\n\n  // /device-time-summary\n  public deviceTimeSummary () {\n    return new APIList(this).push('admin', 'device-time-summary');\n  }\n\n  // /device-types\n  public deviceTypes () {\n    return new APIList(this).push('admin', 'device-types');\n  }\n\n  // /device-types/{id}\n  public deviceType (id: number) {\n    return new APIResource(this).push('admin', 'device-types', id);\n  }\n\n  // /device-groups\n  public deviceGroups () {\n    return new APIList(this).push('device-groups');\n  }\n  // /device-groups/{id}\n  public deviceGroup (id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /admin/emails\n  public emails () {\n    return new APIList(this).push('admin', 'emails');\n  }\n\n  // /admin/emails/{id}/resend\n  public resendEmail (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource(this).push('admin', 'emails', id, 'resend').post();\n  }\n\n  // /admin/errors\n  public errors () {\n    return new APIList(this).push('admin', 'errors')\n  }\n\n  // /files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /files/{id}\n  public file (id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /admin/frameworks\n  public frameworks () {\n    return new APIList(this).push('admin', 'frameworks')\n  }\n\n  // /admin/frameworks/{id}\n  public framework (id: number) {\n    return new APIAdminResourceFramework(this, id)\n  }\n\n  // /admin/frameworks/available-labels\n  public frameworkAvailableLabels () {\n    const a = this.frameworks();\n    a.push('available-labels');\n    return a;\n  }\n\n  // /admin/interactive-queue\n  public interactiveQueue () {\n    return new APIList(this).push('admin', 'interactive-queue');\n  }\n\n  // /admin/licenses\n  public licenses () {\n    return new APIList(this).push('admin', 'licenses')\n  }\n\n  // /admin/licenses/{id}\n  public license (id: number) {\n    return new APIAdminResourceLicense(this, id)\n  }\n\n  // /admin/maintenance\n  public maintenance () {\n    return new APIResource(this).push('admin', 'maintenance');\n  }\n\n  // /admin/market-shares\n  public marketShares () {\n    return new APIList(this).push('admin', 'market-shares')\n  }\n\n  // /admin/notification-plans\n  public notificationPlans () {\n    return new APIAdminListNotificationPlans(this)\n  }\n\n  // /admin/notification-plans/{id}\n  public notificationPlan (id: number) {\n    return new APIAdminResourceNotificationPlan(this, id)\n  }\n\n  // /admin/overview\n  public overview () {\n    return new APIResource(this).push('admin', 'overview');\n  }\n\n  public pools () {\n    return new APIList(this).push('admin', 'pools');\n  }\n\n  public pool (id: number) {\n    return new APIResource(this).push('admin', 'pools', id);\n  }\n\n  // /projects\n  public projects () {\n    return new APIList(this).push('projects');\n  }\n\n  // /projects/{id}\n  public project (id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /admin/roles\n  public roles () {\n    return new APIList(this).push('admin', 'roles')\n  }\n\n  // /admin/runs\n  public runs () {\n    return new APIAdminListRuns(this);\n  }\n\n  // /runs/{id}\n  public run (id: number) {\n    return new APIAdminResourceRunStandalone(this, id);\n  }\n\n  // /admin/samples\n  public samples () {\n    return new APIList(this).push('admin', 'samples')\n  }\n\n  // /admin/samples/{id}\n  public sample (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource(this).push('admin', 'samples', id);\n  }\n\n  // /admin/services\n  public services () {\n    return new APIAdminListServices(this)\n  }\n\n  // /admin/services/{id}\n  public service (id: number) {\n    return new APIAdminResourceService(this, id)\n  }\n\n  // /admin/settings\n  public settings () {\n    return new APIResource(this).push('admin', 'settings')\n  }\n\n  // /admin/statistics\n  public statistics () {\n    return new APIAdminListStatistics(this)\n  }\n\n  // /users\n  public users () {\n    return new APIList(this).push('users');\n  }\n\n  // /admin/users\n  public createUser () {\n    return new APIList(this).push('admin', 'users').post();\n  }\n\n  // /users/{id}\n  public user (id: number) {\n    return new APIAdminResourceUser(this, id);\n  }\n\n}\n\nexport default APIAdminResource\n","import APIResource from './APIResource'\n\n/**\n * APIResourceAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAccount extends APIResource {\n\n  /**\n   * /accounts/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('accounts', id);\n  }\n\n  // /accounts/{id}/concurrency-status\n  public concurrencyStatus () {\n    return new APIResource(this).push('concurrency-status');\n  }\n\n  // /accounts/{id}/preferences\n  public preferences () {\n    return new APIResource(this).push('preferences');\n  }\n\n}\n\nexport default APIResourceAccount\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceBroker\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceBroker extends APIResource {\n\n  /**\n   * Endpoint: /broker\n   */\n  constructor (parent: object) {\n\n    super(parent);\n    this.push('broker');\n  }\n\n  // /broker/hubs\n  public hubs () {\n    return new APIList(this).push('hubs');\n  }\n\n}\n\nexport default APIResourceBroker\n","import './finka';\nimport ApiConfig from './ApiConfig';\n\nimport axios, { AxiosInstance } from 'axios';\n\n// @ts-ignore\nimport { version } from '../package.json';\n\nimport APIList from './api/APIList';\nimport APIListDevices from './api/APIListDevices';\nimport APIListUsers from './api/APIListUsers';\n\nimport APIResourceUser from './api/APIResourceUser';\nimport APIResourceDevice from './api/APIResourceDevice';\nimport APIResourceDeviceGroup from './api/APIResourceDeviceGroup';\nimport APIResourceUserSession from './api/APIResourceUserSession';\n\nimport APIAdminResource from './api/APIAdminResource';\nimport APIResourceAccount from './api/APIResourceAccount';\nimport APIResource from \"./api/APIResource\";\nimport APIResourceDeviceSession from \"./api/APIResourceDeviceSession\";\nimport APIResourceBroker from \"./api/APIResourceBroker\";\n\n// @ts-ignore\nif (global.isNodeJs) {\n  // Set User-Agent\n  axios.defaults.headers.common['User-Agent'] = `Bitbar Cloud API Client for JavaScript v${version}`;\n}\n\n// Disable max content length\naxios.defaults.maxContentLength = 1073741824; // 1GB\n\n\n/**\n * API\n * Root for other API resources\n */\nclass API {\n\n  // Main config\n  private config: ApiConfig;\n\n  // axios config\n  private axiosConfig: ApiConfig;\n\n  // axios instance\n  public axios: AxiosInstance;\n\n\n  constructor (config: ApiConfig) {\n    if (config == null) {\n      throw new Error('config cannot be empty');\n    }\n\n    this.config = config;\n    this.axiosConfig = <ApiConfig> {};\n\n    if (this.config.cloudUrl == null) {\n      throw new TypeError('cloudUrl cannot be empty');\n    } else if (typeof this.config.cloudUrl !== 'string') {\n      throw new TypeError('cloudUrl must be a string');\n    } else if (!/^https?:\\/\\/.{2,}/.test(this.config.cloudUrl)) {\n      throw new Error(\"cloudUrl doesn't look like a URL\");\n    }\n\n    // Validate and correct cloudUrl if needed\n    this.axiosConfig.baseURL = this.config.cloudUrl.replace(/\\/+$/, '') + '/api'\n\n    // Check v2\n    this.config.v2 = !!this.config.v2;\n    if (this.config.v2) {\n      this.axiosConfig.baseURL += '/v2';\n    }\n\n    // Check if apiKey is set\n    if (this.config.apiKey) {\n      if (typeof this.config.apiKey !== 'string') {\n        throw new TypeError('apiKey must be a string');\n      } else if (!/^[A-Za-z0-9]{32}$/.test(this.config.apiKey)) {\n        throw new Error(\"apiKey is in the wrong format\");\n      }\n\n      this.axiosConfig.auth = {\n        username: <string> this.config.apiKey,\n        password: ''\n      };\n    }\n\n    // With credentials\n    this.axiosConfig.withCredentials = config.withCredentials == null ? false : config.withCredentials;\n\n    // Create axios instance\n    this.axios = axios.create(this.axiosConfig);\n  }\n\n\n  // --- Resources starts here --- //\n\n  // /user-sessions\n  public userSession () {\n    return new APIResourceUserSession(this);\n  }\n\n  // /user/{id}\n  public user (id: number | 'me') {\n    return new APIResourceUser(this, id);\n  }\n\n  // /users\n  public users () {\n    return new APIListUsers(this);\n  }\n\n  // /account/{id}\n  public account (id: number) {\n    return new APIResourceAccount(this, id);\n  }\n\n  // /me\n  public me () {\n    return this.user('me');\n  }\n\n  // /admin\n  public admin () {\n    return new APIAdminResource(this);\n  }\n\n  // /devices\n  public devices () {\n    return new APIListDevices(this);\n  }\n\n  // /devices/{id}\n  public device (id: number) {\n    return new APIResourceDevice(this, id);\n  }\n\n  // /device-groups\n  public deviceGroups () {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /device-groups/{id}\n  public deviceGroup (id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n  // /label-groups\n  public labelGroups () {\n    return new APIList(this).push('label-groups');\n  }\n\n  // /device-statistics\n  public deviceStatistics () {\n    return new APIList(this).push('device-statistics');\n  }\n\n  // /enums\n  public enums () {\n    return new APIResource(this).push('enums');\n  }\n\n  // /licenses\n  public licenses () {\n    return new APIResource(this).push('licenses');\n  }\n\n  // /labels\n  public labels () {\n    return new APIList(this).push('labels');\n  }\n\n  public broker () {\n    return new APIResourceBroker(this);\n  }\n}\n\n\nexport default API;\n","import API from './API';\nimport FilterBuilder from './FilterBuilder';\n\n/**\n * Cloud API Client\n */\nconst CloudAPIClient = {\n  API,\n  FilterBuilder\n}\n\nexport default CloudAPIClient;\n"],"names":["finka","ALLOWED_HTTP_METHODS","APIEntity","constructor","parent","this","stack","requestConfig","root","Array","isArray","push","setRequestConfig","items","item","pop","shift","unshift","restack","first","val","last","length","toUrl","absolute","url","join","axiosConfig","baseURL","Object","deepAssign","removeRequestConfig","key","headers","_headers","replace","letter","toUpperCase","method","name","NAME","toLocaleUpperCase","Error","keys","get","post","params","getParams","removeParam","data","jsonData","formData","paramsSerializer","qs","stringify","arrayFormat","send","startsWith","axios","request","Filter","value","operand","FilterBuilder","filters","add","checkNull","wrap","i","v","Date","getTime","endsWith","gt","lt","after","afterorequal","before","beforeorequal","on","eq","contains","like","notlike","isnull","undefined","in","notin","raw","filter","isFilterPart","SyntaxError","str","test","toString","parts","part","APIOrder","APIList","create","sort","order","asc","limit","Number","isNatural","getLimit","noLimit","offset","between","from","to","only","idx","page","search","query","isFilterBuilder","prototype","all","cut","APIResource","delete","APIListCleanupConfigurations","super","specific","APIResourceCleanupConfiguration","id","devices","APIListDevices","cleanupConfigurations","cleanupConfiguration","desktopBrowserCapabilities","APIListUsers","activate","recoveries","passwordRecovery","resetApiKey","validateVatId","APIResourceBillingPeriod","receipt","responseType","APIResourceBuild","abort","outputFiles","APIResourceJob","builds","build","APIResourceDeviceGroup","device","selectors","selector","share","postDeviceRunIds","ids","a","deviceRunIds","APIResourceRunCommon","dataAvailability","deviceSessions","filesZip","logsZip","performanceZip","retry","timeout","screenshotNames","screenshots","screenshotsZip","steps","tags","tag","InputFileset","files","NON_MEDIA_FILES_FILTER","OutputFileset","file","screenshot","screenshotFile","videos","nonMediaFiles","APIResourceDeviceSessionCommon","commands","input","output","step","currentStep","testCaseRuns","APIResourceDeviceSession","APIResourceRun","deviceSession","APIResourceProject","runs","run","runsExtended","runExtended","sharings","sharing","APIResourceFile","icon","APIResourceNotification","APIResourceAccessGroup","users","user","resources","resource","APIResourceAdditionalUser","resendActivation","APIUserResourceAccount","additionalUsers","additionalUser","serviceBillingPeriod","APIListDeviceTime","reserved","used","APIListFiles","upload","obj","form","global","isNodeJs","fs","require","append","createReadStream","dir","filename","getHeaders","APIListPurchased","APIListServices","purchased","available","active","notArchived","APIListRuns","config","APIListNotifications","scopes","channels","APIListSmartbearTunnels","APIResourceDeviceSessionStandalone","connections","connection","release","APIResourceUser","TypeError","account","deviceTime","deviceTimeSummary","services","service","billingPeriods","billingPeriod","jobs","job","deviceGroups","deviceGroup","projects","project","availableBuildExecutors","availableFrameworks","restore","feedback","notifications","notification","receipts","preferences","uiPreferences","deviceUsage","statistics","deviceStatistics","accessGroups","accessGroup","smartbearTunnel","smartbearTunnels","APIResourceDevice","properties","APIResourceUserSession","login","logout","sso","portalLogin","APIAdminListRuns","APIAdminResourceCluster","APIAdminResourceDeviceTime","countSessionReport","stepTimeReport","APIAdminResourceRunStandalone","changeBillable","billable","changePriority","priority","APIAdminResourceDevice","queue","labels","label","blink","APIAdminResourceAccountService","deactivate","APIAdminResourceUserAccount","roles","role","update","APIAdminResourceUser","disable","enable","licenses","APIAdminResourceDeviceSessionStandalone","deviceSessionId","postAdminDeviceSessionChangeBillable","APIAdminListDevices","APIAdminResourceFramework","requiredRoles","APIAdminResourceLicense","resend","download","APIAdminListNotificationPlans","APIAdminResourceNotificationPlan","check","execute","APIAdminResourceService","APIAdminListServices","activated","inUse","byPrice","APIAdminListStatistics","frameworks","APIAdminResourceDeviceModel","browsers","APIAdminResource","accounts","accountServices","accountService","activities","browser","clusters","cluster","countryVatRates","countryVatRate","devicesForModel","deviceStatuses","deviceModels","deviceModel","deviceProblems","deviceModelCriterias","deviceModelCriteria","deviceTypes","deviceType","emails","resendEmail","errors","framework","frameworkAvailableLabels","interactiveQueue","license","maintenance","marketShares","notificationPlans","notificationPlan","overview","pools","pool","samples","sample","settings","createUser","APIResourceAccount","concurrencyStatus","APIResourceBroker","hubs","defaults","common","maxContentLength","API","cloudUrl","v2","apiKey","auth","username","password","withCredentials","userSession","me","admin","labelGroups","enums","broker"],"mappings":";sdAEAA,EAAAA,cCSKC,GAAL,SAAKA,GACHA,EAAA,IAAA,MACAA,EAAA,KAAA,OACAA,EAAA,OAAA,SAHF,CAAKA,IAAAA,EAIJ,KASD,MAAMC,EA8BJC,YAAaC,GACXC,KAAKC,MAAQ,GACbD,KAAKE,cAAgB,GAEjBH,aAAkBF,GACpBG,KAAKG,KAAOJ,EAAOI,KAEfC,MAAMC,QAAQN,EAAOE,QACvBD,KAAKM,QAAQP,EAAOE,OAGM,MAAxBF,EAAOG,eACTF,KAAKO,iBAAiBR,EAAOG,gBAG/BF,KAAKG,KAAOJ,EAWTO,QAASE,GACd,IAAK,MAAMC,KAAQD,EACjBR,KAAKC,MAAMK,KAAKG,GAElB,OAAOT,KASFU,MAEL,OADAV,KAAKC,MAAMS,MACJV,KASFW,QAEL,OADAX,KAAKC,MAAMU,QACJX,KASDY,WAAYJ,GAClB,IAAK,MAAMC,KAAQD,EACjBR,KAAKC,MAAMW,QAAQH,GAErB,OAAOT,KAGFa,WAAYL,GAEjB,OADAR,KAAKC,MAAQO,EACNR,KAMEc,YACT,OAAOd,KAAKC,MAAM,GAMTa,UAAOC,GAChBf,KAAKC,MAAM,GAAKc,EAMPC,WACT,OAAOhB,KAAKC,MAAMD,KAAKC,MAAMgB,OAAS,GAM7BD,SAAMD,GACff,KAAKC,MAAMD,KAAKC,MAAMgB,OAAS,GAAKF,EAQ/BG,MAAOC,GAAW,GACvB,IAAIC,EAAM,IAAIpB,KAAKC,MAAMoB,KAAK,OAO9B,OALIF,IAEFC,EAAMpB,KAAKG,KAAKmB,YAAYC,QAAUH,GAGjCA,EAUFb,iBAAkBL,GAEvB,OADAsB,OAAOC,WAAWzB,KAAKE,cAAeA,GAC/BF,KAUF0B,oBAAqBC,GAG1B,cADO3B,KAAKE,cAAcyB,GACnB3B,KAUF4B,QAASA,GACd,MAAMC,EAAW,GAGjB,IAAK,MAAMF,KAAOC,EAAS,CAGzBC,EAFeF,EAAIG,QAAQ,mBAAoBC,GAAWA,EAAOC,iBAE9CJ,EAAQD,GAI7B,OAAO3B,KAAKO,iBAAiB,CAC3BqB,QAASC,IAWNI,OAAQC,GACb,MAAMC,EAAwBD,EAAKE,oBAGnC,IAAKxC,EAAqBuC,GACxB,MAAM,IAAIE,MAAM,WAAWF,mCAAsCX,OAAOc,KAAK1C,GAAsByB,KAAK,SAG1G,OAAOrB,KAAKO,iBAAiB,CAC3B0B,OAAQE,IAULI,MACL,OAAOvC,KAAKiC,OAAO,OASdO,OACL,OAAOxC,KAAKiC,OAAO,QAUdQ,OAAQA,GAIb,OAHAjB,OAAOC,WAAWzB,KAAKE,cAAe,CACpCuC,OAAAA,IAEKzC,KASF0C,YACL,OAAoC,MAA7B1C,KAAKE,cAAcuC,OAAiB,GAAKzC,KAAKE,cAAcuC,OAU9DE,YAAahB,GAElB,cADO3B,KAAKE,cAAcuC,OAAOd,GAC1B3B,KAUF4C,KAAMA,GAIX,OAHApB,OAAOC,WAAWzB,KAAKE,cAAe,CACpC0C,KAAAA,IAEK5C,KAUF6C,SAAUD,GAIf,OAHA5C,KAAK4B,QAAQ,CACX,eAAgB,qBACfgB,KAAKA,GACD5C,KAUF8C,SAAUF,GAIf,OAHA5C,KAAK4B,QAAQ,CACX,eAAgB,wBACfgB,KAAKA,GACD5C,KAQD+C,iBAAkBN,GACxB,OAAOO,EAAE,QAACC,UAAUR,EAAQ,CAC1BS,YAAa,aAUVC,OACL,MAAMjD,EAAqCsB,OAAOC,WAAW,GAAIzB,KAAKE,cAAe,CACnFkB,IAAK,IAAIpB,KAAKC,MAAMoB,KAAK,SA4B3B,OAxB6B,MAAzBnB,EAAc0B,UAChB1B,EAAc0B,QAAU,IAImB,MAAzC1B,EAAc0B,QAAQ,kBACxB1B,EAAc0B,QAAQ,gBAAkB,oDAIb,SAAzB1B,EAAc+B,QAClB/B,EAAc0B,QAAQ,gBAAgBwB,WAAW,sCAC3B,MAAtBlD,EAAc0C,OACZ1C,EAAc0C,KAAOI,EAAAA,QAAGC,UAAU/C,EAAc0C,KAAM,CACpDM,YAAa,cAIbhD,EAAcuC,SAChBvC,EAAc6C,iBAAmB/C,KAAK+C,kBAKjC/C,KAAKG,KAAKkD,MAAMC,QAAQpD,IC5XnC,MAAMqD,EAKJzD,YAAaoC,EAAcsB,EAAYC,GACrCzD,KAAKkC,KAAOA,EACZlC,KAAKwD,MAAQA,EACbxD,KAAKyD,QAAUA,GCHnB,MAAMC,EAIJ5D,cACEE,KAAK2D,QAAU,GAWTC,IAAK1B,EAAcsB,EAAYC,EAAiBI,GAAY,GAIlE,GAAqB,KAFrBL,EAAQpD,MAAM0D,KAAKN,IAETvC,OACR,OAAOjB,KAIT,IAAK,IAAI+D,EAAI,EAAGA,EAAIP,EAAMvC,OAAQ8C,IAAK,CACrC,MAAMC,EAAIR,EAAMO,GACC,iBAANC,GAAkBA,aAAaC,OACxCT,EAAMO,GAAKC,EAAEE,WAKjB,GAAIL,EAEF,IAAK,MAAMG,KAAKR,GAqBlB,OAPIC,EAAQU,SAAS,WAA8B,IAAjBX,EAAMvC,SACtCwC,EAAU,UAIZzD,KAAK2D,QAAQrD,KAAK,IAAIiD,EAAOrB,EAAMsB,EAAOC,IAEnCzD,KAKFoE,GAAIlC,EAAcsB,GACvB,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,MAGxBa,GAAInC,EAAcsB,GACvB,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,MAGxBc,MAAOpC,EAAcsB,GAC1B,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,SAAS,GAGjCe,aAAcrC,EAAcsB,GACjC,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,gBAAgB,GAGxCgB,OAAQtC,EAAcsB,GAC3B,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,UAAU,GAGlCiB,cAAevC,EAAcsB,GAClC,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,iBAAiB,GAGzCkB,GAAIxC,EAAcsB,GACvB,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,MAGxBmB,GAAIzC,EAAcsB,GACvB,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,MAGxBoB,SAAU1C,EAAcsB,GAC7B,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,YAGxBqB,KAAM3C,EAAcsB,GACzB,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,QAGxBsB,QAAS5C,EAAcsB,GAC5B,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,WAGxBuB,OAAQ7C,GACb,OAAOlC,KAAK4D,IAAI1B,OAAM8C,EAAW,UAG5BC,GAAI/C,EAAcsB,GACvB,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,MAAM,GAG9B0B,MAAOhD,EAAcsB,GAC1B,OAAOxD,KAAK4D,IAAI1B,EAAMsB,EAAO,SAAS,GAIjC2B,IAAKC,GACV,MAAMzB,EAAUvD,MAAM0D,KAAKsB,GAC3B,IAAK,MAAMA,KAAUzB,EAAS,CAC5B,IAAI3D,KAAKqF,aAAaD,GAGpB,MAAM,IAAIE,YAAY,UAAUF,wBAFhCpF,KAAK2D,QAAQrD,KAAK8E,IAUjBC,aAAcE,GACnB,MAAO,yGAAyGC,KAAcD,GAMzHE,WACL,MAAMC,EAAuB,GAE7B,IAAIC,EACA5E,EAEJ,IAAK,MAAMqE,KAAUpF,KAAK2D,QACF,iBAAXyB,EACTO,EAAOP,GAEPrE,EAAM,IACFqE,EAAO5B,MAAMvC,OAAS,QAAgC,IAApBmE,EAAO5B,MAAM,MACjDzC,EAAM,IAAIqE,EAAO5B,MAAMnC,KAAK,QAE9BsE,EAAO,GAAGP,EAAOlD,QAAQkD,EAAO3B,UAAU1C,KAE5C2E,EAAMpF,KAAKqF,GAGb,OAAOD,EAAMrE,KAAK,MC9ItB,IAAKuE,GAAL,SAAKA,GACHA,EAAA,IAAA,IACAA,EAAA,KAAA,IAFF,CAAKA,IAAAA,EAGJ,KASD,MAAMC,UAAgBhG,EAQbiG,OAAQlD,GACb,OAAO5C,KAAKwC,OAAOI,KAAKA,GAAMO,OAWzB4C,KAAM7D,EAAc8D,EAAkBJ,EAASK,KAIpD,OAAOjG,KAAKyC,OAAO,CACjBsD,KAAM,GAAG7D,KAAQ8D,MAWdE,MAAOA,EA9DM,IA+DlB,IAAKC,OAAOC,UAAUF,GACpB,MAAM,IAAI7D,MAAM,UAAU6D,kBAG5B,OAAOlG,KAAKyC,OAAO,CACjByD,MAAAA,IAUGG,WACL,MAAM5D,EAASzC,KAAK0C,YACpB,OAAuB,MAAhBD,EAAOyD,MAhFI,GAgF4BzD,EAAOyD,MAShDI,UACL,OAAOtG,KAAKkG,MAAM,GAUbK,OAAQA,EA3FM,GA4FnB,IAAKJ,OAAOC,UAAUG,GACpB,MAAM,IAAIlE,MAAM,WAAWkE,kBAG7B,OAAOvG,KAAKyC,OAAO,CACjB8D,OAAAA,IAYGC,QAASC,EAAcC,GAC5B,IAAKP,OAAOC,UAAUK,GACpB,MAAM,IAAIpE,MAAM,SAASoE,kBAG3B,IAAKN,OAAOC,UAAUM,GACpB,MAAM,IAAIrE,MAAM,OAAOqE,kBAGzB,OAAO1G,KAAKyC,OAAO,CACjB8D,OAAQE,EACRP,MAAYQ,EAAKD,EAAV,IAWJE,KAAMC,GACX,IAAKT,OAAOC,UAAUQ,GACpB,MAAM,IAAIvE,MAAM,UAAUuE,kBAG5B,OAAO5G,KAAKyC,OAAO,CACjB8D,OAAQK,EACRV,MAAO,IAWJW,KAAMA,EAAO,GAClB,IAAKV,OAAOC,UAAUS,IAAiB,GAARA,EAC7B,MAAM,IAAIxE,MAAM,SAASwE,kBAG3B,MAAMX,EAAQlG,KAAKqG,WACbE,GAAUM,EAAO,GAAKX,EAE5B,OAAOlG,KAAKyC,OAAO,CACjB8D,OAAAA,EACAL,MAAAA,IAcGY,OAAQC,GACb,GAAqB,iBAAVA,EACT,MAAM,IAAI1E,MAAM,kCAGlB,OAAOrC,KAAKyC,OAAO,CACjBqE,OAAQC,IAWL3B,OAAQA,GACb,MAAM4B,EAAkB5B,aAAkB1B,EAE1C,GAAsB,iBAAX0B,IAAwB4B,EACjC,MAAM,IAAI3E,MAAM,6DAOlB,OAJI2E,IACF5B,EAASA,EAAOK,YAGXzF,KAAKyC,OAAO,CACjB2C,OAAAA,KA2BNS,EAAQoB,UAAUC,IAAMrB,EAAQoB,UAAUX,QAC1CT,EAAQoB,UAAUE,IAAMtB,EAAQoB,UAAUT,QCjP1C,MAAMY,UAAoBvH,EAQjBwH,SACL,OAAOrH,KAAKiC,OAAO,WCRvB,MAAMqF,UAAqCzB,EAOzC/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,0BAILkH,WACL,OAAO,IAAIJ,EAAYpH,MAAMM,KAAK,aCdtC,MAAMmH,UAAwCL,EAO5CtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,yBAA0BoH,GAI/BC,UACL,OAAO,IAAI9B,EAAQ7F,MAAMM,KAAK,YChBlC,MAAMsH,UAAuB/B,EAO3B/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,WAILqD,UACL,OAAO,IAAIyD,EAAYpH,MAAMM,KAAK,WAI7BuH,wBACL,OAAO,IAAIP,EAA6BtH,MAQnC8H,qBAAsBJ,GAC3B,OAAO,IAAID,EAAgCzH,KAAM0H,GAI5CK,6BACL,OAAO,IAAIX,EAAYpH,MAAMM,KAAK,iCCnCtC,MAAM0H,UAAqBnC,EAOzB/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,SAIL2H,WACL,OAAO,IAAIb,EAAYpH,MAAMM,KAAK,YAAYkC,OAIzC0F,aACL,OAAO,IAAId,EAAYpH,MAAMM,KAAK,cAI7B6H,mBACL,OAAO,IAAIf,EAAYpH,MAAMM,KAAK,qBAI7B8H,cACL,OAAO,IAAIhB,EAAYpH,MAAMM,KAAK,iBAI7B+H,gBACL,OAAO,IAAIjB,EAAYpH,MAAMM,KAAK,kBCnCtC,MAAMgI,UAAiClB,EAOrCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,kBAAmBoH,GAIxBa,UACL,OAAO,IAAInB,EAAYpH,MAAMM,KAAK,WAAWC,iBAAiB,CAC5DiI,aAAc,iBClBpB,MAAMC,UAAyBrB,EAO7BtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,SAAUoH,GAIfgB,QACL,OAAO,IAAItB,EAAYpH,MAAMM,KAAK,SAI7BqI,cACL,OAAO,IAAI9C,EAAQ7F,MAAMM,KAAK,kBAAmB,UCrBrD,MAAMsI,UAAuBxB,EAO3BtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,OAAQoH,GAIbmB,SACL,OAAO,IAAIhD,EAAQ7F,MAAMM,KAAK,UAIzBwI,MAAOpB,GACZ,OAAO,IAAIe,EAAiBzI,KAAM0H,ICzBtC,MAAMqB,UAA+B3B,EAOnCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,gBAAiBoH,GAItBC,UACL,OAAO,IAAI9B,EAAQ7F,MAAMM,KAAK,WAIzB0I,OAAQtB,GACb,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,UAAWoH,GAIxCuB,YACL,OAAO,IAAIpD,EAAQ7F,MAAMM,KAAK,aAIzB4I,SAAUxB,GACf,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,YAAaoH,GAI1CyB,QACL,OAAO,IAAI/B,EAAYpH,MAAMM,KAAK,UCrDtC,SAAS8I,EAAkBrJ,EAAmBmC,EAAcmH,GACxD,MAAMC,EAAI,IAAIlC,EAAYrH,GAAQO,KAAK4B,GAQvC,OANW,MAAPmH,GACFC,EAAE7G,OAAO,CACP8G,aAAcF,IAIXC,EAAE9G,OCDb,MAAMgH,UAA6BpC,EAOjCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,OAAQoH,GAIbgB,QACL,OAAO,IAAItB,EAAYpH,MAAMM,KAAK,SAASkC,OAItCiH,mBACL,OAAO,IAAI5D,EAAQ7F,MAAMM,KAAK,qBAIzBoJ,iBACL,OAAO,IAAI7D,EAAQ7F,MAAMM,KAAK,mBAIzBqJ,SAAUN,GACf,OAAOD,EAAiBpJ,KAAM,YAAaqJ,GAItCO,QAASP,GACd,OAAOD,EAAiBpJ,KAAM,WAAYqJ,GAIrCQ,eAAgBR,GACrB,OAAOD,EAAiBpJ,KAAM,kBAAmBqJ,GAI5CS,MAAOT,GACZ,OAAOD,EAAiBpJ,KAAM,QAASqJ,GAAK9I,iBAAiB,CAC3DwJ,QAAS,IAKNC,kBACL,OAAO,IAAInE,EAAQ7F,MAAMM,KAAK,oBAIzB2J,cACL,OAAO,IAAIpE,EAAQ7F,MAAMM,KAAK,eAIzB4J,eAAgBb,GACrB,OAAOD,EAAiBpJ,KAAM,kBAAmBqJ,GAI5Cc,QACL,OAAO,IAAItE,EAAQ7F,MAAMM,KAAK,SAIzB8J,OACL,OAAO,IAAIvE,EAAQ7F,MAAMM,KAAK,QAIzB+J,IAAK3C,GACV,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,OAAQoH,ICtF9C,MAAM4C,UAAqBlD,EAOzBtH,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,kBAILiK,QACL,OAAO,IAAI1E,EAAQ7F,MAAMM,KAAK,SAIzBqJ,WACL,OAAO,IAAIvC,EAAYpH,MAAMM,KAAK,cCtBtC,MAAMkK,EAAyB,IAAI9G,EACnC8G,EAAuB7F,GAAG,QAAS,SACnC6F,EAAuBtF,MAAM,WAAY,CAEvC,YAAa,YAAa,aAAc,aAAc,YAGtD,YAAa,YAAa,aAAc,YAAa,eASvD,MAAMuF,UAAsBrD,EAO1BtH,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,mBAILiK,QACL,OAAO,IAAI1E,EAAQ7F,MAAMM,KAAK,SAIzBoK,KAAMhD,GACX,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAASoH,GAItCiC,WACL,OAAO,IAAIvC,EAAYpH,MAAMM,KAAK,aAI7B2J,cACL,OAAO,IAAIpE,EAAQ7F,MAAMM,KAAK,eAIzBqK,WAAYjD,GACjB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,cAAeoH,GAI5CkD,eAAgBlD,GACrB1H,KAAK2K,WAAWjD,GAAIpH,KAAK,QAIpBuK,SACL,OAAO7K,KAAKuK,QAAQ9H,OAAO,CACzB2C,OAAQ,mBACRiF,IAAK,CAAC,WAKHS,gBACL,OAAO9K,KAAKuK,QAAQnF,OAAOoF,ICnE/B,MAAMO,UAAuC3D,EAO3CtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,kBAAmBoH,GAIxBsD,WACL,OAAO,IAAInF,EAAQ7F,MAAMM,KAAK,YAIzB2K,QACL,OAAO,IAAIX,EAAatK,MAInBkL,SACL,OAAO,IAAIT,EAAczK,MAIpBiK,cACL,OAAO,IAAIpE,EAAQ7F,MAAMM,KAAK,eAIzBqK,WAAYjD,GACjB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,cAAeoH,GAI5CyC,QACL,OAAO,IAAItE,EAAQ7F,MAAMM,KAAK,SAIzB6K,KAAMzD,GACX,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAASoH,GAItC0D,cACL,OAAOpL,KAAKmL,KAAK,WAIZE,eACL,OAAO,IAAIxF,EAAQ7F,MAAMM,KAAK,mBCrElC,MAAMgL,UAAiCP,EAG9BrC,QACL,OAAO,IAAItB,EAAYpH,MAAMM,KAAK,SAASkC,OAItCsH,QACL,OAAO,IAAI1C,EAAYpH,MAAMM,KAAK,SAASkC,QCX/C,MAAM+I,UAAuB/B,EAGpBgC,cAAe9D,GACpB,OAAO,IAAI4D,EAAyBtL,KAAM0H,ICF9C,MAAM+D,UAA2BrE,EAO/BtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,WAAYoH,GAIjBgE,OACL,OAAO,IAAI7F,EAAQ7F,MAAMM,KAAK,QAIzBqL,IAAKjE,GACV,OAAO,IAAI6D,EAAevL,KAAM0H,GAI3BkE,eACL,OAAO,IAAI/F,EAAQ7F,MAAMM,KAAK,iBAIzBuL,YAAanE,GAClB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,gBAAiBoH,GAI9C6C,QACL,OAAO,IAAI1E,EAAQ7F,MAAMM,KAAK,SAIzBqJ,WACL,OAAO,IAAIvC,EAAYpH,MAAMM,KAAK,aAI7BwL,WACL,OAAO,IAAIjG,EAAQ7F,MAAMM,KAAK,YAIzByL,QAASrE,GACd,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,WAAYoH,IC/DlD,MAAMsE,UAAwB5E,EAO5BtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAASoH,GAIdgD,OACL,OAAO,IAAItD,EAAYpH,MAAMM,KAAK,QAI7B2L,OACL,OAAO,IAAI7E,EAAYpH,MAAMM,KAAK,QAI7B8J,OACL,OAAO,IAAIvE,EAAQ7F,MAAMM,KAAK,SC7BlC,MAAM4L,UAAgC9E,EAOpCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,gBAAiBoH,GAItBlC,OACL,OAAO,IAAI4B,EAAYpH,MAAMM,KAAK,SCjBtC,MAAM6L,UAA+B/E,EAOnCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,gBAAiBoH,GAItB0E,QACL,OAAO,IAAIvG,EAAQ7F,MAAMM,KAAK,SAIzB+L,KAAM3E,GACX,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAASoH,GAItC4E,YACL,OAAO,IAAIzG,EAAQ7F,MAAMM,KAAK,aAIzBiM,SAAU7E,GACf,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,YAAaoH,IC3CnD,MAAM8E,UAAkCpF,EAOtCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,mBAAoBoH,GAIzB+E,mBACL,OAAO,IAAIrF,EAAYpH,MAAMM,KAAK,sBCftC,MAAMoM,UAA+BtF,EAOnCtH,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,WAILqM,kBACL,OAAO,IAAI9G,EAAQ7F,MAAMM,KAAK,oBAIzBsM,eAAgBlF,GACrB,OAAO,IAAI8E,EAA0BxM,KAAM0H,GAItCmF,qBAAsBnF,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,MAAMiH,EAAI,IAAIlC,EAAYpH,MAG1B,OAFAsJ,EAAEtI,MAAQ,YACVsI,EAAEhJ,KAAKoH,EAAI,kBACJ4B,GCjCX,MAAMwD,UAA0BjH,EAO9B/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,eAILyM,WACL,OAAO,IAAIlH,EAAQ7F,MAAMM,KAAK,YAIzB0M,OACL,OAAO,IAAInH,EAAQ7F,MAAMM,KAAK,SCRlC,MAAM2M,UAAqBpH,EAGzB/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,SAIL4M,OAAQC,GACb,IAAIC,EAIJ,IAAIC,OAAOC,SAgBT,MAAM,IAAIjL,MAAM,sBAhBG,CAEnB,MAAMkL,EAAKC,QAAQ,MAInBJ,EAAO,IAFUI,QAAQ,cAGzBJ,EAAKK,OAAO,OAAQF,EAAGG,iBAAiBP,EAAIQ,IAAM,IAAMR,EAAIS,UAAW,CACrEA,SAAUT,EAAIS,WAWlB,OAAO5N,KAAKwC,OAAOZ,QAAQwL,EAAKS,cAAcjL,KAAKwK,IC5CvD,MAAMU,UAAyBjI,EAO7B/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,cCRd,MAAMyN,UAAwBlI,EAG5B/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,YAIL0N,YACL,OAAO,IAAIF,EAAiB9N,MAIvBiO,YACL,OAAO,IAAIpI,EAAQ7F,MAAMM,KAAK,aAGzB4N,SACL,MAAM5E,EAAI,IAAIzD,EAAQ7F,MAQtB,MAPmB,OAAfA,KAAKc,MACPwI,EAAEhJ,KAAK,UAEPgJ,EAAE7G,OAAO,CACP0L,aAAa,IAGV7E,GC3BX,MAAM8E,UAAoBvI,EAOxB/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,QAIL+N,SACL,OAAO,IAAIjH,EAAYpH,MAAMM,KAAK,WCftC,MAAMgO,UAA6BzI,EAMjC/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,iBAILiO,SACL,OAAO,IAAI1I,EAAQ7F,MAAMM,KAAK,UAIzBkO,WACL,OAAO,IAAI3I,EAAQ7F,MAAMM,KAAK,aCnBlC,MAAMmO,UAAgC5I,EAOpC/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,WAUL4N,OAAQA,GACb,OAAOlO,KAAKyC,OAAO,CAAEyL,OAAQA,KCdjC,MAAMQ,UAA2CtH,EAO9CtH,YAAaC,EAAgB2H,GAC5B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,kBAAmBoH,GAIxBiH,cACL,OAAO,IAAI9I,EAAQ7F,MAAMM,KAAK,eAIzBsO,WAAYlH,GACjB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,cAAeoH,GAI5CuD,QACL,OAAO,IAAIX,EAAatK,MAInBkL,SACL,OAAO,IAAIT,EAAczK,MAIpB6O,UACL,OAAO,IAAIzH,EAAYpH,MAAMM,KAAK,WAAWkC,QC7BjD,MAAMsM,UAAwB1H,EAO5BtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAKlB,GAFAkF,MAAMxH,GAEK,OAAP2H,EACF1H,KAAKM,KAAK,UACL,CAAA,GAAkB,iBAAPoH,EAGhB,MAAM,IAAIqH,UAAU,sBAFpB/O,KAAKM,KAAK,QAASoH,IAOhBsH,UACL,OAAO,IAAItC,EAAuB1M,MAI7BiP,aACL,OAAO,IAAInC,EAAkB9M,MAIxBkP,oBACL,OAAO,IAAIrJ,EAAQ7F,MAAMM,KAAK,uBAIzB6O,WACL,OAAO,IAAIpB,EAAgB/N,MAItBoP,QAAS1H,GACd,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,WAAYoH,GAIzC2H,iBACL,OAAO,IAAIxJ,EAAQ7F,MAAMM,KAAK,mBAIzBgP,cAAe5H,GACpB,OAAO,IAAIY,EAAyBtI,KAAM0H,GAIrC6H,OACL,OAAO,IAAI1J,EAAQ7F,MAAMM,KAAK,QAIzBkP,IAAK9H,GACV,OAAO,IAAIkB,EAAe5I,KAAM0H,GAI3B+H,eACL,OAAO,IAAI5J,EAAQ7F,MAAMM,KAAK,iBAIzBoP,YAAahI,GAClB,OAAO,IAAIqB,EAAuB/I,KAAM0H,GAInCgC,iBACL,OAAO,IAAI7D,EAAQ7F,MAAMM,KAAK,mBAIzBkL,cAAe9D,GACpB,OAAO,IAAIgH,EAAmC1O,KAAM0H,GAI/CiI,WACL,OAAO,IAAI9J,EAAQ7F,MAAMM,KAAK,YAIzBsP,QAASlI,GACd,OAAO,IAAI+D,EAAmBzL,KAAM0H,GAI/B6C,QACL,OAAO,IAAI0C,EAAajN,MAInB0K,KAAMhD,GACX,OAAO,IAAIsE,EAAgBhM,KAAM0H,GAI5BgE,OACL,OAAO,IAAI0C,EAAYpO,MAIlB6P,0BACL,OAAO,IAAIhK,EAAQ7F,MAAMM,KAAK,6BAIzBwP,sBACL,OAAO,IAAIjK,EAAQ7F,MAAMM,KAAK,wBAOzB8H,cACL,OAAO,IAAIhB,EAAYpH,MAAMM,KAAK,iBAI7ByP,UACL,OAAO,IAAI3I,EAAYpH,MAAMM,KAAK,WAI7B0P,WACL,OAAO,IAAI5I,EAAYpH,MAAMM,KAAK,YAI7B2P,gBACL,OAAO,IAAI3B,EAAqBtO,MAI3BkQ,aAAcxI,GACnB,OAAO,IAAIwE,EAAwBlM,KAAM0H,GAIpCyI,WACL,OAAO,IAAItK,EAAQ7F,MAAMM,KAAK,YAIzB8P,cACL,OAAO,IAAIhJ,EAAYpH,MAAMM,KAAK,eAI7B+P,gBACL,OAAO,IAAIjJ,EAAYpH,MAAMM,KAAK,kBAI7BgQ,cACL,OAAO,IAAIzK,EAAQ7F,MAAMM,KAAK,gBAIzBiQ,aACL,OAAO,IAAI1K,EAAQ7F,MAAMM,KAAK,cAIzBkQ,mBACL,OAAO,IAAI3K,EAAQ7F,MAAMM,KAAK,qBAIzBmQ,eACL,OAAO,IAAI5K,EAAQ7F,MAAMM,KAAK,iBAIzBoQ,YAAahJ,GAClB,OAAO,IAAIyE,EAAuBnM,KAAM0H,GAInCiJ,gBAAiBjJ,GACtB,OAAO,IAAIN,EAAYpH,MAAMM,KAAK,UAAWoH,GAIxCkJ,mBACL,OAAO,IAAInC,EAAwBzO,OC3NvC,MAAM6Q,UAA0BzJ,EAO9BtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,UAAWoH,GAIhBoJ,aACL,OAAO,IAAIjL,EAAQ7F,MAAMM,KAAK,eCnBlC,MAAMyQ,UAA+B3J,EAInCtH,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,iBAIL0Q,MAAOpO,GACZ,OAAO,IAAIwE,EAAYpH,MAAMM,KAAK,SAASkC,OAAOI,KAAKA,GAIlDqO,SACL,OAAO,IAAI7J,EAAYpH,MAAMM,KAAK,UAAUkC,OAIvC0O,IAAKhP,GACV,OAAO,IAAIkF,EAAYpH,MAAMM,KAAK4B,EAAO,UAIpCiP,cACL,OAAO,IAAI/J,EAAYpH,MAAMM,KAAK,gBAAgBkC,QCzBtD,MAAM4O,UAAyBvL,EAM7B/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,QAAS,QAId+N,SACL,MAAM/E,EAAI,IAAIlC,EAAYpH,MAE1B,OADAsJ,EAAErJ,MAAQ,CAAC,OAAQ,UACZqJ,GCfX,MAAM+H,UAAgCjK,EAOpCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,WAAYoH,GAIjBC,UACL,OAAO,IAAI9B,EAAQ7F,MAAMM,KAAK,YClBlC,MAAMgR,UAAmClK,EAOvCtH,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,QAAS,eAIdiR,qBACL,OAAO,IAAI1L,EAAQ7F,MAAMM,KAAK,wBAIzBkR,iBACL,OAAO,IAAI3L,EAAQ7F,MAAMM,KAAK,qBCjBlC,MAAMmR,UAAsCrK,EAOzCtH,YAAaC,EAAgB2H,GAC5B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,OAAQoH,GAItBgB,QACL,OAAO,IAAItB,EAAYpH,MAAMM,KAAK,SAASkC,OAItCkP,eAAgBC,GACrB,OAAO,IAAIvK,EAAYpH,MAAMM,KAAK,kBAAkBkC,OAAOC,OAAO,CAChEkP,SAAAA,IAKGC,eAAgBC,GACrB,OAAO,IAAIzK,EAAYpH,MAAMM,KAAK,kBAAkBkC,OAAOC,OAAO,CAChEoP,SAAAA,IAKG/H,MAAOT,GACZ,OAAOD,EAAiBpJ,KAAM,QAASqJ,GAAK9I,iBAAiB,CAC3DwJ,QAAS,IAKNL,iBACL,OAAO,IAAI7D,EAAQ7F,MAAMW,QAAQL,KAAK,mBAIjCkL,cAAe9D,GACpB,OAAO,IAAIqD,EAA+B/K,KAAM0H,GAAI/G,SCnDxD,MAAMmR,UAA+B1K,EAOnCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,UAAWoH,GAIzBqK,QACL,OAAO,IAAIlM,EAAQ7F,MAAMM,KAAK,SAIzBwH,uBACL,OAAO,IAAIV,EAAYpH,MAAMM,KAAK,yBAI7B0R,SACL,OAAO,IAAInM,EAAQ7F,MAAMM,KAAK,UAIzB2R,MAAOvK,GACZ,OAAO,IAAIN,EAAYpH,MAAMM,KAAK,SAAUoH,GAIvCwK,QACL,OAAO,IAAI9K,EAAYpH,MAAMM,KAAK,SAASkC,QCxC/C,MAAM2P,UAAuC/K,EAO3CtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,mBAAoBoH,GAIlCO,WACL,OAAO,IAAIb,EAAYpH,MAAMM,KAAK,YAAYkC,OAIzC4P,aACL,OAAO,IAAIhL,EAAYpH,MAAMM,KAAK,cAAckC,QCrBpD,MAAM6P,UAAoCjL,EAOxCtH,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,WAILgS,QACL,OAAO,IAAIzM,EAAQ7F,MAAMM,KAAK,SAIzBiS,KAAM7K,GACX,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAASoH,GAItCyH,WACL,MAAM7F,EAAI,IAAIzD,EAAQ7F,MAEtB,OADAsJ,EAAEtI,MAAQ,YACHsI,EAIFkJ,SACL,MAAMlJ,EAAI,IAAIlC,EAAYpH,MAE1B,OADAsJ,EAAEtI,KAAO,iBACFsI,EAAE9G,QCnCb,MAAMiQ,WAA6BrL,EAOjCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,QAASoH,GAIvBgL,UACL,OAAO,IAAItL,EAAYpH,MAAMM,KAAK,WAI7BqS,SACL,OAAO,IAAIvL,EAAYpH,MAAMM,KAAK,UAI7BsS,WACL,OAAO,IAAI/M,EAAQ7F,MAAMM,KAAK,YAIzBmM,mBACL,OAAO,IAAIrF,EAAYpH,MAAMM,KAAK,qBAAqBkC,OAIlDwM,UACL,OAAO,IAAIqD,EAA4BrS,OCjC3C,MAAM6S,WAAgD9H,EAG7C2G,eAAgBC,GACrB,OClBJ,SAA+C5R,EAAmB4R,GAC9D,MAAMrI,EAAI,IAAIlC,EAAYrH,GACpB+S,EAAkBxJ,EAAEtI,KAE1B,OAAOsI,EAAEzI,QAAQ,QAAS,kBAAmBiS,EAAiB,kBAAkBrQ,OAAO,CACrFkP,SAAAA,IACCnP,ODYIuQ,CAAqC/S,KAAM2R,GAI7ChD,cACL,OAAO,IAAI9I,EAAQ7F,MAAMM,KAAK,eAIzBsO,WAAYlH,GACjB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,cAAeoH,GAI5CmH,UACL,OAAO,IAAIzH,EAAYpH,MAAMM,KAAK,WAAWkC,QE5BjD,MAAMwQ,WAA4BnN,EAOhC/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,QAAS,WAIdqD,UACL,OAAO,IAAIyD,EAAYpH,MAAMM,KAAK,WAI7BuH,wBACL,OAAO,IAAIP,EAA6BtH,MAQnC8H,qBAAsBJ,GAC3B,OAAO,IAAID,EAAgCzH,KAAM0H,GAI5CK,6BACL,OAAO,IAAIX,EAAYpH,MAAMM,KAAK,iCCnCtC,MAAM2S,WAAkC7L,EAOtCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,aAAcoH,GAI5B2G,SACL,OAAO,IAAIjH,EAAYpH,MAAMM,KAAK,UAI7B4S,gBACL,OAAO,IAAIrN,EAAQ7F,MAAMM,KAAK,mBCxBlC,MAAM6S,WAAgC/L,EAOpCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,WAAYoH,GAI1BO,WACL,OAAO,IAAIb,EAAYpH,MAAMM,KAAK,YAI7B8R,aACL,OAAO,IAAIhL,EAAYpH,MAAMM,KAAK,cAI7B8S,SACL,OAAO,IAAIhM,EAAYpH,MAAMM,KAAK,UAI7B+S,WACL,OAAO,IAAIjM,EAAYpH,MAAMM,KAAK,aCjCtC,MAAMgT,WAAsCzN,EAM1C/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,QAAS,sBAIdkO,WACL,OAAO,IAAI3I,EAAQ7F,MAAMM,KAAK,YAIzBiO,SACL,OAAO,IAAI1I,EAAQ7F,MAAMM,KAAK,WCjBlC,MAAMiT,WAAyCnM,EAO7CtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,qBAAsBoH,GAIpC8L,QACL,OAAO,IAAI3N,EAAQ7F,MAAMM,KAAK,SAIzBkF,OACL,OAAO,IAAI4B,EAAYpH,MAAMM,KAAK,QAI7BmT,UACL,OAAO,IAAIrM,EAAYpH,MAAMM,KAAK,YC5BtC,MAAMoT,WAAgCtM,EAOpCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,WAAYoH,GAI1BO,WACL,OAAO,IAAIb,EAAYpH,MAAMM,KAAK,YAAYkC,OAIzC4P,aACL,OAAO,IAAIhL,EAAYpH,MAAMM,KAAK,cAAckC,OAI3C8P,QACL,OAAO,IAAIzM,EAAQ7F,MAAMM,KAAK,UC5BlC,MAAMqT,WAA6B9N,EAGjC/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,QAAS,YAId0N,YACL,OAAO,IAAIF,EAAiB9N,MAIvBiO,YACL,OAAO,IAAIpI,EAAQ7F,MAAMM,KAAK,aAGzB4N,SACL,MAAM5E,EAAI,IAAIzD,EAAQ7F,MAQtB,MAPmB,OAAfA,KAAKc,MACPwI,EAAEhJ,KAAK,UAEPgJ,EAAE7G,OAAO,CACP0L,aAAa,IAGV7E,EAGFsK,YACL,MAAMtK,EAAItJ,KAAKkO,SAMf,OALA5E,EAAE7G,OAAO,CACP2C,OAAQ,oBACRc,MAAO,EACPH,KAAM,WAEDuD,EAGFuK,QACL,MAAMvK,EAAI,IAAIzD,EAAQ7F,MAMtB,OALAsJ,EAAE7G,OAAO,CACPoR,OAAO,EACP3N,MAAO,EACPH,KAAM,WAEDuD,EAGFwK,UACL,MAAMxK,EAAI,IAAIzD,EAAQ7F,MAItB,OAHAsJ,EAAE7G,OAAO,CACPsD,KAAM,gBAEDuD,GCxDX,MAAMyK,WAA+BlO,EAMnC/F,YAAaC,GACXwH,MAAMxH,GACNC,KAAKM,KAAK,QAAS,cAIdoJ,iBACL,OAAO,IAAI7D,EAAQ7F,MAAMM,KAAK,mBAIzB0T,aACL,OAAO,IAAInO,EAAQ7F,MAAMM,KAAK,eCjBlC,MAAM2T,WAAoC7M,EAOxCtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,QAAS,gBAAiBoH,GAI/BwM,WACL,OAAO,IAAIrO,EAAQ7F,MAAMM,KAAK,aCMlC,MAAM6T,WAAyB/M,EAO7BtH,YAAaC,GACXwH,MAAMxH,GAID0Q,eACL,OAAO,IAAI5K,EAAQ7F,MAAMM,KAAK,iBAIzBoQ,YAAahJ,GAClB,OAAO,IAAIyE,EAAuBnM,KAAM0H,GAInC0M,WACL,OAAO,IAAIvO,EAAQ7F,MAAMM,KAAK,QAAS,YAIlC0O,QAAStH,GACd,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAAS,WAAYoH,GAIlD2M,kBACL,OAAO,IAAIxO,EAAQ7F,MAAMM,KAAK,QAAS,oBAIlCgU,eAAgB5M,GACrB,OAAO,IAAIyK,EAA+BnS,KAAM0H,GAI3C6M,aACL,OAAO,IAAI1O,EAAQ7F,MAAMM,KAAK,QAAS,cAIlC+O,iBACL,OAAO,IAAIxJ,EAAQ7F,MAAMM,KAAK,QAAS,mBAIlCgP,cAAe5H,GACpB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAAS,kBAAmBoH,GAIzDwM,WACL,OAAO,IAAIrO,EAAQ7F,MAAMM,KAAK,QAAS,YAIlCkU,QAAS9M,GACd,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAAS,WAAYoH,GAIlD+M,WACL,OAAO,IAAI5O,EAAQ7F,MAAMM,KAAK,YAIzBoU,QAAShN,GACd,OAAO,IAAI2J,EAAwBrR,KAAM0H,GAIpCiN,kBACL,OAAO,IAAI9O,EAAQ7F,MAAMM,KAAK,QAAS,qBAIlCsU,eAAgBlN,GACrB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAAS,oBAAqBoH,GAI3DC,UACL,OAAO,IAAIqL,GAAoBhT,MAI1BgJ,OAAQtB,GACb,OAAO,IAAIoK,EAAuB9R,KAAM0H,GAGnCmN,gBAAiBnN,GACtB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,MAAMiH,EAAItJ,KAAK2H,UAIf,OAHA2B,EAAE7G,OAAO,CACP2C,OAAQ,oBAAsBsC,IAEzB4B,EAIFwL,iBACL,OAAO,IAAIjP,EAAQ7F,MAAMM,KAAK,QAAS,SAAU,YAI5CyU,eACL,OAAO,IAAIlP,EAAQ7F,MAAMM,KAAK,QAAS,iBAIlC0U,YAAatN,GAClB,OAAO,IAAIuM,GAA4BjU,KAAM0H,GAIxCuN,iBACL,OAAO,IAAIpP,EAAQ7F,MAAMM,KAAK,QAAS,mBAIlC4U,uBACL,OAAO,IAAIrP,EAAQ7F,MAAMM,KAAK,QAAS,yBAIlC6U,oBAAqBzN,GAC1B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAAS,wBAAyBoH,GAI/DgC,iBACL,OAAO,IAAI7D,EAAQ7F,MAAMM,KAAK,QAAS,mBAIlCkL,cAAe9D,GACpB,OAAO,IAAImL,GAAwC7S,KAAM0H,GAIpDuH,aACL,OAAO,IAAIqC,EAA2BtR,MAIjCkP,oBACL,OAAO,IAAIrJ,EAAQ7F,MAAMM,KAAK,QAAS,uBAIlC8U,cACL,OAAO,IAAIvP,EAAQ7F,MAAMM,KAAK,QAAS,gBAIlC+U,WAAY3N,GACjB,OAAO,IAAIN,EAAYpH,MAAMM,KAAK,QAAS,eAAgBoH,GAItD+H,eACL,OAAO,IAAI5J,EAAQ7F,MAAMM,KAAK,iBAGzBoP,YAAahI,GAClB,OAAO,IAAIqB,EAAuB/I,KAAM0H,GAInC4N,SACL,OAAO,IAAIzP,EAAQ7F,MAAMM,KAAK,QAAS,UAIlCiV,YAAa7N,GAClB,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAElB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAAS,SAAUoH,EAAI,UAAUlF,OAI9DgT,SACL,OAAO,IAAI3P,EAAQ7F,MAAMM,KAAK,QAAS,UAIlCiK,QACL,OAAO,IAAI1E,EAAQ7F,MAAMM,KAAK,SAIzBoK,KAAMhD,GACX,OAAO,IAAIsE,EAAgBhM,KAAM0H,GAI5BsM,aACL,OAAO,IAAInO,EAAQ7F,MAAMM,KAAK,QAAS,cAIlCmV,UAAW/N,GAChB,OAAO,IAAIuL,GAA0BjT,KAAM0H,GAItCgO,2BACL,MAAMpM,EAAItJ,KAAKgU,aAEf,OADA1K,EAAEhJ,KAAK,oBACAgJ,EAIFqM,mBACL,OAAO,IAAI9P,EAAQ7F,MAAMM,KAAK,QAAS,qBAIlCsS,WACL,OAAO,IAAI/M,EAAQ7F,MAAMM,KAAK,QAAS,YAIlCsV,QAASlO,GACd,OAAO,IAAIyL,GAAwBnT,KAAM0H,GAIpCmO,cACL,OAAO,IAAIzO,EAAYpH,MAAMM,KAAK,QAAS,eAItCwV,eACL,OAAO,IAAIjQ,EAAQ7F,MAAMM,KAAK,QAAS,iBAIlCyV,oBACL,OAAO,IAAIzC,GAA8BtT,MAIpCgW,iBAAkBtO,GACvB,OAAO,IAAI6L,GAAiCvT,KAAM0H,GAI7CuO,WACL,OAAO,IAAI7O,EAAYpH,MAAMM,KAAK,QAAS,YAGtC4V,QACL,OAAO,IAAIrQ,EAAQ7F,MAAMM,KAAK,QAAS,SAGlC6V,KAAMzO,GACX,OAAO,IAAIN,EAAYpH,MAAMM,KAAK,QAAS,QAASoH,GAI/CiI,WACL,OAAO,IAAI9J,EAAQ7F,MAAMM,KAAK,YAIzBsP,QAASlI,GACd,OAAO,IAAI+D,EAAmBzL,KAAM0H,GAI/B4K,QACL,OAAO,IAAIzM,EAAQ7F,MAAMM,KAAK,QAAS,SAIlCoL,OACL,OAAO,IAAI0F,EAAiBpR,MAIvB2L,IAAKjE,GACV,OAAO,IAAI+J,EAA8BzR,KAAM0H,GAI1C0O,UACL,OAAO,IAAIvQ,EAAQ7F,MAAMM,KAAK,QAAS,WAIlC+V,OAAQ3O,GACb,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAElB,OAAO,IAAI+E,EAAYpH,MAAMM,KAAK,QAAS,UAAWoH,GAIjDyH,WACL,OAAO,IAAIwE,GAAqB3T,MAI3BoP,QAAS1H,GACd,OAAO,IAAIgM,GAAwB1T,KAAM0H,GAIpC4O,WACL,OAAO,IAAIlP,EAAYpH,MAAMM,KAAK,QAAS,YAItCiQ,aACL,OAAO,IAAIwD,GAAuB/T,MAI7BoM,QACL,OAAO,IAAIvG,EAAQ7F,MAAMM,KAAK,SAIzBiW,aACL,OAAO,IAAI1Q,EAAQ7F,MAAMM,KAAK,QAAS,SAASkC,OAI3C6J,KAAM3E,GACX,OAAO,IAAI+K,GAAqBzS,KAAM0H,IClY1C,MAAM8O,WAA2BpP,EAO/BtH,YAAaC,EAAgB2H,GAC3B,GAAU,MAANA,EACF,MAAM,IAAIrF,MAAM,+BAGlBkF,MAAMxH,GACNC,KAAKM,KAAK,WAAYoH,GAIjB+O,oBACL,OAAO,IAAIrP,EAAYpH,MAAMM,KAAK,sBAI7B8P,cACL,OAAO,IAAIhJ,EAAYpH,MAAMM,KAAK,gBCrBtC,MAAMoW,WAA0BtP,EAK9BtH,YAAaC,GAEXwH,MAAMxH,GACNC,KAAKM,KAAK,UAILqW,OACL,OAAO,IAAI9Q,EAAQ7F,MAAMM,KAAK,SCC9B+M,OAAOC,WAETjK,UAAMuT,SAAShV,QAAQiV,OAAO,cAAgB,kDAIhDxT,EAAAA,QAAMuT,SAASE,iBAAmB,iBCxBX,CACrBC,ID8BF,MAYEjX,YAAauO,GACX,GAAc,MAAVA,EACF,MAAM,IAAIhM,MAAM,0BAMlB,GAHArC,KAAKqO,OAASA,EACdrO,KAAKsB,YAA0B,GAEH,MAAxBtB,KAAKqO,OAAO2I,SACd,MAAM,IAAIjI,UAAU,4BACf,GAAoC,iBAAzB/O,KAAKqO,OAAO2I,SAC5B,MAAM,IAAIjI,UAAU,6BACf,IAAK,oBAAoBvJ,KAAKxF,KAAKqO,OAAO2I,UAC/C,MAAM,IAAI3U,MAAM,oCAalB,GATArC,KAAKsB,YAAYC,QAAUvB,KAAKqO,OAAO2I,SAASlV,QAAQ,OAAQ,IAAM,OAGtE9B,KAAKqO,OAAO4I,KAAOjX,KAAKqO,OAAO4I,GAC3BjX,KAAKqO,OAAO4I,KACdjX,KAAKsB,YAAYC,SAAW,OAI1BvB,KAAKqO,OAAO6I,OAAQ,CACtB,GAAkC,iBAAvBlX,KAAKqO,OAAO6I,OACrB,MAAM,IAAInI,UAAU,2BACf,IAAK,oBAAoBvJ,KAAKxF,KAAKqO,OAAO6I,QAC/C,MAAM,IAAI7U,MAAM,iCAGlBrC,KAAKsB,YAAY6V,KAAO,CACtBC,SAAmBpX,KAAKqO,OAAO6I,OAC/BG,SAAU,IAKdrX,KAAKsB,YAAYgW,gBAA4C,MAA1BjJ,EAAOiJ,iBAAkCjJ,EAAOiJ,gBAGnFtX,KAAKqD,MAAQA,EAAK,QAACyC,OAAO9F,KAAKsB,aAO1BiW,cACL,OAAO,IAAIxG,EAAuB/Q,MAI7BqM,KAAM3E,GACX,OAAO,IAAIoH,EAAgB9O,KAAM0H,GAI5B0E,QACL,OAAO,IAAIpE,EAAahI,MAInBgP,QAAStH,GACd,OAAO,IAAI8O,GAAmBxW,KAAM0H,GAI/B8P,KACL,OAAOxX,KAAKqM,KAAK,MAIZoL,QACL,OAAO,IAAItD,GAAiBnU,MAIvB2H,UACL,OAAO,IAAIC,EAAe5H,MAIrBgJ,OAAQtB,GACb,OAAO,IAAImJ,EAAkB7Q,KAAM0H,GAI9B+H,eACL,OAAO,IAAI5J,EAAQ7F,MAAMM,KAAK,iBAIzBoP,YAAahI,GAClB,OAAO,IAAIqB,EAAuB/I,KAAM0H,GAInCgC,iBACL,OAAO,IAAI7D,EAAQ7F,MAAMM,KAAK,mBAIzBkL,cAAe9D,GACpB,OAAO,IAAI4D,EAAyBtL,KAAM0H,GAIrCgQ,cACL,OAAO,IAAI7R,EAAQ7F,MAAMM,KAAK,gBAIzBkQ,mBACL,OAAO,IAAI3K,EAAQ7F,MAAMM,KAAK,qBAIzBqX,QACL,OAAO,IAAIvQ,EAAYpH,MAAMM,KAAK,SAI7BsS,WACL,OAAO,IAAIxL,EAAYpH,MAAMM,KAAK,YAI7B0R,SACL,OAAO,IAAInM,EAAQ7F,MAAMM,KAAK,UAGzBsX,SACL,OAAO,IAAIlB,GAAkB1W,QChL/B0D,cAAAA"}
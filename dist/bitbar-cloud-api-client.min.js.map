{"version":3,"file":"bitbar-cloud-api-client.min.js","sources":["../src/Filter.ts","../src/finka.ts","../src/FilterBuilder.ts","../src/api/models/HTTP.ts","../src/api/APIEntity.ts","../src/api/APIList.ts","../src/api/APIResource.ts","../src/api/APIListCleanupConfigurations.ts","../src/api/APIResourceCleanupConfiguration.ts","../src/api/APIAdminListDevices.ts","../src/api/APIAdminListNotificationPlans.ts","../src/api/APIAdminListRuns.ts","../src/api/APIAdminListServices.ts","../src/api/decorators/NonRequestable.ts","../src/api/APIAdminListStatistics.ts","../src/api/APIAdminResourceAccountService.ts","../src/api/APIAdminResourceCluster.ts","../src/api/APIAdminResourceDevice.ts","../src/api/APIAdminResourceDeviceModel.ts","../src/api/class/InputFileset.ts","../src/api/class/Images.filter.ts","../src/api/class/NonMedia.filter.ts","../src/api/class/OutputFileset.ts","../src/api/APIResourceDeviceSessionCommon.ts","../src/api/APIAdminResourceDeviceSessionStandalone.ts","../src/api/factory/postAdminDeviceSessionChangeBillable.ts","../src/api/APIAdminResourceDeviceTime.ts","../src/api/APIAdminResourceFramework.ts","../src/api/APIAdminResourceLicense.ts","../src/api/APIAdminResourceNotificationPlan.ts","../src/api/factory/postDeviceRunIds.ts","../src/api/APIAdminResourceRunStandalone.ts","../src/api/APIAdminResourceService.ts","../src/api/APIAdminResourceUserAccount.ts","../src/api/APIResourceDeviceSessionStandalone.ts","../src/api/APIAdminResourceUser.ts","../src/api/APIResourceAccessGroup.ts","../src/api/APIResourceDeviceGroup.ts","../src/api/APIResourceFile.ts","../src/api/APIResourceDeviceSession.ts","../src/api/APIResourceRunCommon.ts","../src/api/APIResourceRun.ts","../src/api/APIResourceProject.ts","../src/api/APIAdminResource.ts","../src/api/APIListDevices.ts","../src/api/APIListProperties.ts","../src/api/APIListServices.ts","../src/api/APIListUsers.ts","../src/api/APIResourceAccount.ts","../src/api/APIResourceBroker.ts","../src/api/APIResourceDevice.ts","../src/api/APIResourceLabelGroup.ts","../src/api/APIListDeviceTime.ts","../src/api/APIListFiles.ts","../src/api/APIResourceChannel.ts","../src/api/APIListNotifications.ts","../src/api/APIListRuns.ts","../src/api/APIListSmartbearTunnels.ts","../src/api/APIResourceBillingPeriod.ts","../src/api/APIResourceNotification.ts","../src/api/APIResourceAdditionalUser.ts","../src/api/APIUserResourceAccount.ts","../src/api/APIResourceUser.ts","../src/api/APIResourceUserSession.ts","../src/API.ts","../src/CloudAPIClient.ts"],"sourcesContent":["/**\n * Filter\n */\n\nexport class Filter<T = any> {\n  name: string;\n  value: T;\n  operand: string;\n\n  constructor(name: string, value: T, operand: string) {\n    this.name = name;\n    this.value = value;\n    this.operand = operand;\n  }\n}\n\nexport default Filter;\n","import finka from '@bitbar/finka';\n\nfinka();\n\nexport default {};\n","import {Filter} from './Filter';\nimport './finka';\n\n/**\n * FilterBuilder\n *\n * Builds filter string according to Bitbar Cloud backend convention\n */\nexport class FilterBuilder {\n\n  private readonly filters: Array<Filter> = [];\n\n  gt(name: string, value: number): this {\n    return this.add(name, value, 'gt');\n  }\n\n\n  lt(name: string, value: number): this {\n    return this.add(name, value, 'lt');\n  }\n\n  after(name: string, value: Date | number): this {\n    return this.add(name, value, 'after', true);\n  }\n\n  afterorequal(name: string, value: Date | number): this {\n    return this.add(name, value, 'afterorequal', true);\n  }\n\n  before(name: string, value: Date | number): this {\n    return this.add(name, value, 'before', true);\n  }\n\n  beforeorequal(name: string, value: Date | number): this {\n    return this.add(name, value, 'beforeorequal', true);\n  }\n\n  on(name: string, value: any): this {\n    return this.add(name, value, 'on');\n  }\n\n  eq(name: string, value: any): this {\n    return this.add(name, value, 'eq');\n  }\n\n  contains(name: string, value: string): this {\n    return this.add(name, value, 'contains');\n  }\n\n  like(name: string, value: string): this {\n    return this.add(name, value, 'like');\n  }\n\n  notlike(name: string, value: string): this {\n    return this.add(name, value, 'notlike');\n  }\n\n  isnull(name: string): this {\n    return this.add(name, undefined, 'isnull');\n  }\n\n  in(name: string, value: Array<any>): this {\n    return this.add(name, value, 'in', true);\n  }\n\n  notin(name: string, value: Array<any>): this {\n    return this.add(name, value, 'notin', true);\n  }\n\n  raw(filter: Filter | string | Filter[] | string[]): void {\n    const filters = Array.wrap(filter);\n    for (const filter of filters) {\n      if (this.isFilterPart(filter)) {\n        this.filters.push(filter);\n      } else {\n        throw new SyntaxError(`Filter ${filter} has invalid syntax`);\n      }\n    }\n  }\n\n\n  /**\n   * Check if given string is proper filter part\n   */\n  isFilterPart(str: string): boolean {\n    return /^[a-zA-Z0-9.]{2,12}_(?:isnull$|(?:gt|lt|(?:after|before)(?:orequal)?|on|eq|contains|like|(?:not)?in)_)/.test(<string>str);\n  }\n\n  toString(): string {\n    const parts: Array<string> = [];\n\n    let part: string,\n      val: string;\n\n    for (const filter of this.filters) {\n      if (typeof filter === 'string') {\n        part = filter;\n      } else {\n        val = '';\n        if (filter.value.length > 1 || typeof filter.value[0] !== 'undefined') {\n          val = `_${filter.value.join('|')}`;\n        }\n        part = `${filter.name}_${filter.operand}${val}`;\n      }\n      parts.push(part);\n    }\n\n    return parts.join(';');\n  }\n\n  /**\n   * Add filter to filters list\n   * @param name {string} Name\n   * @param value {*} Value\n   * @param operand {string} Operand\n   * @param [checkNull=false] {boolean} Check null?\n   * @returns {FilterBuilder}\n   */\n  private add<T = any>(name: string, value: T, operand: string, checkNull = false): this {\n\n    let _value = Array.wrap(value);\n\n    if (_value.length === 0) {\n      return this;\n    }\n\n    // auto-convert\n    for (let i = 0; i < _value.length; i++) {\n      const v = _value[i];\n      if (typeof v === 'object' && v instanceof Date) {\n        _value[i] = v.getTime();\n      }\n    }\n\n    let isNull = false;\n    if (checkNull) {\n      // check null existence\n      for (const v of _value) {\n        if (v !== null) {\n          continue;\n        }\n        isNull = true;\n      }\n\n      if (isNull) {\n        _value = _value.filter((item: any) => item !== null);\n        operand += 'ornull';\n      }\n    }\n\n    if (operand.endsWith('ornull') && _value.length === 0) {\n      operand = 'isnull';\n    }\n\n    // add filter\n    this.filters.push(new Filter<Array<T>>(name, _value, operand));\n\n    return this;\n  }\n}\n\n\nexport default FilterBuilder;\n","import {Method} from 'axios';\n\n\n/**\n * Allowed methods\n *\n * @constant\n * @type {Array}\n * @default\n */\nexport const ALLOWED_HTTP_METHODS: Array<Method> = ['GET', 'POST', 'DELETE'];\n\nexport type QueryParam = string | number | boolean;\nexport type QueryParams = Record<string, QueryParam | Array<QueryParam>>;\n\nexport enum APIOrder {\n  asc = 'a',\n  desc = 'd'\n}\n\nexport interface CollectionQueryParams extends QueryParams {\n  filter: string;\n  limit: number;\n  offset: number;\n  sort: string;\n  search: string;\n}\n\nexport type CollectionBasicQueryParams = Omit<CollectionQueryParams, 'search'>\n\nexport type NoQueryParams = {\n  [key in any]: never;\n}\n\nexport type CollectionResponse<T> = {\n  data: Array<T>;\n  empty: boolean;\n  id: number;\n  limit: number;\n  next: string;\n  offset: number;\n  previous: string;\n  search: string;\n  sort: string;\n  total: number;\n}\n\nexport type SimpleCollectionResponse<T> = Pick<CollectionResponse<T>, 'data' | 'id'>;\nexport type NoData = void;\n","import {AxiosRequestConfig, AxiosResponse, Method} from 'axios';\nimport {stringify} from 'qs';\nimport {API} from '../API';\nimport {ALLOWED_HTTP_METHODS, QueryParams} from './models/HTTP';\nimport {AbortController} from 'node-abort-controller';\n\n\n/**\n * @typeParam RESPONSE        HTTP Response return type.\n * @typeParam QUERY_PARAMS    Allowed Query Params\n * @typeParam DATA Allowed    Data Object\n */\nexport class APIEntity<RESPONSE = any, QUERY_PARAMS extends QueryParams | void = QueryParams, DATA = any> {\n\n  root: API;\n\n  protected stack: Array<string | number> = [];\n  protected requestConfig: AxiosRequestConfig = {};\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ALLOWED_HTTP_METHODS;\n  protected abortController: AbortController;\n\n  /**\n   * Constructor\n   * @param {APIEntity|object} [parent] - Specifies a parent from which should be inherited properties\n   */\n  constructor(parent: APIEntity<RESPONSE> | API) {\n    if (parent instanceof APIEntity) {\n      this.root = parent.root;\n\n      if (Array.isArray(parent.stack)) { //???\n        this.push(...parent.stack);\n      }\n\n      if (parent.requestConfig != null) {\n        this.setRequestConfig(parent.requestConfig);\n      }\n    } else {\n      this.root = parent;\n    }\n    this.abortController = new AbortController();\n  }\n\n  abortRequest() {\n    this.abortController.abort();\n  }\n\n  push(...items: Array<string | number>): this {\n    this.stack = this.stack.concat(items);\n    return this;\n  }\n\n  shift(): this {\n    this.stack.shift();\n    return this;\n  }\n\n  restack(...items: Array<string | number>): this {\n    this.stack = items;\n    return this;\n  }\n\n  /**\n   * Get first element of the stack\n   */\n  get first(): string | number {\n    return this.stack[0];\n  }\n\n  /**\n   * Get last element of the stack\n   */\n  get last(): string | number {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Set last element of the stack\n   */\n  set last(val) {\n    this.stack[this.stack.length - 1] = val;\n  }\n\n  toUrl(absolute = false): string {\n    let url = `/${this.stack.join('/')}`;\n\n    if (absolute) {\n      url = this.root.baseUrl + url;\n    }\n\n    return url;\n  }\n\n  setRequestConfig(requestConfig: AxiosRequestConfig): this {\n    Object.deepAssign(this.requestConfig, requestConfig);\n    return this;\n  }\n\n  removeRequestConfig(key: keyof AxiosRequestConfig): this {\n    delete this.requestConfig[key];\n    return this;\n  }\n\n  headers(headers: Record<string, string>): this {\n    const _headers: Record<string, string> = {};\n\n    // Unify/Standarize headers keys\n    for (const key in headers) {\n      const newKey = key.replace(/(?:^|-)([a-z])/g, (letter) => letter.toUpperCase());\n      _headers[newKey] = headers[key];\n    }\n\n    return this.setRequestConfig({\n      headers: _headers\n    });\n  }\n\n  /**\n   * Set HTTP method\n   */\n  method(name: Method): this {\n    const NAME: Uppercase<Method> = <Uppercase<Method>>name.toLocaleUpperCase();\n    const isAllowed: boolean = this.ALLOWED_HTTP_METHODS.indexOf(NAME) > -1;\n\n    if (!isAllowed) {\n      throw new Error(`Method '${NAME}' is not allowed! You can use: ${this.ALLOWED_HTTP_METHODS.join(', ')}`);\n    }\n\n    return this.setRequestConfig({\n      method: NAME\n    });\n  }\n\n  /**\n   * Set GET as HTTP method\n   */\n  get(): this {\n    return this.method('GET');\n  }\n\n  /**\n   * Set POST as HTTP method\n   */\n  post(): this {\n    return this.method('POST');\n  }\n\n  /**\n   * Set params\n   */\n  params<T extends keyof QUERY_PARAMS = keyof QUERY_PARAMS>(params: Pick<QUERY_PARAMS, T>): this {\n    this.setRequestConfig({params});\n    return this;\n  }\n\n  getParams(): Partial<QUERY_PARAMS> {\n    return this.requestConfig.params == null ? {} : this.requestConfig.params;\n  }\n\n  removeParam(key: keyof QUERY_PARAMS): this {\n    delete this.requestConfig.params[key];\n    return this;\n  }\n\n  /**\n   * Set data\n   */\n  data(data: DATA): this {\n    this.setRequestConfig({data});\n    return this;\n  }\n\n  /**\n   * Set JSON data\n   */\n  jsonData(data: DATA): this {\n    this.headers({\n      'Content-Type': 'application/json'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Set form data\n   */\n  formData(data: DATA): this {\n    this.headers({\n      'Content-Type': 'multipart/form-data'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Send request\n   */\n  send<T = RESPONSE>(): Promise<AxiosResponse<T>> {\n    const requestConfig = <AxiosRequestConfig>Object.deepAssign({}, this.requestConfig, {\n      url: `/${this.stack.join('/')}`,\n      signal: this.abortController.signal\n    });\n\n    // Set default headers\n    if (requestConfig.headers == null) {\n      requestConfig.headers = {};\n    }\n\n    // Set default Content-Type\n    if (requestConfig.headers['Content-Type'] == null) {\n      requestConfig.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // Convert data if needed\n    if (requestConfig.method === 'POST' &&\n      (<string>requestConfig.headers['Content-Type']).startsWith('application/x-www-form-urlencoded') &&\n      requestConfig.data != null) {\n      requestConfig.data = this.paramsSerializer(requestConfig.data);\n    }\n\n    if (requestConfig.params) {\n      requestConfig.paramsSerializer = this.paramsSerializer;\n    }\n\n    // Send request\n    return this.root.axios.request<T>(requestConfig);\n  }\n\n  protected paramsSerializer(params: DATA | QUERY_PARAMS): string {\n    return stringify(params, {\n      arrayFormat: 'brackets'\n    });\n  }\n}\n\n\nexport default APIEntity;\n","import {AxiosResponse} from 'axios';\nimport {FilterBuilder} from '../FilterBuilder'\nimport {APIEntity} from './APIEntity'\nimport {APIOrder, CollectionBasicQueryParams, CollectionQueryParams, CollectionResponse, NoQueryParams, SimpleCollectionResponse} from './models/HTTP';\n\n\nexport const DEFAULT_LIMIT: number = 20;\nexport const DEFAULT_OFFSET: number = 0;\n\nexport class APIList<RESPONSE = any, QUERY_PARAMS extends CollectionBasicQueryParams | CollectionQueryParams | NoQueryParams = CollectionQueryParams, DATA = any>\n  extends APIEntity<CollectionResponse<RESPONSE> | APIEntity<SimpleCollectionResponse<RESPONSE>>, QUERY_PARAMS, DATA> {\n\n  /**\n   * Shortcut for sending data POST\n   */\n  create(data: DATA): Promise<AxiosResponse<RESPONSE>> {\n    return this.post().data(data).send<RESPONSE>();\n  }\n\n  /**\n   * Sets sorting\n   *\n   * @public\n   * @param {string} name - Name of the column according to which the data will be sorted\n   * @param {string} [order=a] - Sorting order. Possibilities: 'a', 'd'\n   */\n  sort(name: string, order: APIOrder = APIOrder.asc): this {\n    return this.params<'sort'>({\n      sort: `${name}_${order}`\n    });\n  }\n\n  /**\n   * Sets limit\n   *\n   * @public\n   * @param {number} [limit=DEFAULT_LIMIT] - Limit to be set\n   * @returns this\n   */\n  limit(limit = DEFAULT_LIMIT): this {\n    if (!Number.isNatural(limit)) {\n      throw new Error(`Limit '${limit}' is invalid!`);\n    }\n\n    return this.params<'limit'>({\n      limit\n    });\n  }\n\n  /**\n   * Gets limit\n   *\n   * @public\n   * @returns number\n   */\n  getLimit(): number {\n    const params = this.getParams();\n    return params.limit == null ? DEFAULT_LIMIT : <number>params.limit;\n  }\n\n  /**\n   * Disables limit\n   *\n   * @public\n   * @returns this\n   */\n  noLimit(): this {\n    return this.limit(0);\n  }\n\n  /**\n   * Sets offset\n   *\n   * @public\n   * @param {number} [offset=DEFAULT_OFFSET] - Offset to be set\n   * @returns this\n   */\n  offset(offset: number = DEFAULT_OFFSET): this {\n    if (!Number.isNatural(offset)) {\n      throw new Error(`Offset '${offset}' is invalid!`);\n    }\n\n    return this.params<'offset'>({\n      offset\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE records between range\n   *\n   * @public\n   * @param {number} from - From index\n   * @param {number} to - To index\n   * @returns this\n   */\n  between(from: number, to: number): this {\n    if (!Number.isNatural(from)) {\n      throw new Error(`From '${from}' is invalid!`);\n    }\n\n    if (!Number.isNatural(to)) {\n      throw new Error(`To '${to}' is invalid!`);\n    }\n\n    return this.params<'offset' | 'limit'>({\n      offset: from,\n      limit: 1 + (to - from)\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE one record on given index\n   *\n   * @public\n   * @param {number} idx - Index\n   * @returns this\n   */\n  only(idx: number): this {\n    if (!Number.isNatural(idx)) {\n      throw new Error(`Index '${idx}' is invalid!`);\n    }\n\n    return this.params<'offset' | 'limit'>({\n      offset: idx,\n      limit: 1\n    });\n  }\n\n  /**\n   * Gets current limit and sets offset so that will request from BE one page of records\n   *\n   * @public\n   * @param {number} [page=1] - Page number (counted from 1)\n   * @returns this\n   */\n  page(page = 1): this {\n    if (!Number.isNatural(page) || page == 0) {\n      throw new Error(`Page '${page}' is invalid!`);\n    }\n\n    const limit = this.getLimit();\n    const offset = (page - 1) * limit;\n\n    return this.params<'offset' | 'limit'>({\n      offset,\n      limit\n    });\n  }\n\n  /**\n   * Sets search\n   *\n   * query param is working like SQL LIKE. BE sets wraps around query with %, and replaces every white character\n   * with %. So e.g. if query='my device', then it's searching for '%my%device%' in DB.\n   *\n   * @public\n   * @param {string} query - Query to search for\n   * @returns this\n   */\n  search(query: string): this {\n    if (typeof query !== 'string') {\n      throw new Error('Search query must be a string!');\n    }\n\n    return this.params<'search'>({\n      search: query\n    });\n  }\n\n  /**\n   * Sets filter\n   *\n   * @public\n   * @param {FilterBuilder|string} filter - Filter\n   * @returns this\n   */\n  filter(filter: FilterBuilder | string): this {\n    const isFilterBuilder = filter instanceof FilterBuilder;\n\n    if (typeof filter !== 'string' && !isFilterBuilder) {\n      throw new Error('Filter must be either string or instance of FilterBuilder');\n    }\n\n    return this.params<'filter'>({\n      filter: filter.toString()\n    });\n  }\n\n  /**\n   * Alias for 'noLimit'\n   *\n   * @public\n   * @see noLimit\n   * @returns this\n   */\n  all: typeof APIList.prototype.noLimit = this.noLimit;\n\n  /**\n   * Alias for 'between'\n   *\n   * @public\n   * @param {number} from - From idx\n   * @param {number} to - To idx\n   * @returns this\n   */\n  cut: typeof APIList.prototype.between = this.between;\n}\n\nexport default APIList;\n","import {APIEntity} from './APIEntity'\nimport {QueryParams} from './models/HTTP';\n\n\n/**\n * APIResource\n *\n * @class\n * @extends APIEntity\n */\nexport class APIResource<RESPONSE = any, QUERY_PARAMS extends QueryParams | void = QueryParams, DATA = QUERY_PARAMS>\n  extends APIEntity<RESPONSE, QUERY_PARAMS, DATA> {\n\n  /**\n   * Set DELETE as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  delete(): this {\n    return this.method('DELETE');\n  }\n}\n\n\nexport default APIResource;\n","import {APIAdminListDevices} from './APIAdminListDevices';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {CleanupConfigurationData, SpecificCleanupConfigurationQueryParams} from './models/CleanupConfiguration';\nimport {DeviceCleanupConfiguration} from './models/Device';\nimport {CollectionQueryParams, NoData} from './models/HTTP';\n\n\nexport class APIListCleanupConfigurations extends APIList<DeviceCleanupConfiguration, CollectionQueryParams, CleanupConfigurationData> {\n\n  /**\n   * /cleanup-configurations\n   */\n  constructor(parent: APIAdminListDevices) {\n    super(parent);\n    this.push('cleanup-configurations');\n  }\n\n  // /cleanup-configurations/specific\n  specific() {\n    return new APIResource<DeviceCleanupConfiguration, Partial<SpecificCleanupConfigurationQueryParams>, NoData>(this)\n      .push('specific');\n  }\n\n}\n\nexport default APIListCleanupConfigurations\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIResource} from './APIResource'\nimport {CleanupConfigurationSpecificData, DeviceCleanupConfiguration} from './models/Device';\nimport {NoData} from './models/HTTP';\n\n\nexport class APIResourceCleanupConfiguration extends APIResource<DeviceCleanupConfiguration> {\n  //shuldn't it be APIAdminResourceCleanupConfiguration\n\n  /**\n   * admin/devices/cleanup-configurations/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('cleanup-configurations', id);\n  }\n\n  // admin/devices/cleanup-configurations/specific\n  devices() {\n    return new APIResource<DeviceCleanupConfiguration, CleanupConfigurationSpecificData, NoData>(this).push('devices');\n  }\n\n}\n\nexport default APIResourceCleanupConfiguration\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIListCleanupConfigurations} from './APIListCleanupConfigurations';\nimport {APIResourceCleanupConfiguration} from './APIResourceCleanupConfiguration';\nimport {AdminDevice, AdminDeviceData, AdminDevicesQueryParams} from './models/AdminDevice';\n\n\nexport class APIAdminListDevices extends APIList<AdminDevice, AdminDevicesQueryParams, AdminDeviceData> {\n\n  /**\n   * /admin/devices\n   */\n  constructor(parent: APIAdminResource | API) {\n    super(parent);\n    this.push('admin', 'devices');\n  }\n\n  // /admin/devices/cleanup-configurations\n  cleanupConfigurations() {\n    return new APIListCleanupConfigurations(this);\n  }\n\n  // /admin/devices/cleanup-configurations/{id}\n  cleanupConfiguration(id: number) {\n    return new APIResourceCleanupConfiguration(this, id);\n  }\n\n}\n\nexport default APIAdminListDevices;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {Enum} from './models/Enum';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {NotificationPlan, NotificationPlanData} from './models/NotificationPlan';\n\n\nexport class APIAdminListNotificationPlans extends APIList<NotificationPlan, CollectionQueryParams, NotificationPlanData> {\n\n  /**\n   * /admin/notification-plans\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'notification-plans');\n  }\n\n  // /notification-plans/channels\n  channels() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('channels');\n  }\n\n  // /notification-plans/scopes\n  scopes() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('scopes');\n  }\n\n}\n\n\nexport default APIAdminListNotificationPlans\n","import {Method} from 'axios';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource';\nimport {AdminTestRun, RunsConfigParams} from './models/AdminTestRun';\nimport {TestRunConfig} from './models/TestRun';\n\nexport class APIAdminListRuns extends APIList<AdminTestRun> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['GET'];\n\n  /**\n   * /admin/runs\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'runs');\n  }\n\n  // /runs/config\n  config() {\n    const apiResource = new APIResource<TestRunConfig, RunsConfigParams, {configuration: TestRunConfig}>(this);\n    apiResource.restack('runs', 'config');\n    return apiResource;\n  }\n\n}\n\n\nexport default APIAdminListRuns\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {AdminServicesParams, Service} from './models/Service';\n\n\nexport class APIAdminListServices extends APIList<Service, AdminServicesParams, Service> {\n\n  /**\n   * /admin/services\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'services');\n  }\n\n  active() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'notArchived'>({\n      notArchived: true\n    });\n    return apiList;\n  }\n\n  activated() {\n    const apiList = this.active();\n    apiList.params<'filter' | 'limit' | 'sort'>({\n      filter: 'activated_eq_true',\n      limit: 0,\n      sort: 'name_a'\n    })\n    return apiList;\n  }\n\n  inUse() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'inUse' | 'limit' | 'sort'>({\n      inUse: true,\n      limit: 0,\n      sort: 'name_a'\n    })\n    return apiList;\n  }\n\n  byPrice() {\n    const apiList = new APIList<Service, AdminServicesParams, Service>(this);\n    apiList.params<'sort'>({\n      sort: 'centPrice_a'\n    })\n    return apiList;\n  }\n\n}\n\nexport default APIAdminListServices;\n","import {AxiosResponse} from 'axios';\n\nexport function NonRequestable<T extends {new(...args: any[]): object}>(constructor: T) {\n  return class extends constructor {\n    send(): Promise<AxiosResponse> {\n      return Promise.reject();\n    }\n  };\n}\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AdminDeviceSessionStatistics, AdminStatisticsParams} from './models/AdminDeviceSessionStatistics';\nimport {AdminFrameworkStatistics} from './models/AdminFrameworkStatistics';\nimport {NoData} from './models/HTTP';\n\n\n@NonRequestable\nexport class APIAdminListStatistics extends APIList {\n\n  /**\n   * /admin/statistics\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'statistics');\n  }\n\n  // /admin/statistics/device-sessions\n  deviceSessions() {\n    return new APIList<AdminDeviceSessionStatistics, AdminStatisticsParams, NoData>(this).push('device-sessions');\n  }\n\n  // /admin/statistics/frameworks\n  frameworks() {\n    return new APIList<AdminFrameworkStatistics, AdminStatisticsParams, NoData>(this).push('frameworks');\n  }\n\n\n}\n\n\nexport default APIAdminListStatistics\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {AccountService} from './models/AccountService';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\nexport class APIAdminResourceAccountService extends APIResource<AccountService, NoQueryParams, NoData> {\n\n  /**\n   * /admin/account-services/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'account-services', id);\n  }\n\n  // /account-services/{id}/activate\n  activate() {\n    return new APIResource<AccountService, NoQueryParams, NoData>(this).push('activate').post();\n  }\n\n  // /account-services/{id}/deactivate\n  deactivate() {\n    return new APIResource<AccountService, NoQueryParams, NoData>(this).push('deactivate').post();\n  }\n\n}\n\nexport default APIAdminResourceAccountService\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {AdminDevice} from './models/AdminDevice';\nimport {Cluster, ClusterData, ClusterParams} from './models/Cluster';\n\n\nexport class APIAdminResourceCluster extends APIResource<Cluster, ClusterParams, ClusterData> {\n\n  /**\n   * /clusters/{id}\n   */\n  constructor(parent: API | APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('clusters', id);\n  }\n\n  // /clusters/{id}/devices\n  devices() {\n    return new APIList<AdminDevice>(this).push('devices');\n  }\n\n}\n\nexport default APIAdminResourceCluster\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {AdminDevice, AdminDeviceData} from './models/AdminDevice';\nimport {AdminDeviceSession} from './models/AdminDeviceSession';\nimport {\n  DeviceCleanupConfiguration,\n  DeviceCleanupConfigurationData,\n  DeviceLabelData,\n  DeviceProperty\n} from './models/Device';\nimport {NoData, NoQueryParams, QueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceDevice extends APIResource<AdminDevice, NoQueryParams, AdminDeviceData> {\n\n  /**\n   * /admin/devices/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'devices', id);\n  }\n\n  // /admin/devices/{id}/blink\n  blink() {\n    return new APIResource<AdminDevice, NoQueryParams, NoData>(this).push('blink').post();\n  }\n\n  // /admin/devices/{id}/cleanup-configuration\n  cleanupConfiguration() {\n    return new APIResource<DeviceCleanupConfiguration, QueryParams, DeviceCleanupConfigurationData>(this).push('cleanup-configuration');\n  }\n\n  // /admin/devices/{id}/labels\n  labels() {\n    return new APIList<DeviceProperty, NoQueryParams, DeviceLabelData>(this).push('labels');\n  }\n\n  // /admin/devices/{id}/labels/{id}\n  label(id: number) {\n    return new APIResource<DeviceProperty, NoQueryParams, NoData>(this).push('labels', id);\n  }\n\n  // /admin/devices/{id}/queue\n  queue() {\n    return new APIList<AdminDeviceSession>(this).push('queue');\n  }\n\n}\n\nexport default APIAdminResourceDevice\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Browser, DeviceBrowserData} from './models/Browser';\nimport {DeviceModel, DeviceModelData} from './models/DeviceModel';\nimport {NoQueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceDeviceModel extends APIResource<DeviceModel, NoQueryParams, DeviceModelData> {\n\n  /**\n   * /admin/device-models/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'device-models', id);\n  }\n\n  // /admin/device-models/{id}/browsers\n  browsers() {\n    return new APIList<Browser, NoQueryParams, DeviceBrowserData>(this).push('browsers');\n  }\n\n}\n\nexport default APIAdminResourceDeviceModel;\n","import {API} from '../../API';\nimport {APIEntity} from '../APIEntity';\nimport {APIList} from '../APIList'\nimport {APIResource} from '../APIResource'\nimport {NonRequestable} from '../decorators/NonRequestable';\nimport {NoData} from '../models/HTTP';\nimport {UserFile} from '../models/UserFile';\nimport {FilesQueryParams} from './FilesQueryParams';\n\n\n@NonRequestable\nexport class InputFileset extends APIResource<NoData> {\n\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('input-file-set');\n  }\n\n  /**\n   * @endpoint /input-file-set/files\n   */\n  files() {\n    return new APIList<UserFile, FilesQueryParams, NoData>(this).push('files');\n  }\n\n  /**\n   * @endpoint /input-file-set/files.zip\n   */\n  filesZip() {\n    return new APIResource<Blob, FilesQueryParams>(this).push('files.zip');\n  }\n}\n\nexport default InputFileset\n","// Create image files filter\nimport FilterBuilder from '../../FilterBuilder';\n\nexport const IMAGE_FILES_FILTER = new FilterBuilder();\nIMAGE_FILES_FILTER.eq('state', 'READY');\nIMAGE_FILES_FILTER.in('mimetype', [\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif'\n]);\nIMAGE_FILES_FILTER.notlike('name', 'action-%%');\n","// Create non-media files filter\nimport FilterBuilder from '../../FilterBuilder';\n\nexport const NON_MEDIA_FILES_FILTER = new FilterBuilder();\nNON_MEDIA_FILES_FILTER.eq('state', 'READY');\nNON_MEDIA_FILES_FILTER.notin('mimetype', [\n  // no images\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif',\n\n  // no videos\n  'video/mp4', 'video/avi', 'video/webm', 'video/ogg', 'video/mpeg'\n]);\n","import {API} from '../../API';\nimport {APIEntity} from '../APIEntity';\nimport {APIList} from '../APIList'\nimport {APIResource} from '../APIResource'\nimport {NonRequestable} from '../decorators/NonRequestable';\nimport {Screenshot} from '../models/Screenshot';\nimport {UserFile} from '../models/UserFile';\nimport {FilesQueryParams} from './FilesQueryParams';\nimport {IMAGE_FILES_FILTER} from './Images.filter';\nimport {NON_MEDIA_FILES_FILTER} from './NonMedia.filter';\n\n\n@NonRequestable\nexport class OutputFileset extends APIResource<UserFile, FilesQueryParams> {\n\n  /**\n   * /output-file-set\n   *\n   * Constructor\n   */\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('output-file-set');\n  }\n\n  // /output-file-set/files\n  files() {\n    return new APIList<UserFile, FilesQueryParams>(this).push('files');\n  }\n\n  // /output-file-set/files/{id}\n  file(id: number) {\n    return new APIResource<UserFile, FilesQueryParams>(this).push('files', id);\n  }\n\n  // /output-file-set/files.zip\n  filesZip() {\n    return new APIResource<Blob, FilesQueryParams>(this).push('files.zip');\n  }\n\n  // /output-file-set/screenshots\n  screenshots() {\n    return new APIList<Screenshot, FilesQueryParams>(this).push('screenshots');\n  }\n\n  // /output-file-set/screenshots/{id}\n  screenshot(id: number) {\n    return new APIResource<Screenshot, FilesQueryParams>(this).push('screenshots', id);\n  }\n\n  // /output-file-set/screenshots/{id}/file/{id}\n  screenshotFile(id: number) {\n    return this.screenshot(id).push('file');\n  }\n\n  // Filter files out by ready videos\n  videos() {\n    return this.files().params({\n      filter: 's_state_eq_READY',\n      tag: ['video']\n    });\n  }\n\n  // Filter files out by non-media\n  nonMediaFiles() {\n    return this.files().filter(NON_MEDIA_FILES_FILTER);\n  }\n\n  performance() {\n    return this.files().params({\n      tag: ['performance']\n    })\n  }\n\n  images() {\n    return this.files().filter(IMAGE_FILES_FILTER);\n  }\n\n}\n\nexport default OutputFileset\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource'\nimport {InputFileset} from './class/InputFileset'\nimport {OutputFileset} from './class/OutputFileset'\nimport {DeviceSessionCommon} from './interface/DeviceSessionCommon';\nimport {DeviceSession, DeviceSessionCommand, DeviceSessionStep, SessionQueryParams, SessionRunStepQueryParams, SessionStepQueryParams} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Screenshot} from './models/Screenshot';\nimport {TestCaseRun} from './models/TestCaseRun';\n\nexport class APIResourceDeviceSessionCommon extends APIResource<DeviceSession> implements DeviceSessionCommon {\n\n  /**\n   * /device-sessions/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/commands\n  commands() {\n    return new APIList<DeviceSessionCommand>(this).push('commands');\n  }\n\n  // /device-sessions/{id}/input-file-set\n  input() {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  output() {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/screenshots\n  screenshots() {\n    return new APIList<Screenshot, SessionQueryParams | SessionRunStepQueryParams | SessionStepQueryParams, NoData>(this).push('screenshots');\n  }\n\n  // /device-sessions/{id}/screenshots/{id}\n  screenshot(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /device-sessions/{id}/steps\n  steps() {\n    return new APIList<DeviceSessionStep, CollectionBasicQueryParams | SessionRunStepQueryParams | SessionStepQueryParams, NoData>(this).push('steps');\n  }\n\n  // /device-sessions/{id}/steps/{id}\n  step(id: number | 'current') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<DeviceSessionStep, NoQueryParams, NoData>(this).push('steps', id);\n  }\n\n  // /device-sessions/{id}/steps/current\n  currentStep() {\n    return this.step('current');\n  }\n\n  // /device-sessions/{id}/test-case-runs\n  testCaseRuns() {\n    return new APIList<TestCaseRun, SessionQueryParams | NoQueryParams, NoData>(this).push('test-case-runs');\n  }\n\n  // /device-sessions/{id}/connections\n  connections() {\n    return new APIList(this).push('connections');\n  }\n\n  logs() {\n    return new APIResource(this).push('logs').setRequestConfig({\n      responseType: 'text'\n    });\n  }\n\n}\n\nexport default APIResourceDeviceSessionCommon\n","import {APIResourceDeviceSessionCommon} from './APIResourceDeviceSessionCommon';\nimport {postAdminDeviceSessionChangeBillable} from './factory/postAdminDeviceSessionChangeBillable';\nimport {DeviceSessionCommon} from './interface/DeviceSessionCommon';\n\n\n/**\n * APIAdminResourceDevice\n *\n *\n * It will require more work to decouple from regular session\n */\nexport class APIAdminResourceDeviceSessionStandalone extends APIResourceDeviceSessionCommon implements DeviceSessionCommon {\n\n  // /admin/device-sessions/{id}/changebillable\n  changeBillable(billable: boolean) {\n    return postAdminDeviceSessionChangeBillable(this, billable);\n  }\n}\n\nexport default APIAdminResourceDeviceSessionStandalone;\n","import {APIResource} from '../APIResource';\nimport APIResourceDeviceSessionCommon from '../APIResourceDeviceSessionCommon';\nimport {DeviceSession} from '../models/DeviceSession';\n\nexport function postAdminDeviceSessionChangeBillable(parent: APIResourceDeviceSessionCommon, billable: boolean) {\n  const apiResource = new APIResource<DeviceSession>(parent);\n  const deviceSessionId = apiResource.last;\n\n  return apiResource.restack('admin', 'device-sessions', deviceSessionId, 'changebillable').params({\n    billable\n  }).post();\n}\n\nexport default postAdminDeviceSessionChangeBillable;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {DeviceTimeCountSessionReportEntry} from './models/DeviceTimeCountSessionReportEntry';\nimport {DeviceTimeStepTimeReportEntry} from './models/DeviceTimeStepTimeReportEntry';\nimport {NoData} from './models/HTTP';\nimport {DeviceTimeParams, UserDeviceTime} from './models/UserDeviceTime';\n\nexport class APIAdminResourceDeviceTime extends APIList<UserDeviceTime, DeviceTimeParams, NoData> {\n\n  /**\n   * /admin/device-time\n   */\n  constructor(parent: APIAdminResource) {\n    super(parent);\n    this.push('admin', 'device-time');\n  }\n\n  // /device-time/count-session-report\n  countSessionReport() {\n    return new APIList<DeviceTimeCountSessionReportEntry>(this).push('count-session-report');\n  }\n\n  // /device-time/step-time-report\n  stepTimeReport() {\n    return new APIList<DeviceTimeStepTimeReportEntry>(this).push('step-time-report');\n  }\n\n}\n\nexport default APIAdminResourceDeviceTime\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Framework, FrameworkConfigData, FrameworkEditData} from './models/Framework';\nimport {NoQueryParams} from './models/HTTP';\nimport {ProjectJobConfig} from './models/ProjectJobConfig';\nimport {Role} from './models/Role';\n\nexport class APIAdminResourceFramework extends APIResource<Framework, NoQueryParams, FrameworkEditData> {\n\n  /**\n   * /admin/frameworks/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'frameworks', id);\n  }\n\n  // /admin/frameworks/{id}/config\n  config() {\n    return new APIResource<ProjectJobConfig, NoQueryParams, FrameworkConfigData>(this).push('config');\n  }\n\n  // /admin/frameworks/{id}/required-roles\n  requiredRoles() {\n    return new APIList<Role>(this).push('required-roles');\n  }\n\n}\n\nexport default APIAdminResourceFramework\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {License} from './models/License';\n\nexport class APIAdminResourceLicense extends APIResource<License, NoQueryParams, NoData> {\n\n  /**\n   * /licenses/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'licenses', id);\n  }\n\n  // /licenses/{id}/activate\n  activate() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('activate');\n  }\n\n  // /licenses/{id}/deactivate\n  deactivate() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('deactivate');\n  }\n\n  // /licenses/{id}/resend\n  resend() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('resend');\n  }\n\n  // /licenses/{id}/download\n  download() {\n    return new APIResource<Blob, NoQueryParams, NoData>(this).push('download');\n  }\n\n}\n\nexport default APIAdminResourceLicense\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Notification} from './models/Notification';\nimport {NotificationPlan, NotificationPlanEditData} from './models/NotificationPlan';\n\nexport class APIAdminResourceNotificationPlan extends APIResource<NotificationPlan, NoQueryParams, NotificationPlanEditData> {\n\n  /**\n   * /admin/notification-plans/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'notification-plans', id);\n  }\n\n  // /admin/notification-plans/{id}/check\n  check() {\n    return new APIList<Notification>(this).push('check');\n  }\n\n  // /admin/notification-plans/{id}/test\n  test() {\n    return new APIResource<NotificationPlan, NoQueryParams, NoData>(this).push('test');\n  }\n\n  // /admin/notification-plans/{id}/execute\n  execute() {\n    return new APIResource<NotificationPlan, NoQueryParams, NoData>(this).push('execute');\n  }\n\n}\n\nexport default APIAdminResourceNotificationPlan\n","import {APIEntity} from '../APIEntity';\nimport {APIResource} from '../APIResource';\nimport {BuildLogsData, BuildLogsParams} from '../models/UserFile';\n\nexport function postDeviceRunIds<T>(parent: APIEntity, name: string, ids?: Array<number>) {\n  const a = new APIResource<T, BuildLogsParams, BuildLogsData>(parent).push(name);\n\n  if (ids != null) {\n    a.params<'deviceRunIds'>({\n      deviceRunIds: ids\n    });\n  }\n\n  return a.post();\n}\n\nexport default postDeviceRunIds;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {postDeviceRunIds} from './factory/postDeviceRunIds';\nimport {AdminTestRun, RunChangeBillableParams, RunChangePriorityParams} from './models/AdminTestRun';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\n\nexport class APIAdminResourceRunStandalone extends APIResource<AdminTestRun, NoQueryParams, NoData> {\n\n  /**\n   * /runs/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'runs', id);\n  }\n\n  // /runs/{id}/abort\n  abort() {\n    return new APIResource<AdminTestRun, NoQueryParams, NoData>(this).push('abort').post();\n  }\n\n  // /runs/{id}/changebillable\n  changeBillable(billable: boolean) {\n    return new APIResource<AdminTestRun, RunChangeBillableParams>(this).push('changebillable').post().params({\n      billable\n    });\n  }\n\n  // /runs/{id}/changepriority\n  changePriority(priority: boolean) {\n    return new APIResource<AdminTestRun, RunChangePriorityParams>(this).push('changepriority').post().params({\n      priority\n    });\n  }\n\n  // /admin/runs/{id}/retry\n  retry(ids?: Array<number>) {\n    return postDeviceRunIds<AdminTestRun>(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n}\n\nexport default APIAdminResourceRunStandalone;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIResource} from './APIResource'\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Service, ServiceActivateData} from './models/Service';\n\n\nexport class APIAdminResourceService extends APIResource<Service, NoQueryParams, NoData> {\n\n  /**\n   * /services/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'services', id);\n  }\n\n  // /services/{id}/activate\n  activate() {\n    return new APIResource<Service, ServiceActivateData>(this).push('activate').post();\n  }\n\n}\n\nexport default APIAdminResourceService\n","import {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AccountService, AccountServiceData} from './models/AccountService';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Role, RoleData} from './models/Role';\nimport {User, UserUpdateAccount} from './models/User';\n\n@NonRequestable\nexport class APIAdminResourceUserAccount extends APIResource {\n\n  /**\n   * /account\n   */\n  constructor(parent: APIAdminResourceUser) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/roles\n  roles() {\n    return new APIList<Role, NoQueryParams, RoleData>(this).push('roles');\n  }\n\n  // /account/roles/{id}\n  role(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Role, NoQueryParams, NoData>(this).push('roles', id);\n  }\n\n  // /account-services\n  services() {\n    const a = new APIList<AccountService, CollectionQueryParams, AccountServiceData>(this);\n    a.last += '-services';\n    return a;\n  }\n\n  // /update-account\n  update() {\n    const a = new APIResource<User, UserUpdateAccount>(this);\n    a.last = 'update-account';\n    return a.post();\n  }\n\n}\n\nexport default APIAdminResourceUserAccount\n","import {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceUser} from './APIResourceUser';\nimport {InputFileset} from './class/InputFileset';\nimport {OutputFileset} from './class/OutputFileset';\nimport {DeviceSessionStandalone} from './interface/DeviceSessionStandalone';\nimport {Connection, ConnectionData} from './models/Connection';\nimport {DeviceSession} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\n\nexport class APIResourceDeviceSessionStandalone extends APIResource<DeviceSession> implements DeviceSessionStandalone {\n\n  /**\n   * /device-sessions/{id}\n   */\n  constructor(parent: APIResourceUser | APIAdminResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/connections\n  connections() {\n    return new APIList<Connection, CollectionBasicQueryParams, ConnectionData>(this).push('connections');\n  }\n\n  // /device-sessions/{id}/connections/{id}\n  connection(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Connection, NoQueryParams, NoData>(this).push('connections', id);\n  }\n\n  // /device-sessions/{id}/input-file-set\n  input() {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  output() {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/release\n  release() {\n    return new APIResource<DeviceSession, NoQueryParams, NoData>(this).push('release').post();\n  }\n\n}\n\nexport default APIResourceDeviceSessionStandalone\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIAdminResourceUserAccount} from './APIAdminResourceUserAccount';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceDeviceSessionStandalone} from './APIResourceDeviceSessionStandalone';\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {License} from './models/License';\nimport {User} from './models/User';\n\n\n@NonRequestable\nexport class APIAdminResourceUser extends APIResource<User> {\n\n  /**\n   * /admin/users/{id}\n   */\n  constructor(parent: APIAdminResource, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'users', id);\n  }\n\n  // /users/{id}/disable\n  disable() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('disable');\n  }\n\n  // /users/{id}/enable\n  enable() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('enable');\n  }\n\n  // /users/{id}/licenses\n  licenses() {\n    return new APIList<License, CollectionQueryParams, NoData>(this).push('licenses');\n  }\n\n  // /users/{id}/resend-activation\n  resendActivation() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('resend-activation').post();\n  }\n\n  // users/{id}/account\n  account() {\n    return new APIAdminResourceUserAccount(this);\n  }\n\n  // /users/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSessionStandalone(this, id);\n  }\n\n}\n\nexport default APIAdminResourceUser;\n","import {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {AccessGroup} from './models/AccessGroup';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {SharedResource} from './models/SharedResource';\nimport {User, UserData} from './models/User';\n\nexport class APIResourceAccessGroup extends APIResource<AccessGroup> {\n\n  /**\n   * /access-groups/{id}\n   *\n   */\n  constructor(parent: APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('access-groups', id);\n  }\n\n  // /access-groups/{id}/users\n  users() {\n    return new APIList<User, CollectionBasicQueryParams, UserData>(this).push('users');\n  }\n\n  // /access-groups/{id}/users/{id}\n  user(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<User, NoQueryParams, NoData>(this).push('users', id);\n  }\n\n  // /access-groups/{id}/resources\n  resources() {\n    return new APIList<SharedResource, CollectionBasicQueryParams, NoData>(this).push('resources');\n  }\n\n  // /access-groups/{id}/resources/{id}\n  resource(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<SharedResource, NoQueryParams, NoData>(this).push('resources', id);\n  }\n\n}\n\nexport default APIResourceAccessGroup\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport APIResourceUser from './APIResourceUser';\nimport {Device, DeviceProperty} from './models/Device';\nimport {DeviceGroup, DeviceGroupData, DeviceGroupParams, DeviceGroupSelectorData, DeviceGroupShareData} from './models/DeviceGroup';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {SharedResource} from './models/SharedResource';\n\nexport class APIResourceDeviceGroup extends APIResource<DeviceGroup> {\n\n  /**\n   * /device-groups/{id}\n   */\n  constructor(parent: APIAdminResource | APIResourceUser | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-groups', id);\n  }\n\n  // /device-groups/{id}/devices\n  devices() {\n    return new APIList<Device | DeviceGroup, DeviceGroupParams, DeviceGroupData>(this).push('devices');\n  }\n\n  // /device-groups/{id}/devices/{id}\n  device(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<void, NoQueryParams, NoData>(this).push('devices', id);\n  }\n\n  // /device-groups/{id}/selectors\n  selectors() {\n    return new APIList<DeviceProperty | DeviceGroup, CollectionBasicQueryParams, DeviceGroupSelectorData>(this).push('selectors');\n  }\n\n  // /device-groups/{id}/selectors/{id}\n  selector(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('selectors', id);\n  }\n\n  // /device-groups/{id}/share\n  share() {\n    return new APIResource<SharedResource, NoQueryParams, DeviceGroupShareData>(this).push('share');\n  }\n\n}\n\nexport default APIResourceDeviceGroup\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {DeviceGroupShareData} from './models/DeviceGroup';\nimport {CollectionBasicQueryParams, NoData} from './models/HTTP';\nimport {SharedResource} from './models/SharedResource';\nimport {FileSizeData, UserFile, UserFileTag} from './models/UserFile';\n\n\nexport class APIResourceFile extends APIResource<UserFile> {\n\n  /**\n   * /files/{id}\n   */\n  constructor(parent: API | APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('files', id);\n  }\n\n  // use this to download file content\n  // /files/{id}/file\n  file() {\n    return new APIResource<UserFile, FileSizeData, NoData>(this).push('file');\n  }\n\n  // /files/{id}/icon\n  icon() {\n    return new APIResource(this).push('icon');\n  }\n\n  // /files/{id}/tags\n  tags() {\n    return new APIList<UserFileTag, CollectionBasicQueryParams, NoData>(this).push('tags');\n  }\n\n  share() {\n    return new APIList<SharedResource, DeviceGroupShareData>(this).push('share');\n  }\n\n}\n\nexport default APIResourceFile\n","import {APIResource} from './APIResource';\nimport {APIResourceDeviceSessionCommon} from './APIResourceDeviceSessionCommon';\nimport {DeviceSession} from './interface/DeviceSession';\nimport {DeviceSession as DeviceSessionModel} from './models/DeviceSession';\n\nexport class APIResourceDeviceSession extends APIResourceDeviceSessionCommon implements DeviceSession {\n\n  // /device-sessions/{id}/abort\n  abort() {\n    return new APIResource<DeviceSessionModel>(this).push('abort').post();\n  }\n\n  // /device-sessions/{id}/retry\n  retry() {\n    return new APIResource<DeviceSessionModel>(this).push('retry').post();\n  }\n\n}\n\nexport default APIResourceDeviceSession\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {postDeviceRunIds} from './factory/postDeviceRunIds';\nimport {AdminTestRun} from './models/AdminTestRun';\nimport {DeviceSession, DeviceSessionStep, TRunDeviceSessionQueryParams} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Screenshot, ScreenshotExtended, ScreenshotQueryParams} from './models/Screenshot';\nimport {Tag, TagsData, TagsQueryParams, TaqQueryParams, TestRunTagsData} from './models/Tag';\nimport {RunData, RunQueryParam, TestRun, TestRunData} from './models/TestRun';\nimport {TestRunDataAvailability, TestRunDataAvailabilityQueryParams} from './models/TestRunDataAvailability';\nimport {UserFile} from './models/UserFile';\n\nexport class APIResourceRunCommon extends APIResource<TestRun, RunQueryParam, TestRunData | RunData> {\n\n  /**\n   * /runs/{id}\n   */\n  constructor(parent: APIEntity<any> | API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('runs', id);\n  }\n\n  // /runs/{id}/abort\n  abort() {\n    return new APIResource<AdminTestRun | TestRun, NoQueryParams, RunData>(this).push('abort').post();\n  }\n\n  // /runs/{id}/data-availability\n  dataAvailability() {\n    return new APIResource<TestRunDataAvailability, TestRunDataAvailabilityQueryParams, NoData>(this).push('data-availability');\n  }\n\n  // /runs/{id}/device-sessions\n  deviceSessions() {\n    return new APIList<DeviceSession, CollectionBasicQueryParams | TRunDeviceSessionQueryParams, NoData>(this).push('device-sessions');\n  }\n\n  // /runs/{id}/files.zip\n  filesZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'files.zip', ids);\n  }\n\n  // /runs/{id}/logs.zip\n  logsZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'logs.zip', ids);\n  }\n\n  // /runs/{id}/performance.zip\n  performanceZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'performance.zip', ids);\n  }\n\n  // /runs/{id}/retry\n  retry(ids?: Array<number>) {\n    return postDeviceRunIds<TestRun>(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n  // /runs/{id}/screenshot-names\n  screenshotNames() {\n    return new APIList<Screenshot, NoQueryParams, NoData>(this).push('screenshot-names');\n  }\n\n  // /runs/{id}/screenshots\n  screenshots() {\n    return new APIList<ScreenshotExtended, ScreenshotQueryParams, NoData>(this).push('screenshots');\n  }\n\n  // /runs/{id}/screenshots.zip\n  screenshotsZip(ids?: Array<number>) {\n    return postDeviceRunIds<UserFile>(this, 'screenshots.zip', ids);\n  }\n\n  // /runs/{id}/steps\n  steps() {\n    return new APIList<DeviceSessionStep, CollectionBasicQueryParams, NoData>(this).push('steps');\n  }\n\n  // /runs/{id}/tags\n  tags() {\n    return new APIList<Tag, CollectionBasicQueryParams | TagsQueryParams, TagsData | TestRunTagsData>(this).push('tags');\n  }\n\n  // /runs/{id}/tag\n  tag(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Tag, TaqQueryParams, NoData>(this).push('tags', id);\n  }\n\n}\n\nexport default APIResourceRunCommon\n","import {APIResourceDeviceSession} from './APIResourceDeviceSession'\nimport {APIResourceRunCommon} from './APIResourceRunCommon'\n\nexport class APIResourceRun extends APIResourceRunCommon {\n\n  // /runs/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n}\n\nexport default APIResourceRun\n","import {API} from '../API';\nimport {APIAdminResource} from './APIAdminResource';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceRun} from './APIResourceRun'\nimport {APIResourceUser} from './APIResourceUser';\nimport {CollectionBasicQueryParams, NoData} from './models/HTTP';\nimport {Project} from './models/Project';\nimport {TestRun} from './models/TestRun';\n\nexport class APIResourceProject extends APIResource<Project> {\n\n  /**\n   * /projects/{id}\n   */\n  constructor(parent: API | APIAdminResource | APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('projects', id);\n  }\n\n  // /projects/{id}/runs\n  runs() {\n    return new APIList<TestRun, CollectionBasicQueryParams, NoData>(this).push('runs');\n  }\n\n  // /projects/{id}/runs/{id}\n  run(id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n}\n\nexport default APIResourceProject\n","import {API} from '../API';\nimport {APIAdminListDevices} from './APIAdminListDevices';\nimport {APIAdminListNotificationPlans} from './APIAdminListNotificationPlans';\nimport {APIAdminListRuns} from './APIAdminListRuns';\nimport {APIAdminListServices} from './APIAdminListServices';\nimport {APIAdminListStatistics} from './APIAdminListStatistics';\nimport {APIAdminResourceAccountService} from './APIAdminResourceAccountService';\nimport {APIAdminResourceCluster} from './APIAdminResourceCluster';\nimport {APIAdminResourceDevice} from './APIAdminResourceDevice';\nimport {APIAdminResourceDeviceModel} from './APIAdminResourceDeviceModel';\nimport {APIAdminResourceDeviceSessionStandalone} from './APIAdminResourceDeviceSessionStandalone';\nimport {APIAdminResourceDeviceTime} from './APIAdminResourceDeviceTime';\nimport {APIAdminResourceFramework} from './APIAdminResourceFramework';\nimport {APIAdminResourceLicense} from './APIAdminResourceLicense';\nimport {APIAdminResourceNotificationPlan} from './APIAdminResourceNotificationPlan';\nimport {APIAdminResourceRunStandalone} from './APIAdminResourceRunStandalone';\nimport {APIAdminResourceService} from './APIAdminResourceService';\nimport {APIAdminResourceUser} from './APIAdminResourceUser';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceAccessGroup} from './APIResourceAccessGroup';\nimport {APIResourceDeviceGroup} from './APIResourceDeviceGroup';\nimport {APIResourceFile} from './APIResourceFile'\nimport {APIResourceProject} from './APIResourceProject';\nimport {NonRequestable} from './decorators/NonRequestable';\nimport {AccessGroup, AccessGroupData} from './models/AccessGroup';\nimport {Account} from './models/Account';\nimport {AccountService} from './models/AccountService';\nimport {Activity} from './models/Activity';\nimport {AdminDeviceSession, AdminInteractiveDeviceSession} from './models/AdminDeviceSession';\nimport {AdminDeviceType, DeviceTypeData} from './models/AdminDeviceType';\nimport {AdminEmail} from './models/AdminEmail';\nimport {AdminError} from './models/AdminError';\nimport {AdminOverview} from './models/AdminOverview';\nimport {BillingPeriod} from './models/BillingPeriod';\nimport {Browser, BrowserData} from './models/Browser';\nimport {CountryVatRate, CountryVatRateData} from './models/CountryVatRate';\nimport {DeviceModelCriterion, DeviceModelCriterionData} from './models/DeviceModelCriterion';\nimport {DeviceModelPool, DeviceModelPoolData} from './models/DeviceModelPool';\nimport {Framework, FrameworkData} from './models/Framework';\nimport {License, LicenseData} from './models/License';\nimport {Maintenance, MaintenanceData} from './models/Maintenance';\nimport {Project} from './models/Project';\nimport {Role, RoleParams} from './models/Role';\nimport {Settings, SettingsParams} from './models/Settings';\nimport {User, UserData, UserParams} from './models/User';\nimport {DeviceTimeSummaryParams, UserDeviceTimeSummary} from './models/UserDeviceTimeSummary';\nimport {UserFile, UserFileData, UserFileParams} from './models/UserFile';\nimport {Cluster} from './models/Cluster';\nimport {DeviceProperty} from './models/Device';\nimport {DeviceGroup} from './models/DeviceGroup';\nimport {DeviceModel} from './models/DeviceModel';\nimport {DeviceProblem} from './models/DeviceProblem';\nimport {DeviceStatus} from './models/DeviceStatus';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\n\n@NonRequestable\nexport class APIAdminResource extends APIResource {\n\n  /**\n   * /admin\n   */\n  constructor(parent: API) {\n    super(parent);\n  }\n\n  // /access-groups\n  accessGroups() {\n    return new APIList<AccessGroup, CollectionQueryParams, AccessGroupData>(this).push('access-groups');\n  }\n\n  // /access-groups/{id}\n  accessGroup(id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /admin/accounts\n  accounts() {\n    return new APIList<Account>(this).push('admin', 'accounts');\n  }\n\n  // /admin/accounts/{id}\n  account(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Account>(this).push('admin', 'accounts', id);\n  }\n\n  // /admin/account-services\n  accountServices() {\n    return new APIList<AccountService>(this).push('admin', 'account-services');\n  }\n\n  // /admin/account-services/{id}\n  accountService(id: number) {\n    return new APIAdminResourceAccountService(this, id);\n  }\n\n  // activities\n  activities() {\n    return new APIList<Activity>(this).push('admin', 'activities');\n  }\n\n  // /admin/billing-periods\n  billingPeriods() {\n    return new APIList<BillingPeriod>(this).push('admin', 'billing-periods');\n  }\n\n  // /admin/billing-periods/{id}\n  billingPeriod(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<BillingPeriod>(this).push('admin', 'billing-periods', id);\n  }\n\n  // /admin/browsers\n  browsers() {\n    return new APIList<Browser, CollectionQueryParams, BrowserData>(this).push('admin', 'browsers');\n  }\n\n  // /admin/browsers/{id}\n  browser(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Browser, NoQueryParams, BrowserData>(this).push('admin', 'browsers', id);\n  }\n\n  // /clusters\n  clusters() {\n    return new APIList<Cluster>(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  cluster(id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n\n  // /admin/country-vat-rates\n  countryVatRates() {\n    return new APIList<CountryVatRate, CollectionQueryParams, CountryVatRateData>(this).push('admin', 'country-vat-rates');\n  }\n\n  // /admin/country-vat-rates/{id}\n  countryVatRate(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<CountryVatRate, NoQueryParams, Omit<CountryVatRate, 'country'>>(this).push('admin', 'country-vat-rates', id);\n  }\n\n  // /admin/devices\n  devices() {\n    return new APIAdminListDevices(this);\n  }\n\n  // /admin/devices/{id}\n  device(id: number) {\n    return new APIAdminResourceDevice(this, id);\n  }\n\n  devicesForModel(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const apiList = this.devices();\n    apiList.params({\n      filter: 'deviceModelId_eq_' + id\n    });\n    return apiList;\n  }\n\n  // /admin/device/statuses\n  deviceStatuses() {\n    return new APIList<DeviceStatus>(this).push('admin', 'device', 'statuses');\n  }\n\n  // /admin/device-models\n  deviceModels() {\n    return new APIList<DeviceModel>(this).push('admin', 'device-models');\n  }\n\n  // /admin/device-models/{id}\n  deviceModel(id: number) {\n    return new APIAdminResourceDeviceModel(this, id);\n  }\n\n  // /admin/device-problems\n  deviceProblems() {\n    return new APIList<DeviceProblem>(this).push('admin', 'device-problems');\n  }\n\n  // /admin/device-model-criteria\n  deviceModelCriterias() {\n    return new APIList<DeviceModelCriterion, CollectionQueryParams, DeviceModelCriterionData>(this).push('admin', 'device-model-criteria');\n  }\n\n  // /admin/device-model-criteria/{id}\n  deviceModelCriteria(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<DeviceModelCriterion>(this).push('admin', 'device-model-criteria', id);\n  }\n\n  // /device-sessions\n  deviceSessions() {\n    return new APIList<AdminDeviceSession>(this).push('admin', 'device-sessions');\n  }\n\n  // /device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIAdminResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /device-time\n  deviceTime() {\n    return new APIAdminResourceDeviceTime(this);\n  }\n\n  // /device-time-summary\n  deviceTimeSummary() {\n    return new APIList<UserDeviceTimeSummary, DeviceTimeSummaryParams>(this).push('admin', 'device-time-summary');\n  }\n\n  // /device-types\n  deviceTypes() {\n    return new APIList<AdminDeviceType>(this).push('admin', 'device-types');\n  }\n\n  // /device-types/{id}\n  deviceType(id: number) {\n    return new APIResource<AdminDeviceType, NoQueryParams, DeviceTypeData>(this).push('admin', 'device-types', id);\n  }\n\n  // /device-groups\n  deviceGroups() {\n    return new APIList<DeviceGroup>(this).push('device-groups');\n  }\n\n  // /device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /admin/emails\n  emails() {\n    return new APIList<AdminEmail>(this).push('admin', 'emails');\n  }\n\n  // /admin/emails/{id}/resend\n  resendEmail(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource<AdminEmail>(this).push('admin', 'emails', id, 'resend').post();\n  }\n\n  // /admin/errors\n  errors() {\n    return new APIList<AdminError>(this).push('admin', 'errors');\n  }\n\n  // /files\n  files() {\n    return new APIList<UserFile, UserFileParams, UserFileData>(this).push('files');\n  }\n\n  // /files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /admin/frameworks\n  frameworks<T = Framework, U extends CollectionQueryParams = CollectionQueryParams, W = FrameworkData>() {\n    return new APIList<T, U, W>(this).push('admin', 'frameworks');\n  }\n\n  // /admin/frameworks/{id}\n  framework(id: number) {\n    return new APIAdminResourceFramework(this, id);\n  }\n\n  // /admin/frameworks/available-labels\n  frameworkAvailableLabels() {\n    const apiList = this.frameworks<DeviceProperty, CollectionQueryParams, NoData>();\n    apiList.push('available-labels');\n    return apiList;\n  }\n\n  // /admin/interactive-queue\n  interactiveQueue() {\n    return new APIList<AdminInteractiveDeviceSession>(this).push('admin', 'interactive-queue');\n  }\n\n  // /admin/licenses\n  licenses() {\n    return new APIList<License, CollectionQueryParams, LicenseData>(this).push('admin', 'licenses');\n  }\n\n  // /admin/licenses/{id}\n  license(id: number) {\n    return new APIAdminResourceLicense(this, id);\n  }\n\n  // /admin/maintenance\n  maintenance() {\n    return new APIResource<Maintenance, NoQueryParams, MaintenanceData>(this).push('admin', 'maintenance');\n  }\n\n  // /admin/notification-plans\n  notificationPlans() {\n    return new APIAdminListNotificationPlans(this);\n  }\n\n  // /admin/notification-plans/{id}\n  notificationPlan(id: number) {\n    return new APIAdminResourceNotificationPlan(this, id);\n  }\n\n  // /admin/overview\n  overview() {\n    return new APIResource<AdminOverview>(this).push('admin', 'overview');\n  }\n\n  pools() {\n    return new APIList<DeviceModelPool>(this).push('admin', 'pools');\n  }\n\n  pool(id: number) {\n    return new APIResource<DeviceModelPool, NoQueryParams, DeviceModelPoolData>(this).push('admin', 'pools', id);\n  }\n\n  // /projects\n  projects() {\n    return new APIList<Project>(this).push('projects');\n  }\n\n  // /projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /admin/roles\n  roles() {\n    return new APIList<Role, RoleParams, NoData>(this).push('admin', 'roles');\n  }\n\n  // /admin/runs\n  runs() {\n    return new APIAdminListRuns(this);\n  }\n\n  // /runs/{id}\n  run(id: number) {\n    return new APIAdminResourceRunStandalone(this, id);\n  }\n\n  // /admin/samples\n  samples() {\n    return new APIList<UserFile, CollectionQueryParams, Pick<UserFileData, 'file'>>(this).push('admin', 'samples');\n  }\n\n  // /admin/samples/{id}\n  sample(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource<UserFile>(this).push('admin', 'samples', id);\n  }\n\n  // /admin/services\n  services() {\n    return new APIAdminListServices(this);\n  }\n\n  // /admin/services/{id}\n  service(id: number) {\n    return new APIAdminResourceService(this, id);\n  }\n\n  // /admin/settings\n  settings() {\n    return new APIResource<Settings, SettingsParams>(this).push('admin', 'settings');\n  }\n\n  // /admin/statistics\n  statistics() {\n    return new APIAdminListStatistics(this);\n  }\n\n  // /users\n  users() {\n    return new APIList<User, UserParams, UserData>(this).push('users');\n  }\n\n  // /admin/users\n  createUser() {\n    return new APIList<User, NoQueryParams, UserData>(this).push('admin', 'users').post();\n  }\n\n  // /users/{id}\n  user(id: number) {\n    return new APIAdminResourceUser(this, id);\n  }\n\n}\n\nexport default APIAdminResource;\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {DesktopBrowserCapabilities} from './models/DesktopBrowserCapabilities';\nimport {Device, DevicesQueryParams} from './models/Device';\nimport {DevicePicker} from './models/DeviceFilter';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\n\n\nexport class APIListDevices extends APIList<Device, DevicesQueryParams> {\n\n  /**\n   * /devices\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('devices');\n  }\n\n  // /devices/filters\n  filters() {\n    return new APIResource<DevicePicker, CollectionQueryParams, NoData>(this).push('filters');\n  }\n\n  // /devices/desktop-browser-capabilities\n  desktopBrowserCapabilities() {\n    return new APIResource<DesktopBrowserCapabilities, NoQueryParams, NoData>(this).push('desktop-browser-capabilities');\n  }\n\n}\n\nexport default APIListDevices;\n","import {API} from '../API';\nimport {APIList} from './APIList';\nimport {CollectionQueryParams} from './models/HTTP';\nimport {AppBansData, AppBansQueryParams, Property, PropertyData} from './models/Property';\n\n\nexport class APIListProperties extends APIList<Property, CollectionQueryParams, PropertyData> {\n\n  /**\n   * /properties\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('properties');\n  }\n\n  // /properties/app-bans?testRunId=id\n  appBan(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIList<Property, AppBansQueryParams, AppBansData>(this).push('app-bans').params({\n      testRunId: id\n    });\n  }\n\n  maintenance() {\n    return new APIList(this).params({\n      filter: 'name_eq_CLOUD_HEADER_ANNOUNCEMENT',\n      limit: 1,\n      sort: 'updateTime_d'\n    });\n  }\n\n}\n\nexport default APIListProperties\n","import {Method} from 'axios';\nimport {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResourceUser} from './APIResourceUser';\nimport {AccountService, ServicePaymentStatus} from './models/AccountService';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Service, ServiceData} from './models/Service';\n\n\nexport class APIListServices extends APIList<ServicePaymentStatus, NoQueryParams, ServiceData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['POST'];\n\n  /**\n   * /services\n   */\n  constructor(parent: API | APIResourceUser) {\n    super(parent);\n    this.push('services');\n  }\n\n  // /services/available\n  available() {\n    return new APIList<Service, CollectionQueryParams, NoData>(this).push('available');\n  }\n\n  active() {\n    const apiList = new APIList<AccountService, CollectionQueryParams, NoData>(this);\n    if (this.first === 'me') {\n      apiList.push('active');\n    } else {\n      apiList.params({\n        notArchived: true\n      });\n    }\n    return apiList;\n  }\n\n  byPrice() {\n    return new APIList<AccountService, CollectionQueryParams, void>(this).sort('centPrice');\n  }\n\n  availableByPrice() {\n    return new APIList<AccountService, CollectionQueryParams, void>(this).push('available').sort('centPrice');\n  }\n\n}\n\nexport default APIListServices\n","import {Method} from 'axios';\nimport {API} from '../API';\nimport {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Message} from './models/Message';\nimport {\n  User,\n  UserActivateData,\n  UserData,\n  UserPasswordData,\n  UserRecoveryQueryParams,\n  ValidateVatQueryParams\n} from './models/User';\nimport {VatRate} from './models/VatRate';\n\n\nexport class APIListUsers extends APIList<User, NoQueryParams, UserData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['POST'];\n\n  /**\n   * /users\n   */\n  constructor(parent: API) {\n    super(parent);\n    this.push('users');\n  }\n\n  // /users/activate\n  activate() {\n    return new APIResource<User, NoQueryParams, UserActivateData>(this).push('activate').post();\n  }\n\n  // /users/recoveries\n  recoveries() {\n    return new APIResource<User | Message, UserRecoveryQueryParams, UserData>(this).push('recoveries');\n  }\n\n  // /users/passwordRecovery\n  passwordRecovery() {\n    return new APIResource<User, NoQueryParams, UserPasswordData>(this).push('password-recovery');\n  }\n\n  // /users/resetApiKey\n  validateVatId() {\n    return new APIResource<VatRate, ValidateVatQueryParams, NoData>(this).push('validateVatId');\n  }\n\n}\n\nexport default APIListUsers;\n","import {API} from '../API';\nimport {APIResource} from './APIResource'\nimport {Account} from './models/Account';\nimport {AccountConcurrencyStatusMap} from './models/AccountConcurrencyStatusMap';\nimport {AccountPreferences} from './models/AccountPreference';\nimport {NoData, NoQueryParams, SimpleCollectionResponse} from './models/HTTP';\n\nexport class APIResourceAccount extends APIResource<Account> {\n\n  /**\n   * /accounts/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('accounts', id);\n  }\n\n  // /accounts/{id}/concurrency-status\n  concurrencyStatus() {\n    return new APIResource<AccountConcurrencyStatusMap, NoQueryParams, NoData>(this).push('concurrency-status');\n  }\n\n  // /accounts/{id}/preferences\n  preferences() {\n    return new APIResource<AccountPreferences, NoQueryParams, SimpleCollectionResponse<AccountPreferences>>(this).push('preferences');\n  }\n\n}\n\nexport default APIResourceAccount\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Broker} from './models/Broker';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\nexport class APIResourceBroker extends APIResource {\n\n  /**\n   * /broker\n   */\n  constructor(parent: API) {\n\n    super(parent);\n    this.push('broker');\n  }\n\n  // /broker/hubs\n  hubs() {\n    return new APIList<Broker, NoQueryParams, NoData>(this).push('hubs');\n  }\n\n}\n\nexport default APIResourceBroker\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {Browser} from './models/Browser';\nimport {Device, DeviceProperiesData, DeviceProperty} from './models/Device';\nimport {CollectionBasicQueryParams} from './models/HTTP';\n\n\nexport class APIResourceDevice extends APIResource<Device> {\n\n  /**\n   * /devices/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('devices', id);\n  }\n\n  // /devices/{id}/properties\n  properties() {\n    return new APIList<DeviceProperty, CollectionBasicQueryParams, DeviceProperiesData>(this).push('properties');\n  }\n\n  browsers() {\n    return new APIList<Browser>(this).push('browsers');\n  }\n\n}\n\nexport default APIResourceDevice\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {DeviceProperty} from './models/Device';\nimport {CollectionBasicQueryParams, NoQueryParams} from './models/HTTP';\nimport {LabelData, LabelGroup} from './models/LabelGroup';\n\nexport class APIResourceLabelGroup extends APIResource<LabelGroup> {\n\n  /**\n   * /label-groups/{id}\n   */\n  constructor(parent: API, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('label-groups', id);\n  }\n\n  // /label-groups/{id}/labels\n  labels() {\n    return new APIList<DeviceProperty, CollectionBasicQueryParams, LabelData>(this).push('labels');\n  }\n\n  // /label-groups/{id}/labels/{id}\n  label(id: number) {\n    return new APIResource<DeviceProperty, NoQueryParams, LabelData>(this).push('labels', id);\n  }\n\n}\n\nexport default APIResourceLabelGroup\n","import {APIEntity} from './APIEntity';\nimport {APIList} from './APIList';\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoData} from './models/HTTP';\nimport {BasicDeviceTime, DeviceTimeQueryParams, UserDeviceTime} from './models/UserDeviceTime';\n\n\nexport class APIListDeviceTime extends APIList<UserDeviceTime, DeviceTimeQueryParams, NoData> {\n\n  /**\n   * /device-time\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('device-time');\n  }\n\n  // /device-time/reserved\n  reserved() {\n    return new APIEntity<BasicDeviceTime>(this).push('reserved');\n  }\n\n  // /device-time/used\n  used() {\n    return new APIEntity<BasicDeviceTime>(this).push('used');\n  }\n\n}\n\nexport default APIListDeviceTime;\n","import {API} from '../API';\nimport {APIEntity} from './APIEntity';\nimport {APIList} from './APIList';\nimport {FilesQueryParams} from './class/FilesQueryParams';\nimport {FileData, UploadObj, UserFile} from './models/UserFile';\n\n\nexport class APIListFiles extends APIList<UserFile, FilesQueryParams, FileData> {\n\n  /**\n   * /files\n   */\n  constructor(parent: APIEntity | API) {\n    super(parent);\n    this.push('files');\n  }\n\n  /**\n   * Simplifies process of uploading\n   * /files\n   */\n  upload(obj: UploadObj): this {\n    // For NodeJS\n    // @ts-ignore\n    if (global.isNodeJs) {\n      return this.nodeUpload(obj);\n    } else {\n      /**\n       * Browser\n       * @todo\n       */\n      throw new Error('Not supported yet!');\n    }\n  }\n\n  private nodeUpload(file: UploadObj): this {\n    const fs = require('fs');\n    const FormData = require('form-data');\n    const form = new FormData();\n    form.append('file', fs.createReadStream(file.dir + '/' + file.filename), {\n      filename: file.filename\n    });\n    return this.post().headers(form.getHeaders()).data(form);\n  }\n\n}\n\nexport default APIListFiles\n","import {APIList} from './APIList'\nimport {APIListNotifications} from './APIListNotifications';\nimport {APIResource} from './APIResource'\n\n\nexport class APIResourceChannel extends APIResource {\n\n  /**\n   * /users/{id}/notifications/channels/{type}\n   */\n  constructor(parent: APIListNotifications, type: string) {\n    if (type == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('channels', type);\n  }\n\n  // /channels/{type}/scopes\n  scopes() {\n    return new APIList(this).push('scopes');\n  }\n\n}\n\nexport default APIResourceChannel;\n","import {APIList} from './APIList';\nimport {APIResourceChannel} from './APIResourceChannel';\nimport {APIResourceUser} from './APIResourceUser';\nimport {Enum} from './models/Enum';\nimport {CollectionQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {Notification, NotificationsData} from './models/Notification';\n\n\nexport class APIListNotifications extends APIList<Notification, CollectionQueryParams, NotificationsData> {\n\n  /**\n   * /notifications\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('notifications');\n  }\n\n  // /notifications/scopes\n  scopes() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('scopes');\n  }\n\n  // /notifications/channels\n  channels() {\n    return new APIList<Enum, NoQueryParams, NoData>(this).push('channels');\n  }\n\n  channel(type: string) {\n    return new APIResourceChannel(this, type);\n  }\n\n}\n\nexport default APIListNotifications\n","import {APIList} from './APIList';\nimport {APIResource} from './APIResource';\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoQueryParams} from './models/HTTP';\nimport {TestRun, TestRunConfig, TestRunsConfigData, TestRunsData, TestRunsQueryParams} from './models/TestRun';\n\n\nexport class APIListRuns extends APIList<TestRun, TestRunsQueryParams, TestRunsData> {\n\n  /**\n   * /runs\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('runs');\n  }\n\n  // /runs/config\n  config() {\n    return new APIResource<TestRunConfig, NoQueryParams, TestRunsConfigData>(this).push('config');\n  }\n\n}\n\nexport default APIListRuns\n","import {Method} from 'axios';\nimport {APIList} from './APIList';\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoData} from './models/HTTP';\nimport {SmartbearTunnel, TunnelQueryParams} from './models/SmartbearTunnel';\n\n\nexport class APIListSmartbearTunnels extends APIList<SmartbearTunnel, TunnelQueryParams, NoData> {\n\n  protected ALLOWED_HTTP_METHODS: Array<Method> = ['GET'];\n\n  /**\n   * /tunnels\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('tunnels');\n  }\n\n  /**\n   * Sets tunnel activity parameter\n   */\n  active(active: boolean): this {\n    return this.params({active: active});\n  }\n}\n\nexport default APIListSmartbearTunnels;\n","\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {BillingPeriod} from './models/BillingPeriod';\nimport {NoData, NoQueryParams} from './models/HTTP';\n\nexport class APIResourceBillingPeriod extends APIResource<BillingPeriod, NoQueryParams, NoData> {\n\n  /**\n   * /billing-periods/{id}\n   */\n  constructor(parent: APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('billing-periods', id);\n  }\n\n  // /billing-periods/{id}/receipt\n  receipt() {\n    return new APIResource<void, NoQueryParams, NoData>(this).push('receipt').setRequestConfig({\n      responseType: 'arraybuffer'\n    });\n  }\n\n}\n\nexport default APIResourceBillingPeriod\n","\nimport {APIResource} from './APIResource'\nimport {APIResourceUser} from './APIResourceUser';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {Message} from './models/Message';\nimport {Notification, NotificationData} from './models/Notification';\n\nexport class APIResourceNotification extends APIResource<Notification, NoQueryParams, NotificationData> {\n\n  /**\n   * /notifications/{id}\n   */\n  constructor(parent: APIResourceUser, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('notifications', id);\n  }\n\n  // /notifications/{id}/test\n  test() {\n    return new APIResource<Message, NoQueryParams, NoData>(this).push('test');\n  }\n\n}\n\nexport default APIResourceNotification\n","\nimport {APIResource} from './APIResource'\nimport {APIUserResourceAccount} from './APIUserResourceAccount';\nimport {NoData, NoQueryParams} from './models/HTTP';\nimport {User} from './models/User';\n\nexport class APIResourceAdditionalUser extends APIResource<User> {\n\n  /**\n   * /additional-users/{id}\n   */\n  constructor(parent: APIUserResourceAccount, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('additional-users', id);\n  }\n\n  // /account/additional-users/{id}/resend-activation\n  resendActivation() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('resend-activation');\n  }\n\n}\n\nexport default APIResourceAdditionalUser\n","import {APIList} from './APIList'\nimport {APIResource} from './APIResource'\nimport {APIResourceAdditionalUser} from './APIResourceAdditionalUser';\nimport {APIResourceUser} from './APIResourceUser';\nimport {Account} from './models/Account';\nimport {AccountServicePayment} from './models/AccountServicePayment';\nimport {BillingPeriodQueryParams} from './models/BillingPeriod';\nimport {CollectionBasicQueryParams, NoData} from './models/HTTP';\nimport {User, UserData} from './models/User';\n\nexport class APIUserResourceAccount extends APIResource<Account> {\n\n  /**\n   * /account\n   */\n  constructor(parent: APIResourceUser) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/additional-users\n  additionalUsers() {\n    return new APIList<User, CollectionBasicQueryParams, UserData>(this).push('additional-users');\n  }\n\n  // /account/additional-users/{id}\n  additionalUser(id: number) {\n    return new APIResourceAdditionalUser(this, id);\n  }\n\n  // /account-services/{id}/billing-period\n  serviceBillingPeriod(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const a = new APIResource<AccountServicePayment, BillingPeriodQueryParams, NoData>(this);\n    a.last += '-services';\n    a.push(id, 'billing-period');\n    return a;\n  }\n\n}\n\nexport default APIUserResourceAccount\n","import {API} from '../API';\nimport {APIList} from './APIList'\nimport {APIListDeviceTime} from './APIListDeviceTime'\nimport {APIListFiles} from './APIListFiles'\nimport {APIListNotifications} from './APIListNotifications'\nimport {APIListRuns} from './APIListRuns'\nimport {APIListServices} from './APIListServices'\nimport {APIListSmartbearTunnels} from './APIListSmartbearTunnels'\nimport {APIResource} from './APIResource'\nimport {APIResourceAccessGroup} from './APIResourceAccessGroup'\nimport {APIResourceBillingPeriod} from './APIResourceBillingPeriod'\nimport {APIResourceDeviceGroup} from './APIResourceDeviceGroup'\nimport {APIResourceDeviceSessionStandalone} from './APIResourceDeviceSessionStandalone'\nimport {APIResourceFile} from './APIResourceFile'\nimport {APIResourceNotification} from './APIResourceNotification'\nimport {APIResourceProject} from './APIResourceProject'\nimport {APIUserResourceAccount} from './APIUserResourceAccount'\nimport {DeviceSession} from './interface/DeviceSession';\nimport {AccessGroup, AccessGroupsData} from './models/AccessGroup';\nimport {BillingPeriod} from './models/BillingPeriod';\nimport {DeviceGroup, DeviceGroupIdsData, DeviceGroupWithPublicParams} from './models/DeviceGroup';\nimport {DeviceStatistics} from './models/DeviceStatistics';\nimport {DeviceUsage} from './models/DeviceUsage';\nimport {Framework} from './models/Framework';\nimport {Project, UserProjectData, UserProjectQueryParams} from './models/Project';\nimport {Service} from './models/Service';\nimport {User} from './models/User';\nimport {UserDeviceTimeSummary} from './models/UserDeviceTimeSummary';\nimport {UiPreferencesData, UserPreference} from './models/UserPreference';\nimport {StatisticQueryParams, UserStatistics} from './models/UserStatistics';\nimport {DeviceSessionData, DeviceSessionQueryParams} from './models/DeviceSession';\nimport {CollectionBasicQueryParams, NoData, NoQueryParams} from './models/HTTP';\nimport {DeviceStatisticQueryParam, DeviceTimeSummaryQueryParams, DeviceUsageQueryParams} from './models/Device';\n\nexport class APIResourceUser extends APIResource {\n\n  /**\n   * /users/{id} | /me\n   */\n  constructor(parent: API, id: number | 'me') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n\n    if (id === 'me') {\n      this.push('me');\n    } else if (typeof id === 'number') {\n      this.push('users', id);\n    } else {\n      throw new TypeError('id is not a number');\n    }\n  }\n\n  // /users/{id}/account\n  account() {\n    return new APIUserResourceAccount(this);\n  }\n\n  // /users/{id}/device-time\n  deviceTime() {\n    return new APIListDeviceTime(this);\n  }\n\n  // /users/{id}/device-time-summary\n  deviceTimeSummary() {\n    return new APIList<UserDeviceTimeSummary, DeviceTimeSummaryQueryParams, NoData>(this).push('device-time-summary');\n  }\n\n  // /users/{id}/services\n  services() {\n    return new APIListServices(this);\n  }\n\n  // /users/{id}/services/{id}\n  service(id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource<Service, NoQueryParams, NoData>(this).push('services', id);\n  }\n\n  // /users/{id}/billing-periods\n  billingPeriods() {\n    return new APIList<BillingPeriod, CollectionBasicQueryParams, NoData>(this).push('billing-periods');\n  }\n\n  // /users/{id}/billing-periods/{id}\n  billingPeriod(id: number) {\n    return new APIResourceBillingPeriod(this, id);\n  }\n\n  // /users/{id}/device-groups\n  deviceGroups() {\n    return new APIList<DeviceGroup, DeviceGroupWithPublicParams, DeviceGroupIdsData>(this).push('device-groups');\n  }\n\n  // /users/{id}/device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /users/{id}/device-sessions\n  deviceSessions() {\n    return new APIList<DeviceSession, DeviceSessionQueryParams, DeviceSessionData>(this).push('device-sessions');\n  }\n\n  // /users/{id}/device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /users/{id}/projects\n  projects() {\n    return new APIList<Project, UserProjectQueryParams, UserProjectData>(this).push('projects');\n  }\n\n  // /users/{id}/projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /users/{id}/files\n  files() {\n    return new APIListFiles(this);\n  }\n\n  // /users/{id}/files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /users/{id}/runs\n  runs() {\n    return new APIListRuns(this);\n  }\n\n  // /users/{id}/available-frameworks\n  availableFrameworks() {\n    return new APIList<Framework, CollectionBasicQueryParams, NoData>(this).push('available-frameworks');\n  }\n\n  /**\n   * /users/{id}/reset-api-key\n   */\n  resetApiKey() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('reset-api-key');\n  }\n\n  // /users/{id}/restore\n  restore() {\n    return new APIResource<User, NoQueryParams, NoData>(this).push('restore');\n  }\n\n  // /users/{id}/feedback\n  feedback() {\n    return new APIResource(this).push('feedback');\n  }\n\n  // /users/{id}/notifications\n  notifications() {\n    return new APIListNotifications(this);\n  }\n\n  // /users/{id}/notifications/{id}\n  notification(id: number) {\n    return new APIResourceNotification(this, id);\n  }\n\n  // /users/{id}/preferences\n  preferences() {\n    return new APIResource<UserPreference, NoQueryParams, UserPreference>(this).push('preferences');\n  }\n\n  // /users/{id}/ui-preferences\n  uiPreferences() {\n    return new APIResource<string, NoQueryParams, UiPreferencesData>(this).push('ui-preferences');\n  }\n\n  // /users/{id}/device-usage\n  deviceUsage() {\n    return new APIList<DeviceUsage, DeviceUsageQueryParams, NoData>(this).push('device-usage');\n  }\n\n  // /users/{id}/statistics\n  statistics() {\n    return new APIResource<UserStatistics, StatisticQueryParams, NoData>(this).push('statistics');\n  }\n\n  // /users/{id}/device-statistics\n  deviceStatistics() {\n    return new APIList<DeviceStatistics, DeviceStatisticQueryParam, NoData>(this).push('device-statistics');\n  }\n\n  // /users/{id}/access-groups\n  accessGroups() {\n    return new APIList<AccessGroup, CollectionBasicQueryParams, AccessGroupsData>(this).push('access-groups');\n  }\n\n  // /users/{id}/access-groups/{id}\n  accessGroup(id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /users/{id}/tunnels/{id}\n  smartbearTunnel(id: number) {\n    return new APIResource(this).push('tunnels', id);\n  }\n\n  // /users/{id}/tunnels\n  smartbearTunnels() {\n    return new APIListSmartbearTunnels(this);\n  }\n\n  deleteAccount() {\n    return new APIResource(this).push('delete');\n  }\n}\n\nexport default APIResourceUser\n","import {API} from '../API';\nimport {APIResource} from './APIResource'\nimport {NoQueryParams} from './models/HTTP';\nimport {LoginData, User} from './models/User';\n\nexport class APIResourceUserSession extends APIResource {\n\n  // /user-sessions\n  constructor(parent: API) {\n    super(parent);\n    this.push('user-sessions');\n  }\n\n  // /user-sessions/login\n  login(data: LoginData) {\n    return new APIResource<User, NoQueryParams, LoginData>(this).push('login').post().data(data);\n  }\n\n  // /user-sessions/logout\n  logout() {\n    return new APIResource(this).push('logout').post();\n  }\n\n  // /user-sessions/{name}-login\n  sso(name: string) {\n    return new APIResource(this).push(name + '-login');\n  }\n\n  // /user-sessions/portal-login\n  portalLogin() {\n    return new APIResource(this).push('portal-login').post();\n  }\n\n}\n\nexport default APIResourceUserSession\n","import axios, {AxiosInstance} from 'axios';\n// @ts-ignore\nimport {version} from '../package.json';\nimport {APIAdminResource} from './api/APIAdminResource';\nimport {APIAdminResourceCluster} from './api/APIAdminResourceCluster';\nimport {APIList} from './api/APIList';\nimport {APIListDevices} from './api/APIListDevices';\nimport {APIListProperties} from './api/APIListProperties';\nimport {APIListServices} from './api/APIListServices';\nimport {APIListUsers} from './api/APIListUsers';\nimport {APIResource} from './api/APIResource';\nimport {APIResourceAccount} from './api/APIResourceAccount';\nimport {APIResourceBroker} from './api/APIResourceBroker';\nimport {APIResourceDevice} from './api/APIResourceDevice';\nimport {APIResourceDeviceGroup} from './api/APIResourceDeviceGroup';\nimport {APIResourceDeviceSession} from './api/APIResourceDeviceSession';\nimport {APIResourceFile} from './api/APIResourceFile';\nimport {APIResourceLabelGroup} from './api/APIResourceLabelGroup';\nimport {APIResourceProject} from './api/APIResourceProject';\nimport {APIResourceRun} from './api/APIResourceRun';\nimport {APIResourceUser} from './api/APIResourceUser';\nimport {APIResourceUserSession} from './api/APIResourceUserSession';\nimport {Cluster} from './api/models/Cluster';\nimport {NoData, NoQueryParams} from './api/models/HTTP';\nimport {License} from './api/models/License';\nimport {Project} from './api/models/Project';\nimport {Property} from './api/models/Property';\nimport {UserFile, UserFileData, UserFileParams} from './api/models/UserFile';\nimport {ApiConfig} from './ApiConfig';\nimport './finka';\n\n// @ts-ignore\nif (globalThis.isNodeJs) {\n  // Set User-Agent\n  axios.defaults.headers.common['User-Agent'] = `Bitbar Cloud API Client for JavaScript v${version}`;\n}\n\n// Disable max content length\naxios.defaults.maxContentLength = 1073741824; // 1GB\n\n\n/**\n * API\n * Root for other API resources\n */\nexport class API {\n  axios: AxiosInstance;\n\n  private axiosConfig: ApiConfig = <ApiConfig>{};\n\n  get baseUrl(): string {\n    return this.axiosConfig.baseURL;\n  }\n\n\n  constructor(private config: ApiConfig) {\n    if (config == null) {\n      throw new Error('config cannot be empty');\n    } else if (this.config.cloudUrl == null) {\n      throw new TypeError('cloudUrl cannot be empty');\n    } else if (typeof this.config.cloudUrl !== 'string') {\n      throw new TypeError('cloudUrl must be a string');\n    } else if (!/^https?:\\/\\/.{2,}/.test(this.config.cloudUrl)) {\n      throw new Error(`cloudUrl doesn't look like a URL`);\n    }\n\n    // Validate and correct cloudUrl if needed\n    this.axiosConfig.baseURL = this.config.cloudUrl.replace(/\\/+$/, '') + '/api'\n\n    // Check v2\n    this.config.v2 = !!this.config.v2;\n    if (this.config.v2) {\n      this.axiosConfig.baseURL += '/v2';\n    }\n\n    // Check if apiKey is set\n    if (this.config.apiKey) {\n      if (typeof this.config.apiKey !== 'string') {\n        throw new TypeError('apiKey must be a string');\n      } else if (!/^[A-Za-z0-9]{32}$/.test(this.config.apiKey)) {\n        throw new Error('apiKey is in the wrong format');\n      }\n\n      this.axiosConfig.auth = {\n        username: <string>this.config.apiKey,\n        password: ''\n      };\n    }\n\n    // With credentials\n    this.axiosConfig.withCredentials = config.withCredentials == null ? false : config.withCredentials;\n\n    // Create axios instance\n    this.axios = axios.create(this.axiosConfig);\n  }\n\n\n  // --- Resources starts here --- //\n\n  // /account/{id}\n  account(id: number) {\n    return new APIResourceAccount(this, id);\n  }\n\n  // /admin\n  admin() {\n    return new APIAdminResource(this);\n  }\n\n  // /broker\n  broker() {\n    return new APIResourceBroker(this);\n  }\n\n  // /clusters\n  clusters() {\n    return new APIList<Cluster>(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  cluster(id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n\n  // /devices/{id}\n  device(id: number) {\n    return new APIResourceDevice(this, id);\n  }\n\n  // /device-groups/{id}\n  deviceGroup(id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /device-groups\n  deviceGroups() {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /devices\n  devices() {\n    return new APIListDevices(this);\n  }\n\n  // /device-sessions/{id}\n  deviceSession(id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n  // /device-sessions\n  deviceSessions() {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /device-statistics\n  deviceStatistics() {\n    return new APIList(this).push('device-statistics');\n  }\n\n  // /enums\n  enums() {\n    return new APIResource(this).push('enums');\n  }\n\n  // /files\n  files() {\n    return new APIList<UserFile, UserFileParams, UserFileData>(this).push('files');\n  }\n\n  // /files/{id}\n  file(id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /label-groups\n  labelGroups() {\n    return new APIList(this).push('label-groups');\n  }\n\n  // /label-groups/{id}\n  labelGroup(id: number) {\n    return new APIResourceLabelGroup(this, id);\n  }\n\n  // /labels\n  labels() {\n    return new APIList(this).push('labels');\n  }\n\n  // /licenses\n  licenses() {\n    return new APIResource(this).push('licenses');\n  }\n\n  // /license\n  license() {\n    return new APIResource<License, NoQueryParams, NoData>(this).push('license');\n  }\n\n  // /me\n  me() {\n    return this.user('me');\n  }\n\n  // /projects\n  projects() {\n    return new APIList<Project>(this).push('projects');\n  }\n\n  // /projects/{id}\n  project(id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /properties\n  properties() {\n    return new APIListProperties(this);\n  }\n\n  // /properties/{id}\n  property(id: number) {\n    return new APIResource<Property>(this).push('properties', id);\n  }\n\n  // /runs/{id}\n  run(id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n  // /services\n  services() {\n    return new APIListServices(this);\n  }\n\n  // /user/{id}\n  user(id: number | 'me') {\n    return new APIResourceUser(this, id);\n  }\n\n  // /users\n  users() {\n    return new APIListUsers(this);\n  }\n\n  // /user-sessions\n  userSession() {\n    return new APIResourceUserSession(this);\n  }\n\n}\n\n\nexport default API;\n","import {API} from './API';\nimport {FilterBuilder} from './FilterBuilder';\n\n/**\n * Cloud API Client\n */\nexport const CloudAPIClient = {\n  API,\n  FilterBuilder\n}\n\nexport default CloudAPIClient;\n"],"names":["Filter","constructor","name","value","operand","this","finka","FilterBuilder","filters","gt","add","lt","after","afterorequal","before","beforeorequal","on","eq","contains","like","notlike","isnull","undefined","in","notin","raw","filter","Array","wrap","isFilterPart","SyntaxError","push","str","test","toString","parts","part","val","length","join","checkNull","_value","i","v","Date","getTime","isNull","item","endsWith","ALLOWED_HTTP_METHODS","APIOrder","APIEntity","parent","stack","requestConfig","root","isArray","setRequestConfig","abortController","AbortController","abortRequest","abort","items","concat","shift","restack","first","last","toUrl","absolute","url","baseUrl","Object","deepAssign","removeRequestConfig","key","headers","_headers","replace","letter","toUpperCase","method","NAME","toLocaleUpperCase","indexOf","Error","get","post","params","getParams","removeParam","data","jsonData","formData","send","signal","startsWith","paramsSerializer","axios","request","stringify","arrayFormat","APIList","all","noLimit","cut","between","create","sort","order","asc","limit","Number","isNatural","getLimit","offset","from","to","only","idx","page","search","query","APIResource","delete","APIListCleanupConfigurations","super","specific","APIResourceCleanupConfiguration","id","devices","APIAdminListDevices","cleanupConfigurations","cleanupConfiguration","APIAdminListNotificationPlans","channels","scopes","APIAdminListRuns","config","apiResource","APIAdminListServices","active","apiList","notArchived","activated","inUse","byPrice","NonRequestable","Promise","reject","APIAdminListStatistics","deviceSessions","frameworks","__decorate","APIAdminResourceAccountService","activate","deactivate","APIAdminResourceCluster","APIAdminResourceDevice","blink","labels","label","queue","APIAdminResourceDeviceModel","browsers","InputFileset","files","filesZip","IMAGE_FILES_FILTER","NON_MEDIA_FILES_FILTER","OutputFileset","file","screenshots","screenshot","screenshotFile","videos","tag","nonMediaFiles","performance","images","APIResourceDeviceSessionCommon","commands","input","output","steps","step","currentStep","testCaseRuns","connections","logs","responseType","APIAdminResourceDeviceSessionStandalone","changeBillable","billable","deviceSessionId","postAdminDeviceSessionChangeBillable","APIAdminResourceDeviceTime","countSessionReport","stepTimeReport","APIAdminResourceFramework","requiredRoles","APIAdminResourceLicense","resend","download","APIAdminResourceNotificationPlan","check","execute","postDeviceRunIds","ids","a","deviceRunIds","APIAdminResourceRunStandalone","changePriority","priority","retry","timeout","APIAdminResourceService","APIAdminResourceUserAccount","roles","role","services","update","APIResourceDeviceSessionStandalone","connection","release","APIAdminResourceUser","disable","enable","licenses","resendActivation","account","deviceSession","APIResourceAccessGroup","users","user","resources","resource","APIResourceDeviceGroup","device","selectors","selector","share","APIResourceFile","icon","tags","APIResourceDeviceSession","APIResourceRunCommon","dataAvailability","logsZip","performanceZip","screenshotNames","screenshotsZip","APIResourceRun","APIResourceProject","runs","run","APIAdminResource","accessGroups","accessGroup","accounts","accountServices","accountService","activities","billingPeriods","billingPeriod","browser","clusters","cluster","countryVatRates","countryVatRate","devicesForModel","deviceStatuses","deviceModels","deviceModel","deviceProblems","deviceModelCriterias","deviceModelCriteria","deviceTime","deviceTimeSummary","deviceTypes","deviceType","deviceGroups","deviceGroup","emails","resendEmail","errors","framework","frameworkAvailableLabels","interactiveQueue","license","maintenance","notificationPlans","notificationPlan","overview","pools","pool","projects","project","samples","sample","service","settings","statistics","createUser","APIListDevices","desktopBrowserCapabilities","APIListProperties","appBan","testRunId","APIListServices","available","availableByPrice","APIListUsers","recoveries","passwordRecovery","validateVatId","APIResourceAccount","concurrencyStatus","preferences","APIResourceBroker","hubs","APIResourceDevice","properties","APIResourceLabelGroup","APIListDeviceTime","reserved","used","APIListFiles","upload","obj","global","isNodeJs","nodeUpload","fs","require","form","append","createReadStream","dir","filename","getHeaders","APIResourceChannel","type","APIListNotifications","channel","APIListRuns","APIListSmartbearTunnels","APIResourceBillingPeriod","receipt","APIResourceNotification","APIResourceAdditionalUser","APIUserResourceAccount","additionalUsers","additionalUser","serviceBillingPeriod","APIResourceUser","TypeError","availableFrameworks","resetApiKey","restore","feedback","notifications","notification","uiPreferences","deviceUsage","deviceStatistics","smartbearTunnel","smartbearTunnels","deleteAccount","APIResourceUserSession","login","logout","sso","portalLogin","globalThis","defaults","common","maxContentLength","API","axiosConfig","cloudUrl","baseURL","v2","apiKey","auth","username","password","withCredentials","admin","broker","enums","labelGroups","labelGroup","me","property","userSession"],"mappings":"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"}
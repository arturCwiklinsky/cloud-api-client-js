{"version":3,"file":"bitbar-cloud-api-client.min.js","sources":["../src/finka.ts","../src/api/APIEntity.ts","../src/Filter.ts","../src/FilterBuilder.ts","../src/api/APIList.ts","../src/api/APIResource.ts","../src/api/APIListCleanupConfigurations.ts","../src/api/APIResourceCleanupConfiguration.ts","../src/api/APIListDevices.ts","../src/api/APIListUsers.ts","../src/api/APIResourceBillingPeriod.ts","../src/api/APIResourceBuild.ts","../src/api/APIResourceJob.ts","../src/api/APIResourceDeviceGroup.ts","../src/api/factory/postDeviceRunIds.ts","../src/api/APIResourceRunCommon.ts","../src/api/class/InputFileset.ts","../src/api/class/OutputFileset.ts","../src/api/APIResourceDeviceSessionCommon.ts","../src/api/APIResourceDeviceSession.ts","../src/api/APIResourceRun.ts","../src/api/APIResourceProject.ts","../src/api/APIResourceFile.ts","../src/api/APIResourceNotification.ts","../src/api/APIResourceAccessGroup.ts","../src/api/APIResourceAdditionalUser.ts","../src/api/APIUserResourceAccount.ts","../src/api/APIListDeviceTime.ts","../src/api/APIListFiles.ts","../src/api/APIListPurchased.ts","../src/api/APIListServices.ts","../src/api/APIListRuns.ts","../src/api/APIListNotifications.ts","../src/api/APIListSmartbearTunnels.ts","../src/api/APIResourceDeviceSessionStandalone.ts","../src/api/APIResourceUser.ts","../src/api/APIResourceDevice.ts","../src/api/APIResourceUserSession.ts","../src/api/APIAdminListRuns.ts","../src/api/APIAdminResourceCluster.ts","../src/api/APIAdminResourceDeviceTime.ts","../src/api/APIAdminResourceRunStandalone.ts","../src/api/APIAdminResourceDevice.ts","../src/api/APIAdminResourceAccountService.ts","../src/api/APIAdminResourceUserAccount.ts","../src/api/APIAdminResourceUser.ts","../src/api/APIAdminResourceDeviceSessionStandalone.ts","../src/api/factory/postAdminDeviceSessionChangeBillable.ts","../src/api/APIAdminListDevices.ts","../src/api/APIAdminResourceFramework.ts","../src/api/APIAdminResourceLicense.ts","../src/api/APIAdminListNotificationPlans.ts","../src/api/APIAdminResourceNotificationPlan.ts","../src/api/APIAdminResource.ts","../src/api/APIResourceAccount.ts","../src/API.ts","../src/CloudAPIClient.ts"],"sourcesContent":["import finka from '@bitbar/finka';\n\nfinka();\n\nexport default {};\n","import qs from 'qs';\nimport { AxiosRequestConfig, Method } from 'axios';\n\n\n/**\n * Allowed methods\n *\n * @constant\n * @type {Array}\n * @default\n */\nenum ALLOWED_HTTP_METHODS {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE'\n};\n\n\n/**\n * APIEntity\n *\n * @class\n * @abstract\n */\nclass APIEntity {\n\n  /**\n   * Stack\n   *\n   * @public\n   * @type {Array}\n   */\n  public stack: Array<string|number>;\n\n  /**\n   * object of request config\n   *\n   * @protected\n   * @type {AxiosRequestConfig}\n   */\n  protected requestConfig: AxiosRequestConfig;\n\n  /**\n   * Root\n   *\n   * @public\n   * @type {API}\n   */\n  public root: object;\n\n  /**\n   * Constructor\n   * @param {APIEntity|object} [parent] - Specifies a parent from which should be inherited properties\n   */\n  constructor (parent: APIEntity | object) {\n    this.stack = [];\n    this.requestConfig = {};\n\n    if (parent instanceof APIEntity) {\n      this.root = parent.root;\n\n      if (Array.isArray(parent.stack)) {\n        this.push(...parent.stack);\n      }\n\n      if (parent.requestConfig != null) {\n        this.setRequestConfig(parent.requestConfig);\n      }\n    } else {\n      this.root = parent;\n    }\n  }\n\n  /**\n   * Push\n   *\n   * @public\n   * @param {string|number} items... - Items that should be pushed to stack\n   * @returns this\n   */\n  public push (...items: Array<string|number>) {\n    for (const item of items) {\n      this.stack.push(item);\n    }\n    return this;\n  }\n\n  /**\n   * Pop\n   *\n   * @public\n   * @return this\n   */\n  public pop () {\n    this.stack.pop();\n    return this;\n  }\n\n  /**\n   * Shift\n   *\n   * @public\n   * @return this\n   */\n  public shift () {\n    this.stack.shift();\n    return this;\n  }\n\n  /**\n   * Unshift\n   *\n   * @public\n   * @return this\n   */\n   public unshift (...items: Array<string|number>) {\n    for (const item of items) {\n      this.stack.unshift(item);\n    }\n    return this;\n  }\n\n  public restack (...items: Array<string|number>) {\n    this.stack = items;\n    return this;\n  }\n\n  /**\n   * Get first element of the stack\n   */\n  public get first () {\n    return this.stack[0];\n  }\n\n  /**\n   * Set first element of the stack\n   */\n  public set first (val) {\n    this.stack[0] = val;\n  }\n\n  /**\n   * Get last element of the stack\n   */\n  public get last () {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Set last element of the stack\n   */\n  public set last (val) {\n    this.stack[this.stack.length - 1] = val;\n  }\n\n  /**\n   * To URL\n   *\n   * @param {boolean} absolute\n   */\n  public toUrl (absolute = false) {\n    let url = `/${this.stack.join('/')}`;\n\n    if (absolute) {\n      // @ts-ignore\n      url = this.root.axiosConfig.baseURL + url;\n    }\n\n    return url;\n  }\n\n  /**\n   * Set request config\n   *\n   * @public\n   * @param {AxiosRequestConfig} requestConfig - object of request config to be set\n   * @returns this\n   */\n  public setRequestConfig (requestConfig: AxiosRequestConfig) {\n    Object.deepAssign(this.requestConfig, requestConfig);\n    return this;\n  }\n\n  /**\n   * Remove request config key\n   *\n   * @public\n   * @param {string} key - Key to me removed from request config\n   * @returns this\n   */\n  public removeRequestConfig (key: string) {\n    // @ts-ignore\n    delete this.requestConfig[key];\n    return this;\n  }\n\n  /**\n   * Set headers\n   *\n   * @public\n   * @param {object} headers - Headers object\n   * @returns this\n   */\n  public headers (headers: object) {\n    const _headers = {};\n\n    // Unify/Standarize headers keys\n    for (const key in headers) {\n      const newKey = key.replace(/(?:^|-)([a-z])/g, (letter) => letter.toUpperCase());\n      // @ts-ignore\n      _headers[newKey] = headers[key];\n    }\n\n    // Set\n    return this.setRequestConfig({\n      headers: _headers\n    });\n  }\n\n  /**\n   * Set HTTP method\n   *\n   * @public\n   * @param {string} name - HTTP methods name\n   * @returns this\n   */\n  public method (name: Method) {\n    const NAME: Method = <Method> name.toLocaleUpperCase();\n\n    // @ts-ignore\n    if (!ALLOWED_HTTP_METHODS[NAME]) {\n      throw new Error(`Method '${NAME}' is not allowed! You can use: ${Object.keys(ALLOWED_HTTP_METHODS).join(', ')}`);\n    }\n\n    return this.setRequestConfig({\n      method: NAME\n    });\n  }\n\n  /**\n   * Set GET as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public get () {\n    return this.method('GET');\n  }\n\n  /**\n   * Set POST as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public post () {\n    return this.method('POST');\n  }\n\n  /**\n   * Set params\n   *\n   * @public\n   * @param {object} params - object of params to be set\n   * @returns this\n   */\n  public params (params: object) {\n    Object.deepAssign(this.requestConfig, {\n      params\n    });\n    return this;\n  }\n\n  /**\n   * Get params\n   *\n   * @public\n   * @returns object\n   */\n  public getParams () {\n    return this.requestConfig.params == null ? {} : this.requestConfig.params;\n  }\n\n  /**\n   * Remove params key\n   *\n   * @public\n   * @param {string} key - Key to me removed from params\n   * @returns this\n   */\n  public removeParam (key: string) {\n    delete this.requestConfig.params[key];\n    return this;\n  }\n\n  /**\n   * Set data\n   *\n   * @public\n   * @param {object} data - object of data to be set\n   * @returns this\n   */\n  public data (data: object) {\n    Object.deepAssign(this.requestConfig, {\n      data\n    });\n    return this;\n  }\n\n  /**\n   * Set JSON data\n   *\n   * @public\n   * @param {object} data - JSON object to be set\n   * @returns this\n   */\n  public jsonData (data: object) {\n    this.headers({\n      'Content-Type': 'application/json'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Set form data\n   *\n   * @public\n   * @param {object} data - JSON object to be set\n   * @returns this\n   */\n  public formData (data: FormData) {\n    this.headers({\n      'Content-Type': 'multipart/form-data'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Custom params serializer\n   * @private\n   * @param {object} params\n   */\n  private paramsSerializer (params: object) {\n    return qs.stringify(params, {\n      arrayFormat: 'brackets'\n    });\n  }\n\n  /**\n   * Send request\n   *\n   * @public\n   * @returns Promise\n   */\n  public send () {\n    const requestConfig = <AxiosRequestConfig> Object.deepAssign({}, this.requestConfig, {\n      url: `/${this.stack.join('/')}`\n    });\n\n    // Set default headers\n    if (requestConfig.headers == null) {\n      requestConfig.headers = {};\n    }\n\n    // Set default Content-Type\n    if (requestConfig.headers['Content-Type'] == null) {\n      requestConfig.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // Convert data if needed\n    if (requestConfig.method === 'POST' &&\n    requestConfig.headers['Content-Type'].startsWith('application/x-www-form-urlencoded') &&\n    requestConfig.data != null) {\n      requestConfig.data = qs.stringify(requestConfig.data);\n    }\n\n    if (requestConfig.params) {\n      requestConfig.paramsSerializer = this.paramsSerializer;\n    }\n\n    // Send request\n    // @ts-ignore\n    return this.root.axios.request(requestConfig);\n  }\n}\n\n\nexport default APIEntity;\n","/**\n * Filter\n */\n\nclass Filter {\n  public name: string;\n  public value: any;\n  public operand: string;\n\n  constructor (name: string, value: any, operand: string) {\n    this.name = name;\n    this.value = value;\n    this.operand = operand;\n  }\n}\n\nexport default Filter;\n","import './finka';\nimport Filter from './Filter';\n\n/**\n * FilterBuilder\n *\n * Builds filter string according to Bitbar Cloud backend convention\n */\n\nclass FilterBuilder {\n\n  private filters: Array<Filter>;\n\n  constructor () {\n    this.filters = [];\n  }\n\n  /**\n   * Add filter to filters list\n   * @param name {string} Name\n   * @param value {*} Value\n   * @param operand {string} Operand\n   * @param [checkNull=false] {boolean} Check null?\n   * @returns {FilterBuilder}\n   */\n  private add (name: string, value: any, operand: string, checkNull = false): FilterBuilder {\n\n    value = Array.wrap(value);\n\n    if (value.length === 0) {\n      return this;\n    }\n\n    // auto-convert\n    for (let i = 0; i < value.length; i++) {\n      const v = value[i];\n      if (typeof v === 'object' && v instanceof Date) {\n        value[i] = v.getTime();\n      }\n    }\n\n    let isNull = false;\n    if (checkNull) {\n      // check null existence\n      for (const v of value) {\n        if (v !== null) {\n          continue;\n          isNull = true;\n        }\n      }\n\n      if (isNull) {\n        value = value.filter((item: any) => item !== null);\n        operand += 'ornull';\n      }\n    }\n\n    // @ts-ignore\n    if (operand.endsWith('ornull') && value.length === 0) {\n      operand = 'isnull';\n    }\n\n    // add filter\n    this.filters.push(new Filter(name, value, operand));\n\n    return this;\n  }\n\n\n\n  public gt (name: string, value: number) {\n    return this.add(name, value, 'gt');\n  }\n\n  public lt (name: string, value: number) {\n    return this.add(name, value, 'lt');\n  }\n\n  public after (name: string, value: Date | number) {\n    return this.add(name, value, 'after', true);\n  }\n\n  public afterorequal (name: string, value: Date | number) {\n    return this.add(name, value, 'afterorequal', true);\n  }\n\n  public before (name: string, value: Date | number) {\n    return this.add(name, value, 'before', true);\n  }\n\n  public beforeorequal (name: string, value: Date | number) {\n    return this.add(name, value, 'beforeorequal', true);\n  }\n\n  public on (name: string, value: any) {\n    return this.add(name, value, 'on');\n  }\n\n  public eq (name: string, value: any) {\n    return this.add(name, value, 'eq');\n  }\n\n  public contains (name: string, value: string) {\n    return this.add(name, value, 'contains');\n  }\n\n  public like (name: string, value: string) {\n    return this.add(name, value, 'like');\n  }\n\n  public notlike (name: string, value: string) {\n    return this.add(name, value, 'notlike');\n  }\n\n  public isnull (name: string) {\n    return this.add(name, undefined, 'isnull');\n  }\n\n  public in (name: string, value: Array<any>) {\n    return this.add(name, value, 'in', true);\n  }\n\n  public notin (name: string, value: Array<any>) {\n    return this.add(name, value, 'notin', true);\n  }\n\n\n  public raw (filter: Filter) {\n    const filters = Array.wrap(filter);\n    for (const filter of filters) {\n      if (this.isFilterPart(filter)) {\n        this.filters.push(filter);\n      } else {\n        throw new SyntaxError(`Filter ${filter} has invalid syntax`);\n      }\n    }\n  }\n\n  /**\n   * Check if given string is proper filter part\n   */\n  public isFilterPart (str: string) {\n    return /^[a-zA-Z0-9.]{2,12}_(?:isnull$|(?:gt|lt|(?:after|before)(?:orequal)?|on|eq|contains|like|(?:not)?in)_)/.test(<string> str);\n  }\n\n  /**\n   * To string\n   */\n  public toString () {\n    const parts: Array<string> = [];\n\n    let part: string,\n        val: string;\n\n    for (const filter of this.filters) {\n      if (typeof filter === 'string') {\n        part = filter;\n      } else {\n        val = '';\n        if (filter.value.length > 1 || typeof filter.value[0] !== 'undefined') {\n          val = `_${filter.value.join('|')}`;\n        }\n        part = `${filter.name}_${filter.operand}${val}`;\n      }\n      parts.push(part);\n    }\n\n    return parts.join(';');\n  }\n}\n\n\nexport default FilterBuilder;\n","import APIEntity from './APIEntity'\nimport FilterBuilder from '../FilterBuilder'\n\n\n/**\n * Default limit\n *\n * @constant\n * @type {number}\n * @default\n */\nconst DEFAULT_LIMIT = 20;\n\n/**\n * Default offset\n *\n * @constant\n * @type {number}\n * @default\n */\nconst DEFAULT_OFFSET = 0;\n\n/**\n * API Order Enum\n */\nenum APIOrder {\n  'asc' = 'a',\n  'desc' = 'd'\n};\n\n\n/**\n * APIList\n *\n * @class\n * @extends APIEntity\n */\nclass APIList extends APIEntity {\n\n  /**\n   * Create\n   * Shortcut for sending data POST\n   *\n   * @param {object} data\n   */\n  public create (data: object) {\n    return this.post().data(data).send();\n  }\n\n  /**\n   * Sets sorting\n   *\n   * @public\n   * @param {string} name - Name of the column according to which the data will be sorted\n   * @param {string} [order=a] - Sorting order. Possibilities: 'a', 'd'\n   * @returns this\n   */\n  public sort (name: string, order: APIOrder = APIOrder.asc) {\n    // if order not in ['a', 'd']\n    //   throw new Error(`Order '\\${order}' is invalid! Use 'a' for ascending or 'd' for descending.`);\n\n    return this.params({\n      sort: `${name}_${order}`\n    });\n  }\n\n  /**\n   * Sets limit\n   *\n   * @public\n   * @param {number} [limit=DEFAULT_LIMIT] - Limit to be set\n   * @returns this\n   */\n  public limit (limit = DEFAULT_LIMIT) {\n    if (!Number.isNatural(limit)) {\n      throw new Error(`Limit '${limit}' is invalid!`);\n    }\n\n    return this.params({\n      limit\n    });\n  }\n\n  /**\n   * Gets limit\n   *\n   * @public\n   * @returns number\n   */\n  public getLimit () {\n    const params = this.getParams();\n    return params.limit == null ? DEFAULT_LIMIT : params.limit;\n  }\n\n  /**\n   * Disables limit\n   *\n   * @public\n   * @returns this\n   */\n  public noLimit () {\n    return this.limit(0);\n  }\n\n  /**\n   * Sets offset\n   *\n   * @public\n   * @param {number} [offset=DEFAULT_OFFSET] - Offset to be set\n   * @returns this\n   */\n  public offset (offset: number = DEFAULT_OFFSET) {\n    if (!Number.isNatural(offset)) {\n      throw new Error(`Offset '${offset}' is invalid!`);\n    }\n\n    return this.params({\n      offset\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE records between range\n   *\n   * @public\n   * @param {number} from - From index\n   * @param {number} to - To index\n   * @returns this\n   */\n  public between (from: number, to: number) {\n    if (!Number.isNatural(from)) {\n      throw new Error(`From '${from}' is invalid!`);\n    }\n\n    if (!Number.isNatural(to)) {\n      throw new Error(`To '${to}' is invalid!`);\n    }\n\n    return this.params({\n      offset: from,\n      limit: 1 + (to - from)\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE one record on given index\n   *\n   * @public\n   * @param {number} idx - Index\n   * @returns this\n   */\n  public only (idx: number) {\n    if (!Number.isNatural(idx)) {\n      throw new Error(`Index '${idx}' is invalid!`);\n    }\n\n    return this.params({\n      offset: idx,\n      limit: 1\n    });\n  }\n\n  /**\n   * Gets current limit and sets offset so that will request from BE one page of records\n   *\n   * @public\n   * @param {number} [page=1] - Page number (counted from 1)\n   * @returns this\n   */\n  public page (page = 1) {\n    if (!Number.isNatural(page) || page == 0) {\n      throw new Error(`Page '${page}' is invalid!`);\n    }\n\n    const limit = this.getLimit();\n    const offset = (page - 1) * limit;\n\n    return this.params({\n      offset,\n      limit\n    });\n  }\n\n  /**\n   * Sets search\n   *\n   * query param is working like SQL LIKE. BE sets wraps around query with %, and replaces every white character\n   * with %. So e.g. if query='my device', then it's searching for '%my%device%' in DB.\n   *\n   * @public\n   * @param {string} query - Query to search for\n   * @returns this\n   */\n  public search (query: string) {\n    if (typeof query !== 'string') {\n      throw new Error('Search query must be a string!');\n    }\n\n    return this.params({\n      search: query\n    });\n  }\n\n  /**\n   * Sets filter\n   *\n   * @public\n   * @param {FilterBuilder|string} filter - Filter\n   * @returns this\n   */\n  public filter (filter: FilterBuilder | string) {\n    const isFilterBuilder = filter instanceof FilterBuilder;\n\n    if (typeof filter !== 'string' && !isFilterBuilder) {\n      throw new Error('Filter must be either string or instance of FilterBuilder');\n    }\n\n    if (isFilterBuilder) {\n      filter = filter.toString();\n    }\n\n    return this.params({\n      filter\n    });\n  }\n}\n\ninterface APIList {\n\n  /**\n   * Alias for 'noLimit'\n   *\n   * @public\n   * @see noLimit\n   * @returns this\n   */\n  all: typeof APIList.prototype.noLimit;\n\n  /**\n   * Alias for 'between'\n   *\n   * @public\n   * @param {number} from - From idx\n   * @param {number} to - To idx\n   * @returns this\n   */\n  cut: typeof APIList.prototype.between;\n}\n\nAPIList.prototype.all = APIList.prototype.noLimit;\nAPIList.prototype.cut = APIList.prototype.between;\n\nexport default APIList;\n","import APIEntity from './APIEntity'\n\n\n/**\n * APIResource\n *\n * @class\n * @extends APIEntity\n */\nclass APIResource extends APIEntity {\n\n  /**\n   * Set DELETE as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public delete () {\n    return this.method('DELETE');\n  }\n}\n\n\nexport default APIResource\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIListCleanupConfigurations\n *\n * @class\n * @extends APIList\n */\nclass APIListCleanupConfigurations extends APIList {\n\n  /**\n   * /builds/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('cleanup-configurations');\n  }\n\n  // /cleanup-configurations/specific\n  public specific () {\n    return new APIResource(this).push('specific');\n  }\n\n}\n\nexport default APIListCleanupConfigurations\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceCleanupConfiguration\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceCleanupConfiguration extends APIResource {\n\n  /**\n   * /cleanup-configurations/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('cleanup-configurations', id);\n  }\n\n  // /cleanup-configurations/specific\n  public devices () {\n    return new APIList(this).push('devices');\n  }\n\n}\n\nexport default APIResourceCleanupConfiguration\n","import APIList from './APIList'\nimport APIResource from './APIResource'\nimport APIListCleanupConfigurations from \"./APIListCleanupConfigurations\";\nimport APIResourceCleanupConfiguration from \"./APIResourceCleanupConfiguration\";\n\n\n/**\n * APIListDevices\n *\n * @class\n * @extends APIList\n */\nclass APIListDevices extends APIList {\n\n  /**\n   * /devices\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('devices');\n  }\n\n  // /devices/filters\n  public filters () {\n    return new APIResource(this).push('filters');\n  }\n\n  // /devices/cleanup-configurations\n  public cleanupConfigurations () {\n    return new APIListCleanupConfigurations(this);\n  }\n\n  /**\n   * /devices/cleanup-configurations/{id}\n   *\n   * @param {number} id - Resource ID\n   */\n  public cleanupConfiguration (id: number) {\n    return new APIResourceCleanupConfiguration(this, id);\n  }\n\n  // /devices/desktop-browser-capabilities\n  public desktopBrowserCapabilities () {\n    return new APIResource(this).push('desktop-browser-capabilities');\n  }\n\n}\n\nexport default APIListDevices;\n","import APIList from './APIList'\nimport APIResource from './APIResource'\n\n\n/**\n * APIListDevices\n *\n * @class\n * @extends APIList\n */\nclass APIListUsers extends APIList {\n\n  /**\n   * /users\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('users');\n  }\n\n  // /users/activate\n  public activate () {\n    return new APIResource(this).push('activate').post();\n  }\n\n  // /users/recoveries\n  public recoveries () {\n    return new APIResource(this).push('recoveries');\n  }\n\n  // /users/passwordRecovery\n  public passwordRecovery () {\n    return new APIResource(this).push('password-recovery');\n  }\n\n  // /users/resetApiKey\n  public resetApiKey () {\n    return new APIResource(this).push('reset-api-key');\n  }\n\n  // /users/resetApiKey\n  public validateVatId () {\n    return new APIResource(this).push('validateVatId');\n  }\n\n}\n\nexport default APIListUsers;\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceBillingPeriod\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceBillingPeriod extends APIResource {\n\n  /**\n   * /billing-periods/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('billing-periods', id);\n  }\n\n  // /billing-periods/{id}/receipt\n  public receipt () {\n    return new APIResource(this).push('receipt').setRequestConfig({\n      responseType: 'arraybuffer'\n    });\n  }\n\n}\n\nexport default APIResourceBillingPeriod\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceBuild\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceBuild extends APIResource {\n\n  /**\n   * /builds/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('builds', id);\n  }\n\n  // /builds/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort');\n  }\n\n  // /builds/{id}/output-file-set/files\n  public outputFiles () {\n    return new APIList(this).push('output-file-set', 'files');\n  }\n\n}\n\nexport default APIResourceBuild\n","import APIResource from './APIResource'\nimport APIResourceBuild from './APIResourceBuild'\n\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceJob extends APIResource {\n\n  /**\n   * /jobs/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('jobs', id);\n  }\n\n  // /jobs/{id}/builds\n  public builds () {\n    return new APIList(this).push('builds');\n  }\n\n  // /jobs/{id}/builds/{id}\n  public build (id: number) {\n    return new APIResourceBuild(this, id);\n  }\n\n}\n\nexport default APIResourceJob\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceBillingPeriod\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceGroup extends APIResource {\n\n  /**\n   * /device-groups/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-groups', id);\n  }\n\n  // /device-groups/{id}/devices\n  public devices () {\n    return new APIList(this).push('devices');\n  }\n\n  // /device-groups/{id}/device/{id}\n  public device (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('devices', id);\n  }\n\n  // /device-groups/{id}/selectors\n  public selectors () {\n    return new APIList(this).push('selectors');\n  }\n\n  // /device-groups/{id}/selectors/{id}\n  public selector (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('selectors', id);\n  }\n\n}\n\nexport default APIResourceDeviceGroup\n","import APIEntity from '../APIEntity';\nimport APIResource from '../APIResource';\n\nfunction postDeviceRunIds (parent: APIEntity, name: string, ids?: Array<number>) {\n    const a = new APIResource(parent).push(name);\n\n    if (ids != null) {\n      a.params({\n        deviceRunIds: ids\n      });\n    }\n\n    return a.post(); \n}\n\nexport default postDeviceRunIds;\n","import APIResource from './APIResource'\nimport APIList from './APIList'\nimport postDeviceRunIds from './factory/postDeviceRunIds';\n\n\n/**\n * APIResourceRun\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceRunCommon extends APIResource {\n\n  /**\n   * /runs/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('runs', id);\n  }\n\n  // /runs/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort').post();\n  }\n\n  // /runs/{id}/data-availability\n  public dataAvailability () {\n    return new APIList(this).push('data-availability');\n  }\n\n  // /runs/{id}/device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /runs/{id}/files.zip\n  public filesZip (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'files.zip', ids);\n  }\n\n  // /runs/{id}/logs.zip\n  public logsZip (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'logs.zip', ids);\n  }\n\n  // /runs/{id}/performance.zip\n  public performanceZip (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'performance.zip', ids);\n  }\n\n  // /runs/{id}/retry\n  public retry (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n  // /runs/{id}/screenshot-names\n  public screenshotNames () {\n    return new APIList(this).push('screenshot-names');\n  }\n\n  // /runs/{id}/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /runs/{id}/screenshots.zip\n  public screenshotsZip (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'screenshots.zip', ids);\n  }\n\n  // /runs/{id}/steps\n  public steps () {\n    return new APIList(this).push('steps');\n  }\n\n  // /runs/{id}/tags\n  public tags () {\n    return new APIList(this).push('tags');\n  }\n\n  // /runs/{id}/tag\n  public tag (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('tags', id);\n  }\n\n}\n\nexport default APIResourceRunCommon\n","import APIResource from '../APIResource'\nimport APIList from '../APIList'\n\n/**\n * InputFileset\n *\n * @class\n * @extends APIResource\n */\nclass InputFileset extends APIResource {\n\n  /**\n   * /input-file-set\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('input-file-set');\n  }\n\n  // /input-file-set/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /input-file-set/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n}\n\nexport default InputFileset\n","import APIResource from '../APIResource'\nimport APIList from '../APIList'\n\nimport FilterBuilder from '../../FilterBuilder'\n\n// Create non-media files filter\nconst NON_MEDIA_FILES_FILTER = new FilterBuilder();\nNON_MEDIA_FILES_FILTER.eq('state', 'READY');\nNON_MEDIA_FILES_FILTER.notin('mimetype', [\n  // no images\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif',\n\n  // no videos\n  'video/mp4', 'video/avi', 'video/webm', 'video/ogg', 'video/mpeg'\n]);\n\n/**\n * OutputFileset\n *\n * @class\n * @extends APIResource\n */\nclass OutputFileset extends APIResource {\n\n  /**\n   * /output-file-set\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('output-file-set');\n  }\n\n  // /output-file-set/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /output-file-set/files/{id}\n  public file (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('files', id);\n  }\n\n  // /output-file-set/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n\n  // /output-file-set/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /output-file-set/screenshots/{id}\n  public screenshot (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /output-file-set/screenshots/{id}/file/{id}\n  public screenshotFile (id: number) {\n    this.screenshot(id).push('file');\n  }\n\n  // Filter files out by ready videos\n  public videos () {\n    return this.files().params({\n      filter: 's_state_eq_READY',\n      tag: ['video']\n    });\n  }\n\n  // Filter files out by non-media\n  public nonMediaFiles () {\n    return this.files().filter(NON_MEDIA_FILES_FILTER);\n  }\n\n}\n\nexport default OutputFileset\n","import APIResource from './APIResource'\nimport APIList from './APIList';\n\nimport InputFileset from './class/InputFileset'\nimport OutputFileset from './class/OutputFileset'\n\nimport DeviceSessionCommon from './interface/DeviceSessionCommon';\n\n\n/**\n * APIResourceDeviceSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceSessionCommon extends APIResource implements DeviceSessionCommon {\n\n  /**\n   * /device-sessions/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/commands\n  public commands () {\n    return new APIList(this).push('commands');\n  }\n\n  // /device-sessions/{id}/input-file-set\n  public input () {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  public output () {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /device-sessions/{id}/screenshots/{id}\n  public screenshot (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /device-sessions/{id}/steps\n  public steps () {\n    return new APIList(this).push('steps');\n  }\n\n  // /device-sessions/{id}/steps/{id}\n  public step (id: number | 'current') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('steps', id);\n  }\n\n  // /device-sessions/{id}/steps/current\n  public currentStep () {\n    return this.step('current');\n  }\n\n  // /device-sessions/{id}/test-case-runs\n  public testCaseRuns () {\n    return new APIList(this).push('test-case-runs');\n  }\n\n}\n\nexport default APIResourceDeviceSessionCommon\n","import APIResource from './APIResource';\nimport APIResourceDeviceSessionCommon from './APIResourceDeviceSessionCommon';\n\nimport DeviceSession from './interface/DeviceSession';\n\n\n/**\n * APIResourceDeviceSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceSession extends APIResourceDeviceSessionCommon implements DeviceSession {\n\n  // /device-sessions/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort').post();\n  }\n\n  // /device-sessions/{id}/retry\n  public retry () {\n    return new APIResource(this).push('retry').post();\n  }\n\n}\n\nexport default APIResourceDeviceSession\n","import APIResourceRunCommon from './APIResourceRunCommon'\nimport APIResourceDeviceSession from './APIResourceDeviceSession'\n\n\n/**\n * APIResourceRun\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceRun extends APIResourceRunCommon {\n\n  // /runs/{id}/device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n}\n\nexport default APIResourceRun\n","import APIResource from './APIResource'\nimport APIResourceRun from './APIResourceRun'\n\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceProject extends APIResource {\n\n  /**\n   * /projects/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('projects', id);\n  }\n\n  // /projects/{id}/runs\n  public runs () {\n    return new APIList(this).push('runs');\n  }\n\n  // /projects/{id}/runs/{id}\n  public run (id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n  // /projects/{id}/runs-extended\n  public runsExtended () {\n    return new APIList(this).push('runs-extended');\n  }\n\n  // /projects/{id}/runs-extended/{id}\n  public runExtended (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('runs-extended', id);\n  }\n\n  // /projects/{id}/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /projects/{id}/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n\n  // /projects/{id}/sharings\n  public sharings () {\n    return new APIList(this).push('sharings');\n  }\n\n  // /projects/{id}/sharings/{id}\n  public sharing (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('sharings', id);\n  }\n\n}\n\nexport default APIResourceProject\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceFile extends APIResource {\n\n  /**\n   * /files/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('files', id);\n  }\n\n  // use this to download file content\n  public file () {\n    return new APIResource(this).push('file');\n  }\n\n  // /files/{id}/icon\n  public icon () {\n    return new APIResource(this).push('icon');\n  }\n\n  // /files/{id}/tags\n  public tags () {\n    return new APIList(this).push('tags');\n  }\n\n}\n\nexport default APIResourceFile\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceNotification\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceNotification extends APIResource {\n\n  /**\n   * /notifications/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('notifications', id);\n  }\n\n  // /notifications/{id}/test\n  public test () {\n    return new APIResource(this).push('test');\n  }\n\n}\n\nexport default APIResourceNotification\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceAccessGroup\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAccessGroup extends APIResource {\n\n  /**\n   * /device-groups/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('access-groups', id);\n  }\n\n  // /access-groups/{id}/users\n  public users () {\n    return new APIList(this).push('users');\n  }\n\n  // /access-groups/{id}/users/{id}\n  public user (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('users', id);\n  }\n\n  // /access-groups/{id}/resources\n  public resources () {\n    return new APIList(this).push('resources');\n  }\n\n  // /access-groups/{id}/resources/{id}\n  public resource (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('resources', id);\n  }\n\n}\n\nexport default APIResourceAccessGroup\n","import APIResource from './APIResource'\n\n/**\n * APIResourceAdditionalUser\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAdditionalUser extends APIResource {\n\n  /**\n   * /additional-users/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('additional-users', id);\n  }\n\n  // /account/resend-activation\n  public resendActivation () {\n    return new APIResource(this).push('resend-activation');\n  }\n\n}\n\nexport default APIResourceAdditionalUser\n","import APIResource from './APIResource'\nimport APIResourceAdditionalUser from './APIResourceAdditionalUser';\n\nimport APIList from './APIList'\n\n/**\n * APIUserResourceAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIUserResourceAccount extends APIResource {\n\n  /**\n   * /account\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/additional-users\n  public additionalUsers () {\n    return new APIList(this).push('additional-users');\n  }\n\n  // /account/additional-users/{id}\n  public additionalUser (id: number) {\n    return new APIResourceAdditionalUser(this, id);\n  }\n\n  // /account-services/{id}/billing-period\n  public serviceBillingPeriod (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const a = new APIResource(this);\n    a.last += '-services';\n    a.push(id, 'billing-period');\n    return a;\n  }\n\n}\n\nexport default APIUserResourceAccount\n","import APIList from './APIList'\n\n\n/**\n * APIListDeviceTime\n *\n * @class\n * @extends APIList\n */\nclass APIListDeviceTime extends APIList {\n\n  /**\n   * /device-time\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('device-time');\n  }\n\n  // /device-time/reserved\n  public reserved () {\n    return new APIList(this).push('reserved');\n  }\n\n  // /device-time/used\n  public used () {\n    return new APIList(this).push('used');\n  }\n\n}\n\nexport default APIListDeviceTime;\n","import APIList from './APIList'\n\ninterface UploadObj {\n  /**\n   * Directory\n   */\n  dir: string;\n\n  /**\n   * Filename\n   */\n  filename: string;\n}\n\n/**\n * APIListFiles\n *\n * @class\n * @extends APIList\n */\nclass APIListFiles extends APIList {\n\n  // Constructor\n  constructor (parent: object) {\n    super(parent);\n    this.push('files');\n  }\n\n  // Siplifies process of uploading\n  public upload (obj: UploadObj) {\n    let form;\n\n    // For NodeJS\n    // @ts-ignore\n    if (global.isNodeJs) {\n      // @ts-ignore\n      const fs = require('fs');\n      // @ts-ignore\n      const FormData = require('form-data');\n\n      form = new FormData();\n      form.append('file', fs.createReadStream(obj.dir + '/' + obj.filename), {\n        filename: obj.filename\n      });\n\n    /**\n     * Browser\n     * @todo\n     */\n    } else {\n      throw new Error('Not supported yet!');\n    }\n\n    return this.post().headers(form.getHeaders()).data(form);\n  }\n\n}\n\nexport default APIListFiles\n","import APIList from './APIList'\n\n\n/**\n * APIListPurchased\n *\n * @class\n * @extends APIList\n */\nclass APIListPurchased extends APIList {\n\n  /**\n   * /purchased\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('purchased');\n  }\n\n}\n\nexport default APIListPurchased\n","import APIList from './APIList'\nimport APIListPurchased from './APIListPurchased'\n\n\n/**\n * APIListServices\n *\n * @class\n * @extends APIList\n */\nclass APIListServices extends APIList {\n\n  // Constructor\n  constructor (parent: object) {\n    super(parent);\n    this.push('services');\n  }\n\n  // /services/purchased\n  public purchased () {\n    return new APIListPurchased(this);\n  }\n\n  // /services/available\n  public available () {\n    return new APIList(this).push('available');\n  }\n\n  public active () {\n    const a = new APIList(this);\n    if (this.first === 'me') {\n      a.push('active');\n    } else {\n      a.params({\n        notArchived: true\n      });\n    }\n    return a;\n  }\n\n}\n\nexport default APIListServices\n","import APIList from './APIList'\nimport APIResource from './APIResource'\n\n\n/**\n * APIListRuns\n *\n * @class\n * @extends APIList\n */\nclass APIListRuns extends APIList {\n\n  /**\n   * /runs\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('runs');\n  }\n\n  // /runs/config\n  public config () {\n    return new APIResource(this).push('config');\n  }\n\n}\n\nexport default APIListRuns\n","import APIList from './APIList'\n\n\n/**\n * APIListNotifications\n *\n * @class\n * @extends APIList\n */\nclass APIListNotifications extends APIList {\n\n  /**\n   * /notifications\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('notifications');\n  }\n\n  // /notifications/scopes\n  public scopes () {\n    return new APIList(this).push('scopes');\n  }\n\n  // /notifications/channels\n  public channels () {\n    return new APIList(this).push('channels');\n  }\n\n}\n\nexport default APIListNotifications\n","import APIList from './APIList'\n\n/**\n * APIListSmartbearTunnels\n *\n * @class\n * @extends APIList\n */\nclass APIListSmartbearTunnels extends APIList {\n\n  /**\n   * /tunnels\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('tunnels');\n  }\n\n  /**\n   * Sets tunnel activity parameter\n   *\n   * @public\n   * @param {number} active - fetching active or inactive tunnels\n   * @returns this\n   */\n  public active (active: boolean) {\n    return this.params({ active: active });\n  }\n}\n\nexport default APIListSmartbearTunnels;\n","import DeviceSessionStandalone from './interface/DeviceSessionStandalone';\nimport APIList from './APIList';\nimport APIResource from './APIResource';\n\nimport InputFileset from './class/InputFileset';\nimport OutputFileset from './class/OutputFileset';\n\n\n/**\n * APIResourceDeviceSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceSessionStandalone extends APIResource implements DeviceSessionStandalone {\n\n  /**\n   * /device-sessions/{id}\n   *\n   * Constructor\n   */\n   constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/connections\n  public connections () {\n    return new APIList(this).push('connections');\n  }\n\n  // /device-sessions/{id}/connections/{id}\n  public connection (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('connections', id);\n  }\n\n  // /device-sessions/{id}/input-file-set\n  public input () {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  public output () {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/release\n  public release () {\n    return new APIResource(this).push('release').post();\n  }\n\n}\n\nexport default APIResourceDeviceSessionStandalone\n","import APIResource from './APIResource'\nimport APIResourceBillingPeriod from './APIResourceBillingPeriod'\nimport APIResourceJob from './APIResourceJob'\nimport APIResourceDeviceGroup from './APIResourceDeviceGroup'\nimport APIResourceProject from './APIResourceProject'\nimport APIResourceFile from './APIResourceFile'\nimport APIResourceNotification from './APIResourceNotification'\nimport APIResourceAccessGroup from './APIResourceAccessGroup'\n\nimport APIUserResourceAccount from './APIUserResourceAccount'\n\nimport APIList from './APIList'\nimport APIListDeviceTime from './APIListDeviceTime'\nimport APIListFiles from './APIListFiles'\nimport APIListServices from './APIListServices'\nimport APIListRuns from './APIListRuns'\nimport APIListNotifications from './APIListNotifications'\nimport APIListSmartbearTunnels from './APIListSmartbearTunnels'\nimport APIResourceDeviceSessionStandalone from './APIResourceDeviceSessionStandalone'\n\n\n/**\n * APIResourceUser\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceUser extends APIResource {\n\n  /**\n   * /users/{id} | /me\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number | 'me') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n\n    if (id === 'me') {\n      this.push('me');\n    } else if (typeof id === 'number') {\n      this.push('users', id);\n    } else {\n      throw new TypeError('id is not a number');\n    }\n  }\n\n  // /users/{id}/account\n  public account () {\n    return new APIUserResourceAccount(this);\n  }\n\n  // /users/{id}/device-time\n  public deviceTime () {\n    return new APIListDeviceTime(this);\n  }\n\n  // /users/{id}/device-time-summary\n  public deviceTimeSummary () {\n    return new APIList(this).push('device-time-summary');\n  }\n\n  // /users/{id}/services\n  public services () {\n    return new APIListServices(this);\n  }\n\n  // /users/{id}/services/{id}\n  public service (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('services', id);\n  }\n\n  // /users/{id}/billing-periods\n  public billingPeriods () {\n    return new APIList(this).push('billing-periods');\n  }\n\n  // /users/{id}/billing-periods/{id}\n  public billingPeriod (id: number) {\n    return new APIResourceBillingPeriod(this, id);\n  }\n\n  // /users/{id}/jobs\n  public jobs () {\n    return new APIList(this).push('jobs');\n  }\n\n  // /users/{id}/jobs/{id}\n  public job (id: number) {\n    return new APIResourceJob(this, id);\n  }\n\n  // /users/{id}/device-groups\n  public deviceGroups () {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /users/{id}/device-groups/{id}\n  public deviceGroup (id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /users/{id}/device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /users/{id}/device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /users/{id}/projects\n  public projects () {\n    return new APIList(this).push('projects');\n  }\n\n  // /users/{id}/projects/{id}\n  public project (id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /users/{id}/files\n  public files () {\n    return new APIListFiles(this);\n  }\n\n  // /users/{id}/files/{id}\n  public file (id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /users/{id}/runs\n  public runs () {\n    return new APIListRuns(this);\n  }\n\n  // /users/{id}/available-build-executors\n  public availableBuildExecutors () {\n    return new APIList(this).push('available-build-executors');\n  }\n\n  // /users/{id}/available-frameworks\n  public availableFrameworks () {\n    return new APIList(this).push('available-frameworks');\n  }\n\n  /**\n   * /users/{id}/\n   * /users/{id}/reset-api-key\n   */\n  public resetApiKey () {\n    return new APIResource(this).push('reset-api-key');\n  }\n\n  // /users/{id}/restore\n  public restore () {\n    return new APIResource(this).push('restore');\n  }\n\n  // /users/{id}/feedback\n  public feedback () {\n    return new APIResource(this).push('feedback');\n  }\n\n  // /users/{id}/notifications\n  public notifications () {\n    return new APIListNotifications(this);\n  }\n\n  // /users/{id}/notifications/{id}\n  public notification (id: number) {\n    return new APIResourceNotification(this, id);\n  }\n\n  // /users/{id}/receipts\n  public receipts () {\n    return new APIList(this).push('receipts');\n  }\n\n  // /users/{id}/preferences\n  public preferences () {\n    return new APIResource(this).push('preferences');\n  }\n\n  // /users/{id}/ui-preferences\n  public uiPreferences () {\n    return new APIResource(this).push('ui-preferences');\n  }\n\n  // /users/{id}/device-usage\n  public deviceUsage () {\n    return new APIList(this).push('device-usage');\n  }\n\n  // /users/{id}/statistics\n  public statistics () {\n    return new APIList(this).push('statistics');\n  }\n\n  // /users/{id}/statistics\n  public deviceStatistics () {\n    return new APIList(this).push('device-statistics');\n  }\n\n  // /users/{id}/access-groups\n  public accessGroups () {\n    return new APIList(this).push('access-groups');\n  }\n\n  // /users/{id}/access-groups/{id}\n  public accessGroup (id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /users/{id}/tunnels/{id}\n  public smartbearTunnel (id: number) {\n    return new APIResource(this).push('tunnels', id);\n  }\n\n  // /users/{id}/tunnels\n  public smartbearTunnels () {\n    return new APIListSmartbearTunnels(this);\n  }\n}\n\nexport default APIResourceUser\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDevice extends APIResource {\n\n  /**\n   * /devices/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('devices', id);\n  }\n\n  // /devices/{id}/properties\n  public properties () {\n    return new APIList(this).push('properties');\n  }\n\n}\n\nexport default APIResourceDevice\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceUserSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceUserSession extends APIResource {\n\n  // Constructor\n  // /user-sessions\n  constructor (parent: object) {\n    super(parent);\n    this.push('user-sessions');\n  }\n\n  // /user-sessions/login\n  public login (data: object) {\n    return new APIResource(this).push('login').post().data(data);\n  }\n\n  // /user-sessions/logout\n  public logout () {\n    return new APIResource(this).push('logout').post();\n  }\n\n  // /user-sessions/{name}-login\n  public sso (name: string) {\n    return new APIResource(this).push(name + '-login');\n  }\n\n  // /user-sessions/portal-login\n  public portalLogin () {\n    return new APIResource(this).push('portal-login').post();\n  }\n\n}\n\nexport default APIResourceUserSession\n","import APIList from './APIList'\nimport APIResource from './APIResource';\n\n\n/**\n * APIAdminListRuns\n *\n * @class\n * @extends APIList\n */\nclass APIAdminListRuns extends APIList {\n\n  /**\n   * /admin/runs\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'runs');\n  }\n\n  // /runs/config\n  public config () {\n    const a = new APIResource(this);\n    a.stack = ['runs', 'config'];\n    return a;\n  }\n\n}\n\n\nexport default APIAdminListRuns\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceCluster\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceCluster extends APIResource {\n\n  /**\n   * /clusters/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('clusters', id);\n  }\n\n  // /clusters/{id}/devices\n  public devices () {\n    return new APIList(this).push('devices');\n  }\n\n}\n\nexport default APIAdminResourceCluster\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceDeviceTime\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDeviceTime extends APIResource {\n\n  /**\n   * /device-time\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'device-time');\n  }\n\n  // /device-time/count-session-report\n  public countSessionReport () {\n    return new APIList(this).push('count-session-report');\n  }\n\n  // /device-time/step-time-report\n  public stepTimeReport () {\n    return new APIList(this).push('step-time-report');\n  }\n\n}\n\nexport default APIAdminResourceDeviceTime\n","import APIList from './APIList';\nimport APIResource from './APIResource'\nimport APIResourceDeviceSessionCommon from './APIResourceDeviceSessionCommon';\nimport postDeviceRunIds from './factory/postDeviceRunIds';\n\n\n/**\n * APIAdminResourceRun\n *\n * @class\n * @extends APIResourceRun\n */\nclass APIAdminResourceRunStandalone extends APIResource {\n\n  /**\n   * /runs/{id}\n   *\n   * Constructor\n   */\n   constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'runs', id);\n  }\n\n  // /runs/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort').post();\n  }  \n\n  // /runs/{id}/changebillable\n  public changeBillable (billable: boolean) {\n    return new APIResource(this).push('changebillable').post().params({\n      billable\n    });\n  }\n\n  // /runs/{id}/changepriority\n  public changePriority (priority: boolean) {\n    return new APIResource(this).push('changepriority').post().params({\n      priority\n    });\n  }\n\n  // /runs/{id}/retry\n  public retry (ids?: Array<number>) {\n    return postDeviceRunIds(this, 'retry', ids).setRequestConfig({\n      timeout: 0\n    });\n  }\n\n  // /runs/{id}/device-sessions\n  public deviceSessions () {\n    return new APIList(this).shift().push('device-sessions');\n  }\n\n  // /runs/{id}/device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSessionCommon(this, id).shift();\n  }\n\n}\n\nexport default APIAdminResourceRunStandalone\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDevice extends APIResource {\n\n  /**\n   * /admin/devices/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'devices', id);\n  }\n\n  // /admin/devices/{id}/queue\n  public queue () {\n    return new APIList(this).push('queue');\n  }\n\n  // /admin/devices/{id}/cleanup-configuration\n  public cleanupConfiguration () {\n    return new APIResource(this).push('cleanup-configuration');\n  }\n\n  // /admin/devices/{id}/labels\n  public labels () {\n    return new APIList(this).push('labels');\n  }\n\n  // /admin/devices/{id}/labels/{id}\n  public label (id: number) {\n    return new APIResource(this).push('labels', id);\n  }\n\n  // /admin/devices/{id}/blink\n  public blink () {\n    return new APIResource(this).push('blink').post();\n  }\n\n}\n\nexport default APIAdminResourceDevice\n","import APIResource from './APIResource'\n\n/**\n * APIAdminResourceAccountService\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceAccountService extends APIResource {\n\n  /**\n   * /account-services/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'account-services', id);\n  }\n\n  // /account-services/{id}/activate\n  public activate () {\n    return new APIResource(this).push('activate').post();\n  }\n\n  // /account-services/{id}/deactivate\n  public deactivate () {\n    return new APIResource(this).push('deactivate').post();\n  }\n\n}\n\nexport default APIAdminResourceAccountService\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceUserAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceUserAccount extends APIResource {\n\n  /**\n   * /acount\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/roles\n  public roles () {\n    return new APIList(this).push('roles');\n  }\n\n  // /account/roles/{id}\n  public role (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('roles', id);\n  }\n\n  // /account-services\n  public services () {\n    const a = new APIList(this);\n    a.last += '-services';\n    return a;\n  }\n\n  // /update-account\n  public update () {\n    const a = new APIResource(this);\n    a.last = 'update-account';\n    return a.post();\n  }\n\n}\n\nexport default APIAdminResourceUserAccount\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\nimport APIAdminResourceUserAccount from './APIAdminResourceUserAccount';\n\n\n/**\n * APIAdminResourceUser\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceUser extends APIResource {\n\n  /**\n   * /users/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'users', id);\n  }\n\n  // /users/{id}/disable\n  public disable () {\n    return new APIResource(this).push('disable');\n  }\n\n  // /users/{id}/enable\n  public enable () {\n    return new APIResource(this).push('enable');\n  }\n\n  // /users/{id}/licenses\n  public licenses () {\n    return new APIList(this).push('licenses');\n  }\n\n  // /users/{id}/resend-activation\n  public resendActivation () {\n    return new APIResource(this).push('resend-activation').post();\n  }\n\n  // users/{id}/account\n  public account () {\n    return new APIAdminResourceUserAccount(this);\n  }\n\n}\n\nexport default APIAdminResourceUser\n","import APIResource from './APIResource'\nimport APIList from './APIList';\n\nimport APIResourceDeviceSessionCommon from './APIResourceDeviceSessionCommon';\n\nimport postAdminDeviceSessionChangeBillable from './factory/postAdminDeviceSessionChangeBillable';\n\nimport DeviceSessionStandalone from './interface/DeviceSessionStandalone';\nimport DeviceSessionCommon from './interface/DeviceSessionCommon';\n\n\n/**\n * APIAdminResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDeviceSessionStandalone extends APIResourceDeviceSessionCommon implements DeviceSessionCommon, DeviceSessionStandalone {\n\n  // /admin/device-sessions/{id}/changebillable\n  public changeBillable (billable: boolean) {\n    return postAdminDeviceSessionChangeBillable(this, billable);\n  }\n\n  // /device-sessions/{id}/connections\n  public connections () {\n    return new APIList(this).push('connections');\n  }\n\n  // /device-sessions/{id}/connections/{id}\n  public connection (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('connections', id);\n  }\n\n  // /device-sessions/{id}/release\n  public release () {\n    return new APIResource(this).push('release').post();\n  }\n\n}\n\nexport default APIAdminResourceDeviceSessionStandalone\n","import APIEntity from '../APIEntity';\nimport APIResource from '../APIResource';\n\nfunction postAdminDeviceSessionChangeBillable (parent: APIEntity, billable: boolean) {\n    const a = new APIResource(parent);\n    const deviceSessionId = a.last;\n\n    return a.restack('admin', 'device-sessions', deviceSessionId, 'changebillable').params({\n      billable\n    }).post();\n}\n\nexport default postAdminDeviceSessionChangeBillable;\n","import APIList from './APIList'\nimport APIResource from './APIResource'\nimport APIListCleanupConfigurations from \"./APIListCleanupConfigurations\";\nimport APIResourceCleanupConfiguration from \"./APIResourceCleanupConfiguration\";\n\n\n/**\n * APIAdminListDevices\n *\n * @class\n * @extends APIList\n */\nclass APIAdminListDevices extends APIList {\n\n  /**\n   * /devices\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'devices');\n  }\n\n  // /devices/filters\n  public filters () {\n    return new APIResource(this).push('filters');\n  }\n\n  // /devices/cleanup-configurations\n  public cleanupConfigurations () {\n    return new APIListCleanupConfigurations(this);\n  }\n\n  /**\n   * /devices/cleanup-configurations/{id}\n   *\n   * @param {number} id - Resource ID\n   */\n  public cleanupConfiguration (id: number) {\n    return new APIResourceCleanupConfiguration(this, id);\n  }\n\n  // /devices/desktop-browser-capabilities\n  public desktopBrowserCapabilities () {\n    return new APIResource(this).push('desktop-browser-capabilities');\n  }\n\n}\n\nexport default APIAdminListDevices;\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceFramework\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceFramework extends APIResource {\n\n  /**\n   * /frameworks/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'frameworks', id);\n  }\n\n  // /frameworks/{id}/config\n  public config () {\n    return new APIResource(this).push('config');\n  }\n\n  // /frameworks/{id}/required-roles\n  public requiredRoles () {\n    return new APIList(this).push('required-roles');\n  }\n\n}\n\nexport default APIAdminResourceFramework\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceLicense\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceLicense extends APIResource {\n\n  /**\n   * /licenses/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'licenses', id);\n  }\n\n  // /licenses/{id}/activate\n  public activate () {\n    return new APIResource(this).push('activate');\n  }\n\n  // /licenses/{id}/deactivate\n  public deactivate () {\n    return new APIResource(this).push('deactivate');\n  }\n\n  // /licenses/{id}/resend\n  public resend () {\n    return new APIResource(this).push('resend');\n  }\n\n  // /licenses/{id}/download\n  public download () {\n    return new APIResource(this).push('download');\n  }\n\n}\n\nexport default APIAdminResourceLicense\n","import APIList from './APIList'\n\n\n/**\n * APIListNotificationPlans\n *\n * @class\n * @extends APIList\n */\nclass APIAdminListNotificationPlans extends APIList {\n\n  /**\n   * /notification-plans\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'notification-plans');\n  }\n\n  // /notification-plans/channels\n  public channels () {\n    return new APIList(this).push('channels');\n  }\n\n  // /notification-plans/scopes\n  public scopes () {\n    return new APIList(this).push('scopes');\n  }\n\n}\n\n\nexport default APIAdminListNotificationPlans\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceNotificationPlan\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceNotificationPlan extends APIResource {\n\n  /**\n   * /notification-plans/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'notification-plans', id);\n  }\n\n  // /notification-plans/{id}/check\n  public check () {\n    return new APIList(this).push('check');\n  }\n\n  // /notification-plans/{id}/test\n  public test () {\n    return new APIResource(this).push('test');\n  }\n\n  // /notification-plans/{id}/execute\n  public execute () {\n    return new APIResource(this).push('execute');\n  }\n\n}\n\nexport default APIAdminResourceNotificationPlan\n","import APIList from './APIList'\n\nimport APIResource from './APIResource'\nimport APIResourceFile from './APIResourceFile'\nimport APIResourceProject from './APIResourceProject';\nimport APIResourceAccessGroup from './APIResourceAccessGroup';\n\nimport APIAdminListRuns from './APIAdminListRuns';\n\nimport APIAdminResourceCluster from './APIAdminResourceCluster';\nimport APIAdminResourceDeviceTime from './APIAdminResourceDeviceTime';\nimport APIAdminResourceRunStandalone from './APIAdminResourceRunStandalone';\nimport APIAdminResourceDevice from './APIAdminResourceDevice';\nimport APIAdminResourceAccountService from './APIAdminResourceAccountService';\nimport APIAdminResourceUser from './APIAdminResourceUser';\nimport APIAdminResourceDeviceSessionStandalone from './APIAdminResourceDeviceSessionStandalone';\nimport APIAdminListDevices from \"./APIAdminListDevices\";\nimport APIResourceDeviceGroup from \"./APIResourceDeviceGroup\";\nimport APIAdminResourceFramework from \"./APIAdminResourceFramework\";\nimport APIAdminResourceLicense from \"./APIAdminResourceLicense\";\nimport APIAdminListNotificationPlans from \"./APIAdminListNotificationPlans\";\nimport APIAdminResourceNotificationPlan from \"./APIAdminResourceNotificationPlan\";\n\n\n/**\n * APIAdminResource\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResource extends APIResource {\n\n  /**\n   * /admin\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n  }\n\n  // /access-groups\n  public accessGroups () {\n    return new APIList(this).push('access-groups');\n  }\n\n  // /access-groups/{id}\n  public accessGroup (id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /admin/accounts\n  public accounts () {\n    return new APIList(this).push('admin', 'accounts');\n  }\n\n  // /admin/accounts/{id}\n  public account (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'accounts', id);\n  }\n\n  // /admin/account-services\n  public accountServices () {\n    return new APIList(this).push('admin', 'account-services');\n  }\n\n  // /admin/account-services/{id}\n  public accountService (id: number) {\n    return new APIAdminResourceAccountService(this, id);\n  }\n\n  // activities\n  public activities () {\n    return new APIList(this).push('admin', 'activities');\n  }\n\n  // /admin/billing-periods\n  public billingPeriods () {\n    return new APIList(this).push('admin', 'billing-periods');\n  }\n\n  // /admin/billing-periods/{id}\n  public billingPeriod (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'billing-periods', id);\n  }\n\n  public pools () {\n    return new APIList(this).push('admin', 'pools');\n  }\n\n  public pool (id: number) {\n    return new APIResource(this).push('admin', 'pools', id);\n  }\n\n  // /clusters\n  public clusters () {\n    return new APIList(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  public cluster (id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n\n  // /admin/country-vat-rates\n  public countryVatRates () {\n    return new APIList(this).push('admin', 'country-vat-rates');\n  }\n\n  // /admin/country-vat-rates/{id}\n  public countryVatRate (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'country-vat-rates', id);\n  }\n\n  // /admin/devices\n  public devices () {\n    return new APIAdminListDevices(this);\n  }\n\n  // /admin/devices/{id}\n  public device (id: number) {\n    return new APIAdminResourceDevice(this, id);\n  }\n\n  public devicesForModel (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const a = this.devices();\n    a.params({\n      filter: 'deviceModelId_eq_' + id\n    });\n    return a;\n  }\n\n  // /admin/device/statuses\n  public deviceStatuses () {\n    return new APIList(this).push('admin', 'device', 'statuses');\n  }\n\n  // /admin/device-models\n  public deviceModels () {\n    return new APIList(this).push('admin', 'device-models');\n  }\n\n  // /admin/device-models/{id}\n  public deviceModel (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'device-models', id);\n  }\n\n  // /admin/device-problems\n  public deviceProblems () {\n    return new APIList(this).push('admin', 'device-problems');\n  }\n\n  // /admin/device-model-criteria\n  public deviceModelCriterias () {\n    return new APIList(this).push('admin', 'device-model-criteria');\n  }\n\n  // /admin/device-model-criteria/{id}\n  public deviceModelCriteria (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('admin', 'device-model-criteria', id);\n  }\n\n  // /device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('admin', 'device-sessions');\n  }\n\n  // /device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIAdminResourceDeviceSessionStandalone(this, id);\n  }\n\n  // /device-time\n  public deviceTime () {\n    return new APIAdminResourceDeviceTime(this);\n  }\n\n  // /device-time-summary\n  public deviceTimeSummary () {\n    return new APIList(this).push('admin', 'device-time-summary');\n  }\n\n  // /device-types\n  public deviceTypes () {\n    return new APIList(this).push('admin', 'device-types');\n  }\n\n  // /device-types/{id}\n  public deviceType (id: number) {\n    return new APIResource(this).push('admin', 'device-types', id);\n  }\n\n  // /device-groups\n  public deviceGroups () {\n    return new APIList(this).push('device-groups');\n  }\n  // /device-groups/{id}\n  public deviceGroup (id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /admin/interactive-queue\n  public interactiveQueue () {\n    return new APIList(this).push('admin', 'interactive-queue');\n  }\n\n  // /files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /files/{id}\n  public file (id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /admin/overview\n  public overview () {\n    return new APIResource(this).push('admin', 'overview');\n  }\n\n  // /projects\n  public projects () {\n    return new APIList(this).push('projects');\n  }\n\n  // /projects/{id}\n  public project (id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /admin/runs\n  public runs () {\n    return new APIAdminListRuns(this);\n  }\n\n  // /runs/{id}\n  public run (id: number) {\n    return new APIAdminResourceRunStandalone(this, id);\n  }\n\n  // /users\n  public users () {\n    return new APIList(this).push('users');\n  }\n\n  // /admin/users\n  public createUser () {\n    return new APIList(this).push('admin', 'users').post();\n  }\n\n  // /users/{id}\n  public user (id: number) {\n    return new APIAdminResourceUser(this, id);\n  }\n\n  // /admin/maintenance\n  public maintenance () {\n    return new APIResource(this).push('admin', 'maintenance');\n  }\n\n  // /admin/emails\n  public emails () {\n    return new APIList(this).push('admin', 'emails');\n  }\n\n  // /admin/emails/{id}/resend\n  public resendEmail (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    return new APIResource(this).push('admin', 'emails', id, 'resend').post();\n  }\n\n  // /admin/frameworks\n  public frameworks () {\n    return new APIList(this).push('admin', 'frameworks')\n  }\n\n  // /admin/frameworks/{id}\n  public framework (id: number) {\n    return new APIAdminResourceFramework(this, id)\n  }\n\n  // /admin/frameworks/available-labels\n  public frameworkAvailableLabels () {\n    const a = this.frameworks();\n    a.push('available-labels');\n    return a;\n  }\n\n  // /admin/errors\n  public errors () {\n    return new APIList(this).push('admin', 'errors')\n  }\n\n  // /admin/licenses\n  public licenses () {\n    return new APIList(this).push('admin', 'licenses')\n  }\n\n  // /admin/licenses/{id}\n  public license (id: number) {\n    return new APIAdminResourceLicense(this, id)\n  }\n\n  // /admin/market-shares\n  public marketShares () {\n    return new APIList(this).push('admin', 'market-shares')\n  }\n\n  // /admin/notification-plans\n  public notificationPlans () {\n    return new APIAdminListNotificationPlans(this)\n  }\n\n  // /admin/notification-plans/{id}\n  public notificationPlan (id: number) {\n    return new APIAdminResourceNotificationPlan(this, id)\n  }\n\n}\n\nexport default APIAdminResource\n","import APIResource from './APIResource'\n\n/**\n * APIResourceAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAccount extends APIResource {\n\n  /**\n   * /accounts/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('accounts', id);\n  }\n\n  // /accounts/{id}/concurrency-status\n  public concurrencyStatus () {\n    return new APIResource(this).push('concurrency-status');\n  }\n\n  // /accounts/{id}/preferences\n  public preferences () {\n    return new APIResource(this).push('preferences');\n  }\n\n}\n\nexport default APIResourceAccount\n","import './finka';\nimport ApiConfig from './ApiConfig';\n\nimport axios, { AxiosInstance } from 'axios';\n\n// @ts-ignore\nimport { version } from '../package.json';\n\nimport APIList from './api/APIList';\nimport APIListDevices from './api/APIListDevices';\nimport APIListUsers from './api/APIListUsers';\n\nimport APIResourceUser from './api/APIResourceUser';\nimport APIResourceDevice from './api/APIResourceDevice';\nimport APIResourceDeviceGroup from './api/APIResourceDeviceGroup';\nimport APIResourceUserSession from './api/APIResourceUserSession';\n\nimport APIAdminResource from './api/APIAdminResource';\nimport APIResourceAccount from './api/APIResourceAccount';\n\n// @ts-ignore\nif (global.isNodeJs) {\n  // Set User-Agent\n  axios.defaults.headers.common['User-Agent'] = `Bitbar Cloud API Client for JavaScript v${version}`;\n}\n\n// Disable max content length\naxios.defaults.maxContentLength = 1073741824; // 1GB\n\n\n/**\n * API\n * Root for other API resources\n */\nclass API {\n\n  // Main config\n  private config: ApiConfig;\n\n  // axios config\n  private axiosConfig: ApiConfig;\n\n  // axios instance\n  public axios: AxiosInstance;\n\n\n  constructor (config: ApiConfig) {\n    if (config == null) {\n      throw new Error('config cannot be empty');\n    }\n\n    this.config = config;\n    this.axiosConfig = <ApiConfig> {};\n\n    if (this.config.cloudUrl == null) {\n      throw new TypeError('cloudUrl cannot be empty');\n    } else if (typeof this.config.cloudUrl !== 'string') {\n      throw new TypeError('cloudUrl must be a string');\n    } else if (!/^https?:\\/\\/.{2,}/.test(this.config.cloudUrl)) {\n      throw new Error(\"cloudUrl doesn't look like a URL\");\n    }\n\n    // Validate and correct cloudUrl if needed\n    this.axiosConfig.baseURL = this.config.cloudUrl.replace(/\\/+$/, '') + '/api'\n\n    // Check v2\n    this.config.v2 = !!this.config.v2;\n    if (this.config.v2) {\n      this.axiosConfig.baseURL += '/v2';\n    }\n\n    // Check if apiKey is set\n    if (this.config.apiKey) {\n      if (typeof this.config.apiKey !== 'string') {\n        throw new TypeError('apiKey must be a string');\n      } else if (!/^[A-Za-z0-9]{32}$/.test(this.config.apiKey)) {\n        throw new Error(\"apiKey is in the wrong format\");\n      }\n\n      this.axiosConfig.auth = {\n        username: <string> this.config.apiKey,\n        password: ''\n      };\n    }\n\n    // With credentials\n    this.axiosConfig.withCredentials = config.withCredentials == null ? false : config.withCredentials;\n\n    // Create axios instance\n    this.axios = axios.create(this.axiosConfig);\n  }\n\n\n  // --- Resources starts here --- //\n\n  // /user-sessions\n  public userSession () {\n    return new APIResourceUserSession(this);\n  }\n\n  // /user/{id}\n  public user (id: number | 'me') {\n    return new APIResourceUser(this, id);\n  }\n\n  // /users\n  public users () {\n    return new APIListUsers(this);\n  }\n\n  // /account/{id}\n  public account (id: number) {\n    return new APIResourceAccount(this, id);\n  }\n\n  // /me\n  public me () {\n    return this.user('me');\n  }\n\n  // /admin\n  public admin () {\n    return new APIAdminResource(this);\n  }\n\n  // /devices\n  public devices () {\n    return new APIListDevices(this);\n  }\n\n  // /devices/{id}\n  public device (id: number) {\n    return new APIResourceDevice(this, id);\n  }\n\n  // /device-groups\n  public deviceGroups () {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /device-groups/{id}\n  public deviceGroup (id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /label-groups\n  public labelGroups () {\n    return new APIList(this).push('label-groups');\n  }\n\n  // /device-statistics\n  public deviceStatistics () {\n    return new APIList(this).push('device-statistics');\n  }\n\n}\n\n\nexport default API;\n","import API from './API';\nimport FilterBuilder from './FilterBuilder';\n\n/**\n * Cloud API Client\n */\nconst CloudAPIClient = {\n  API,\n  FilterBuilder\n}\n\nexport default CloudAPIClient;\n"],"names":["finka","ALLOWED_HTTP_METHODS","APIEntity","[object Object]","parent","this","stack","requestConfig","root","Array","isArray","push","setRequestConfig","items","item","pop","shift","unshift","first","val","last","length","absolute","url","join","axiosConfig","baseURL","Object","deepAssign","key","headers","_headers","replace","letter","toUpperCase","name","NAME","toLocaleUpperCase","Error","keys","method","params","data","Content-Type","qs","stringify","arrayFormat","startsWith","paramsSerializer","axios","request","Filter","value","operand","FilterBuilder","filters","checkNull","wrap","i","v","Date","getTime","endsWith","add","undefined","filter","isFilterPart","SyntaxError","str","test","parts","part","APIOrder","APIList","post","send","order","asc","sort","limit","Number","isNatural","getParams","offset","from","to","idx","page","getLimit","query","search","isFilterBuilder","toString","prototype","all","noLimit","cut","between","APIResource","APIListCleanupConfigurations","super","APIResourceCleanupConfiguration","id","APIListDevices","APIListUsers","APIResourceBillingPeriod","responseType","APIResourceBuild","APIResourceJob","APIResourceDeviceGroup","postDeviceRunIds","ids","a","deviceRunIds","APIResourceRunCommon","timeout","InputFileset","NON_MEDIA_FILES_FILTER","eq","notin","OutputFileset","screenshot","files","tag","APIResourceDeviceSessionCommon","step","APIResourceDeviceSession","APIResourceRun","APIResourceProject","APIResourceFile","APIResourceNotification","APIResourceAccessGroup","APIResourceAdditionalUser","APIUserResourceAccount","APIListDeviceTime","APIListFiles","obj","form","global","isNodeJs","fs","require","append","createReadStream","dir","filename","getHeaders","APIListPurchased","APIListServices","notArchived","APIListRuns","APIListNotifications","APIListSmartbearTunnels","active","APIResourceDeviceSessionStandalone","APIResourceUser","TypeError","APIResourceDevice","APIResourceUserSession","APIAdminListRuns","APIAdminResourceCluster","APIAdminResourceDeviceTime","APIAdminResourceRunStandalone","billable","priority","APIAdminResourceDevice","APIAdminResourceAccountService","APIAdminResourceUserAccount","APIAdminResourceUser","APIAdminResourceDeviceSessionStandalone","deviceSessionId","restack","postAdminDeviceSessionChangeBillable","APIAdminListDevices","APIAdminResourceFramework","APIAdminResourceLicense","APIAdminListNotificationPlans","APIAdminResourceNotificationPlan","APIAdminResource","devices","frameworks","APIResourceAccount","defaults","common","maxContentLength","API","config","cloudUrl","v2","apiKey","auth","username","password","withCredentials","create","user"],"mappings":"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"}
{"version":3,"file":"bitbar-cloud-api-client.min.js","sources":["../src/finka.ts","../src/api/APIEntity.ts","../src/Filter.ts","../src/FilterBuilder.ts","../src/api/APIList.ts","../src/api/APIResource.ts","../src/api/APIListDevices.ts","../src/api/APIListUsers.ts","../src/api/APIResourceBillingPeriod.ts","../src/api/APIResourceBuild.ts","../src/api/APIResourceJob.ts","../src/api/APIResourceDeviceGroup.ts","../src/api/extra-class/InputFileset.ts","../src/api/extra-class/OutputFileset.ts","../src/api/APIResourceDeviceSession.ts","../src/api/APIResourceRun.ts","../src/api/APIResourceProject.ts","../src/api/APIResourceFile.ts","../src/api/APIResourceNotification.ts","../src/api/APIResourceAccessGroup.ts","../src/api/APIResourceAdditionalUser.ts","../src/api/APIUserResourceAccount.ts","../src/api/APIListDeviceTime.ts","../src/api/APIListFiles.ts","../src/api/APIListPurchased.ts","../src/api/APIListServices.ts","../src/api/APIListRuns.ts","../src/api/APIListNotifications.ts","../src/api/APIListSmartbearTunnels.ts","../src/api/APIResourceUser.ts","../src/api/APIResourceDevice.ts","../src/api/APIResourceUserSession.ts","../src/api/APIAdminResourceCluster.ts","../src/api/APIAdminResourceDeviceTime.ts","../src/api/APIAdminResourceRun.ts","../src/api/APIAdminResourceDevice.ts","../src/api/APIAdminResourceDeviceSession.ts","../src/api/APIAdminResourceAccountService.ts","../src/api/APIAdminResourceUserAccount.ts","../src/api/APIAdminResourceUser.ts","../src/api/APIAdminResource.ts","../src/api/APIResourceAccount.ts","../src/API.ts","../src/CloudAPIClient.ts"],"sourcesContent":["// @ts-ignore\nimport finka from '@bitbar/finka';\n\nfinka();\n\nexport default {};\n","import qs from 'qs';\nimport { AxiosRequestConfig, Method } from 'axios';\n\n\n/**\n * Allowed methods\n *\n * @constant\n * @type {Array}\n * @default\n */\nenum ALLOWED_HTTP_METHODS {\n  GET = 'GET',\n  POST = 'POST',\n  DELETE = 'DELETE'\n};\n\n\n/**\n * APIEntity\n *\n * @class\n * @abstract\n */\nclass APIEntity {\n\n  /**\n   * Stack\n   *\n   * @public\n   * @type {Array}\n   */\n  public stack: Array<string|number>;\n\n  /**\n   * object of request config\n   *\n   * @protected\n   * @type {AxiosRequestConfig}\n   */\n  protected requestConfig: AxiosRequestConfig;\n\n  /**\n   * Root\n   *\n   * @public\n   * @type {API}\n   */\n  public root: object;\n\n  /**\n   * Constructor\n   * @param {APIEntity|object} [parent] - Specifies a parent from which should be inherited properties\n   */\n  constructor (parent: APIEntity | object) {\n    this.stack = [];\n    this.requestConfig = {};\n\n    if (parent instanceof APIEntity) {\n      this.root = parent.root;\n\n      if (Array.isArray(parent.stack)) {\n        this.push(...parent.stack);\n      }\n\n      if (parent.requestConfig != null) {\n        this.setRequestConfig(parent.requestConfig);\n      }\n    } else {\n      this.root = parent;\n    }\n  }\n\n  /**\n   * Push\n   *\n   * @public\n   * @param {string|number} items... - Items that should be pushed to stack\n   * @returns this\n   */\n  public push (...items: Array<string|number>) {\n    for (const item of items) {\n      this.stack.push(item);\n    }\n    return this;\n  }\n\n  /**\n   * Pop\n   *\n   * @public\n   * @return this\n   */\n  public pop () {\n    this.stack.pop();\n    return this;\n  }\n\n  /**\n   * Get first element of the stack\n   */\n  public get first () {\n    return this.stack[0];\n  }\n\n  /**\n   * Set first element of the stack\n   */\n  public set first (val) {\n    this.stack[0] = val;\n  }\n\n  /**\n   * Get last element of the stack\n   */\n  public get last () {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Set last element of the stack\n   */\n  public set last (val) {\n    this.stack[this.stack.length - 1] = val;\n  }\n\n  /**\n   * To URL\n   *\n   * @param {boolean} absolute\n   */\n  public toUrl (absolute = false) {\n    let url = `/${this.stack.join('/')}`;\n\n    if (absolute) {\n      // @ts-ignore\n      url = this.root.axiosConfig.baseURL + url;\n    }\n\n    return url;\n  }\n\n  /**\n   * Set request config\n   *\n   * @public\n   * @param {AxiosRequestConfig} requestConfig - object of request config to be set\n   * @returns this\n   */\n  public setRequestConfig (requestConfig: AxiosRequestConfig) {\n    Object.deepAssign(this.requestConfig, requestConfig);\n    return this;\n  }\n\n  /**\n   * Remove request config key\n   *\n   * @public\n   * @param {string} key - Key to me removed from request config\n   * @returns this\n   */\n  public removeRequestConfig (key: string) {\n    // @ts-ignore\n    delete this.requestConfig[key];\n    return this;\n  }\n\n  /**\n   * Set headers\n   *\n   * @public\n   * @param {object} headers - Headers object\n   * @returns this\n   */\n  public headers (headers: object) {\n    const _headers = {};\n\n    // Unify/Standarize headers keys\n    for (const key in headers) {\n      const newKey = key.replace(/(?:^|-)([a-z])/g, (letter) => letter.toUpperCase());\n      // @ts-ignore\n      _headers[newKey] = headers[key];\n    }\n\n    // Set\n    return this.setRequestConfig({\n      headers: _headers\n    });\n  }\n\n  /**\n   * Set HTTP method\n   *\n   * @public\n   * @param {string} name - HTTP methods name\n   * @returns this\n   */\n  public method (name: Method) {\n    const NAME: Method = <Method> name.toLocaleUpperCase();\n\n    // @ts-ignore\n    if (!ALLOWED_HTTP_METHODS[NAME]) {\n      throw new Error(`Method '${NAME}' is not allowed! You can use: ${Object.keys(ALLOWED_HTTP_METHODS).join(', ')}`);\n    }\n\n    return this.setRequestConfig({\n      method: NAME\n    });\n  }\n\n  /**\n   * Set GET as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public get () {\n    return this.method('GET');\n  }\n\n  /**\n   * Set POST as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public post () {\n    return this.method('POST');\n  }\n\n  /**\n   * Set params\n   *\n   * @public\n   * @param {object} params - object of params to be set\n   * @returns this\n   */\n  public params (params: object) {\n    Object.deepAssign(this.requestConfig, {\n      params\n    });\n    return this;\n  }\n\n  /**\n   * Get params\n   *\n   * @public\n   * @returns object\n   */\n  public getParams () {\n    return this.requestConfig.params == null ? {} : this.requestConfig.params;\n  }\n\n  /**\n   * Remove params key\n   *\n   * @public\n   * @param {string} key - Key to me removed from params\n   * @returns this\n   */\n  public removeParam (key: string) {\n    delete this.requestConfig.params[key];\n    return this;\n  }\n\n  /**\n   * Set data\n   *\n   * @public\n   * @param {object} data - object of data to be set\n   * @returns this\n   */\n  public data (data: object) {\n    Object.deepAssign(this.requestConfig, {\n      data\n    });\n    return this;\n  }\n\n  /**\n   * Set JSON data\n   *\n   * @public\n   * @param {object} data - JSON object to be set\n   * @returns this\n   */\n  public jsonData (data: object) {\n    this.headers({\n      'Content-Type': 'application/json'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Set form data\n   *\n   * @public\n   * @param {object} data - JSON object to be set\n   * @returns this\n   */\n  public formData (data: FormData) {\n    this.headers({\n      'Content-Type': 'multipart/form-data'\n    }).data(data);\n    return this;\n  }\n\n  /**\n   * Custom params serializer\n   * @private\n   * @param {object} params\n   */\n  private paramsSerializer (params: object) {\n    return qs.stringify(params, {\n      arrayFormat: 'brackets'\n    });\n  }\n\n  /**\n   * Send request\n   *\n   * @public\n   * @returns Promise\n   */\n  public send () {\n    const requestConfig = <AxiosRequestConfig> Object.deepAssign({}, this.requestConfig, {\n      url: `/${this.stack.join('/')}`\n    });\n\n    // Set default headers\n    if (requestConfig.headers == null) {\n      requestConfig.headers = {};\n    }\n\n    // Set default Content-Type\n    if (requestConfig.headers['Content-Type'] == null) {\n      requestConfig.headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // Convert data if needed\n    if (requestConfig.method === 'POST' &&\n    requestConfig.headers['Content-Type'].startsWith('application/x-www-form-urlencoded') &&\n    requestConfig.data != null) {\n      requestConfig.data = qs.stringify(requestConfig.data);\n    }\n\n    if (requestConfig.params) {\n      requestConfig.paramsSerializer = this.paramsSerializer;\n    }\n\n    // Send request\n    // @ts-ignore\n    return this.root.axios.request(requestConfig);\n  }\n}\n\n\nexport default APIEntity;\n","/**\n * Filter\n */\n\nclass Filter {\n  public name: string;\n  public value: any;\n  public operand: string;\n\n  constructor (name: string, value: any, operand: string) {\n    this.name = name;\n    this.value = value;\n    this.operand = operand;\n  }\n}\n\nexport default Filter;\n","import './finka';\nimport Filter from './Filter';\n\n/**\n * FilterBuilder\n *\n * Builds filter string according to Bitbar Cloud backend convention\n */\n\nclass FilterBuilder {\n\n  private filters: Array<Filter>;\n\n  constructor () {\n    this.filters = [];\n  }\n\n  /**\n   * Add filter to filters list\n   * @param name {string} Name\n   * @param value {*} Value\n   * @param operand {string} Operand\n   * @param [checkNull=false] {boolean} Check null?\n   * @returns {FilterBuilder}\n   */\n  private add (name: string, value: any, operand: string, checkNull = false): FilterBuilder {\n\n    value = Array.wrap(value);\n\n    if (value.length === 0) {\n      return this;\n    }\n\n    // auto-convert\n    for (let i = 0; i < value.length; i++) {\n      const v = value[i];\n      if (typeof v === 'object' && v instanceof Date) {\n        value[i] = v.getTime();\n      }\n    }\n\n    let isNull = false;\n    if (checkNull) {\n      // check null existence\n      for (const v of value) {\n        if (v !== null) {\n          continue;\n          isNull = true;\n        }\n      }\n\n      if (isNull) {\n        value = value.filter((item: any) => item !== null);\n        operand += 'ornull';\n      }\n    }\n\n    // @ts-ignore\n    if (operand.endsWith('ornull') && value.length === 0) {\n      operand = 'isnull';\n    }\n\n    // add filter\n    this.filters.push(new Filter(name, value, operand));\n\n    return this;\n  }\n\n\n\n  public gt (name: string, value: number) {\n    return this.add(name, value, 'gt');\n  }\n\n  public lt (name: string, value: number) {\n    return this.add(name, value, 'lt');\n  }\n\n  public after (name: string, value: Date | number) {\n    return this.add(name, value, 'after', true);\n  }\n\n  public afterorequal (name: string, value: Date | number) {\n    return this.add(name, value, 'afterorequal', true);\n  }\n\n  public before (name: string, value: Date | number) {\n    return this.add(name, value, 'before', true);\n  }\n\n  public beforeorequal (name: string, value: Date | number) {\n    return this.add(name, value, 'beforeorequal', true);\n  }\n\n  public on (name: string, value: any) {\n    return this.add(name, value, 'on');\n  }\n\n  public eq (name: string, value: any) {\n    return this.add(name, value, 'eq');\n  }\n\n  public contains (name: string, value: string) {\n    return this.add(name, value, 'contains');\n  }\n\n  public like (name: string, value: string) {\n    return this.add(name, value, 'like');\n  }\n\n  public isnull (name: string) {\n    return this.add(name, undefined, 'isnull');\n  }\n\n  public in (name: string, value: Array<any>) {\n    return this.add(name, value, 'in', true);\n  }\n\n  public notin (name: string, value: Array<any>) {\n    return this.add(name, value, 'notin', true);\n  }\n\n\n  public raw (filter: Filter) {\n    const filters = Array.wrap(filter);\n    for (const filter of filters) {\n      if (this.isFilterPart(filter)) {\n        this.filters.push(filter);\n      } else {\n        throw new SyntaxError(`Filter ${filter} has invalid syntax`);\n      }\n    }\n  }\n\n  /**\n   * Check if given string is proper filter part\n   */\n  public isFilterPart (str: string) {\n    return /^[a-zA-Z0-9.]{2,12}_(?:isnull$|(?:gt|lt|(?:after|before)(?:orequal)?|on|eq|contains|like|(?:not)?in)_)/.test(<string> str);\n  }\n\n  /**\n   * To string\n   */\n  public toString () {\n    const parts: Array<string> = [];\n\n    let part: string,\n        val: string;\n\n    for (const filter of this.filters) {\n      if (typeof filter === 'string') {\n        part = filter;\n      } else {\n        val = '';\n        if (filter.value.length > 1 || typeof filter.value[0] !== 'undefined') {\n          val = `_${filter.value.join('|')}`;\n        }\n        part = `${filter.name}_${filter.operand}${val}`;\n      }\n      parts.push(part);\n    }\n\n    return parts.join(';');\n  }\n}\n\n\nexport default FilterBuilder;\n","import APIEntity from './APIEntity'\nimport FilterBuilder from '../FilterBuilder'\n\n\n/**\n * Default limit\n *\n * @constant\n * @type {number}\n * @default\n */\nconst DEFAULT_LIMIT = 20;\n\n/**\n * Default offset\n *\n * @constant\n * @type {number}\n * @default\n */\nconst DEFAULT_OFFSET = 0;\n\n/**\n * API Order Enum\n */\nenum APIOrder {\n  'asc' = 'a',\n  'desc' = 'd'\n};\n\n\n/**\n * APIList\n *\n * @class\n * @extends APIEntity\n */\nclass APIList extends APIEntity {\n\n  /**\n   * Create\n   * Shortcut for sending data POST\n   *\n   * @param {object} data\n   */\n  public create (data: object) {\n    return this.post().data(data).send();\n  }\n\n  /**\n   * Sets sorting\n   *\n   * @public\n   * @param {string} name - Name of the column according to which the data will be sorted\n   * @param {string} [order=a] - Sorting order. Possibilities: 'a', 'd'\n   * @returns this\n   */\n  public sort (name: string, order: APIOrder = APIOrder.asc) {\n    // if order not in ['a', 'd']\n    //   throw new Error(`Order '\\${order}' is invalid! Use 'a' for ascending or 'd' for descending.`);\n\n    return this.params({\n      sort: `${name}_${order}`\n    });\n  }\n\n  /**\n   * Sets limit\n   *\n   * @public\n   * @param {number} [limit=DEFAULT_LIMIT] - Limit to be set\n   * @returns this\n   */\n  public limit (limit = DEFAULT_LIMIT) {\n    if (!Number.isNatural(limit)) {\n      throw new Error(`Limit '${limit}' is invalid!`);\n    }\n\n    return this.params({\n      limit\n    });\n  }\n\n  /**\n   * Gets limit\n   *\n   * @public\n   * @returns number\n   */\n  public getLimit () {\n    const params = this.getParams();\n    return params.limit == null ? DEFAULT_LIMIT : params.limit;\n  }\n\n  /**\n   * Disables limit\n   *\n   * @public\n   * @returns this\n   */\n  public noLimit () {\n    return this.limit(0);\n  }\n\n  /**\n   * Sets offset\n   *\n   * @public\n   * @param {number} [offset=DEFAULT_OFFSET] - Offset to be set\n   * @returns this\n   */\n  public offset (offset: number = DEFAULT_OFFSET) {\n    if (!Number.isNatural(offset)) {\n      throw new Error(`Offset '${offset}' is invalid!`);\n    }\n\n    return this.params({\n      offset\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE records between range\n   *\n   * @public\n   * @param {number} from - From index\n   * @param {number} to - To index\n   * @returns this\n   */\n  public between (from: number, to: number) {\n    if (!Number.isNatural(from)) {\n      throw new Error(`From '${from}' is invalid!`);\n    }\n\n    if (!Number.isNatural(to)) {\n      throw new Error(`To '${to}' is invalid!`);\n    }\n\n    return this.params({\n      offset: from,\n      limit: 1 + (to - from)\n    });\n  }\n\n  /**\n   * Sets limit and offset so that will request from BE one record on given index\n   *\n   * @public\n   * @param {number} idx - Index\n   * @returns this\n   */\n  public only (idx: number) {\n    if (!Number.isNatural(idx)) {\n      throw new Error(`Index '${idx}' is invalid!`);\n    }\n\n    return this.params({\n      offset: idx,\n      limit: 1\n    });\n  }\n\n  /**\n   * Gets current limit and sets offset so that will request from BE one page of records\n   *\n   * @public\n   * @param {number} [page=1] - Page number (counted from 1)\n   * @returns this\n   */\n  public page (page = 1) {\n    if (!Number.isNatural(page) || page == 0) {\n      throw new Error(`Page '${page}' is invalid!`);\n    }\n\n    const limit = this.getLimit();\n    const offset = (page - 1) * limit;\n\n    return this.params({\n      offset,\n      limit\n    });\n  }\n\n  /**\n   * Sets search\n   *\n   * query param is working like SQL LIKE. BE sets wraps around query with %, and replaces every white character\n   * with %. So e.g. if query='my device', then it's searching for '%my%device%' in DB.\n   *\n   * @public\n   * @param {string} query - Query to search for\n   * @returns this\n   */\n  public search (query: string) {\n    if (typeof query !== 'string') {\n      throw new Error('Search query must be a string!');\n    }\n\n    return this.params({\n      search: query\n    });\n  }\n\n  /**\n   * Sets filter\n   *\n   * @public\n   * @param {FilterBuilder|string} filter - Filter\n   * @returns this\n   */\n  public filter (filter: FilterBuilder | string) {\n    const isFilterBuilder = filter instanceof FilterBuilder;\n\n    if (typeof filter !== 'string' && !isFilterBuilder) {\n      throw new Error('Filter must be either string or instance of FilterBuilder');\n    }\n\n    if (isFilterBuilder) {\n      filter = filter.toString();\n    }\n\n    return this.params({\n      filter\n    });\n  }\n}\n\ninterface APIList {\n\n  /**\n   * Alias for 'noLimit'\n   *\n   * @public\n   * @see noLimit\n   * @returns this\n   */\n  all: typeof APIList.prototype.noLimit;\n\n  /**\n   * Alias for 'between'\n   *\n   * @public\n   * @param {number} from - From idx\n   * @param {number} to - To idx\n   * @returns this\n   */\n  cut: typeof APIList.prototype.between;\n}\n\nAPIList.prototype.all = APIList.prototype.noLimit;\nAPIList.prototype.cut = APIList.prototype.between;\n\nexport default APIList;\n","import APIEntity from './APIEntity'\n\n\n/**\n * APIResource\n *\n * @class\n * @extends APIEntity\n */\nclass APIResource extends APIEntity {\n\n  /**\n   * Set DELETE as HTTP method\n   *\n   * @public\n   * @returns this\n   */\n  public delete () {\n    return this.method('DELETE');\n  }\n}\n\n\nexport default APIResource\n","import APIList from './APIList'\nimport APIResource from './APIResource'\n\n\n/**\n * APIListDevices\n *\n * @class\n * @extends APIList\n */\nclass APIListDevices extends APIList {\n\n  /**\n   * /devices\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('devices');\n  }\n\n  // /devices/filters\n  public filters () {\n    return new APIResource(this).push('filters');\n  }\n\n  // /devices/cleanup-configurations\n  public cleanupConfigurations () {\n    return new APIList(this).push('cleanup-configurations');\n  }\n\n  /**\n   * /devices/cleanup-configurations/{id}\n   *\n   * @param {number} id - Resource ID\n   */\n  public cleanupConfiguration (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('cleanup-configurations', id);\n  }\n\n  // /devices/desktop-browser-capabilities\n  public desktopBrowserCapabilities () {\n    return new APIResource(this).push('desktop-browser-capabilities');\n  }\n\n}\n\nexport default APIListDevices;\n","import APIList from './APIList'\nimport APIResource from './APIResource'\n\n\n/**\n * APIListDevices\n *\n * @class\n * @extends APIList\n */\nclass APIListUsers extends APIList {\n\n  /**\n   * /users\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('users');\n  }\n\n  // /users/activate\n  public activate () {\n    return new APIResource(this).push('activate').post();\n  }\n\n  // /users/recoveries\n  public recoveries () {\n    return new APIResource(this).push('recoveries');\n  }\n\n  // /users/passwordRecovery\n  public passwordRecovery () {\n    return new APIResource(this).push('password-recovery');\n  }\n\n  // /users/resetApiKey\n  public resetApiKey () {\n    return new APIResource(this).push('reset-api-key');\n  }\n\n  // /users/resetApiKey\n  public validateVatId () {\n    return new APIResource(this).push('validateVatId');\n  }\n\n}\n\nexport default APIListUsers;\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceBillingPeriod\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceBillingPeriod extends APIResource {\n\n  /**\n   * /billing-periods/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('billing-periods', id);\n  }\n\n  // /billing-periods/{id}/receipt\n  public receipt () {\n    return new APIResource(this).push('receipt').setRequestConfig({\n      responseType: 'arraybuffer'\n    });\n  }\n\n}\n\nexport default APIResourceBillingPeriod\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceBuild\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceBuild extends APIResource {\n\n  /**\n   * /builds/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('builds', id);\n  }\n\n  // /builds/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort');\n  }\n\n  // /builds/{id}/output-file-set/files\n  public outputFiles () {\n    return new APIList(this).push('output-file-set', 'files');\n  }\n\n}\n\nexport default APIResourceBuild\n","import APIResource from './APIResource'\nimport APIResourceBuild from './APIResourceBuild'\n\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceJob extends APIResource {\n\n  /**\n   * /jobs/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('jobs', id);\n  }\n\n  // /jobs/{id}/builds\n  public builds () {\n    return new APIList(this).push('builds');\n  }\n\n  // /jobs/{id}/builds/{id}\n  public build (id: number) {\n    return new APIResourceBuild(this, id);\n  }\n\n}\n\nexport default APIResourceJob\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceBillingPeriod\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceGroup extends APIResource {\n\n  /**\n   * /device-groups/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-groups', id);\n  }\n\n  // /device-groups/{id}/devices\n  public devices () {\n    return new APIList(this).push('devices');\n  }\n\n  // /device-groups/{id}/device/{id}\n  public device (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('devices', id);\n  }\n\n  // /device-groups/{id}/selectors\n  public selectors () {\n    return new APIList(this).push('selectors');\n  }\n\n  // /device-groups/{id}/selectors/{id}\n  public selector (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('selectors', id);\n  }\n\n}\n\nexport default APIResourceDeviceGroup\n","import APIResource from '../APIResource'\nimport APIList from '../APIList'\n\n/**\n * InputFileset\n *\n * @class\n * @extends APIResource\n */\nclass InputFileset extends APIResource {\n\n  /**\n   * /input-file-set\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('input-file-set');\n  }\n\n  // /input-file-set/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /input-file-set/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n}\n\nexport default InputFileset\n","import APIResource from '../APIResource'\nimport APIList from '../APIList'\n\nimport FilterBuilder from '../../FilterBuilder'\n\n// Create non-media files filter\nconst NON_MEDIA_FILES_FILTER = new FilterBuilder();\nNON_MEDIA_FILES_FILTER.eq('state', 'READY');\nNON_MEDIA_FILES_FILTER.notin('mimetype', [\n  // no images\n  'image/png', 'image/jpg', 'image/jpeg', 'image/webp', 'image/gif',\n\n  // no videos\n  'video/mp4', 'video/avi', 'video/webm', 'video/ogg', 'video/mpeg'\n]);\n\n/**\n * OutputFileset\n *\n * @class\n * @extends APIResource\n */\nclass OutputFileset extends APIResource {\n\n  /**\n   * /output-file-set\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('output-file-set');\n  }\n\n  // /output-file-set/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /output-file-set/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n\n  // /output-file-set/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /output-file-set/screenshots/{id}\n  public screenshot (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /output-file-set/screenshots/{id}/file/{id}\n  public screenshotFile (id: number) {\n    this.screenshot(id).push('file');\n  }\n\n  // Filter files out by ready videos\n  public videos () {\n    this.files().params({\n      filter: 's_state_eq_READY',\n      tag: ['video']\n    });\n  }\n\n  // Filter files out by non-media\n  nonMediaFiles () {\n    return this.files().filter(NON_MEDIA_FILES_FILTER);\n  }\n\n}\n\nexport default OutputFileset\n","import APIResource from './APIResource'\nimport APIList from './APIList';\n\nimport InputFileset from './extra-class/InputFileset'\nimport OutputFileset from './extra-class/OutputFileset'\n\n\n/**\n * APIResourceDeviceSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDeviceSession extends APIResource {\n\n  /**\n   * /device-sessions/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /device-sessions/{id}/cluster-logs\n  public clusterLogs () {\n    return new APIResource(this).push('cluster-logs');\n  }\n\n  // /device-sessions/{id}/data-availability\n  public dataAvailability () {\n    return new APIResource(this).push('data-availability');\n  }\n\n  // /device-sessions/{id}/fixtures.zip\n  public fixturesZip () {\n    return new APIResource(this).push('fixtures.zip');\n  }\n\n  // /device-sessions/{id}/junit.xml\n  public junitXml () {\n    return new APIResource(this).push('junit.xml');\n  }\n\n  // /device-sessions/{id}/logs\n  public logs () {\n    return new APIResource(this).push('logs');\n  }\n\n  // /device-sessions/{id}/performance\n  public performance () {\n    return new APIResource(this).push('performance');\n  }\n\n  // /device-sessions/{id}/release\n  public release () {\n    return new APIResource(this).push('release');\n  }\n\n  // /device-sessions/{id}/result-data.zip\n  public resultDataZip () {\n    return new APIResource(this).push('result-data.zip');\n  }\n\n  // /device-sessions/{id}/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /device-sessions/{id}/screenshots/{id}\n  public screenshot (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /device-sessions/{id}/steps\n  public steps () {\n    return new APIList(this).push('steps');\n  }\n\n  // /device-sessions/{id}/steps/{id}\n  public step (id: number | 'current') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('steps', id);\n  }\n\n  // /device-sessions/{id}/steps/current\n  public currentStep () {\n    return this.step('current');\n  }\n\n  // /device-sessions/{id}/test-case-runs\n  public testCaseRuns () {\n    return new APIList(this).push('test-case-runs');\n  }\n\n  // /device-sessions/{id}/retry\n  public retry () {\n    return new APIResource(this).push('retry').post();\n  }\n\n  // /device-sessions/{id}/input-file-set\n  public input () {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  public output () {\n    return new OutputFileset(this);\n  }\n\n  // Alias for output().videos();\n  public videos () {\n    return this.output().videos();\n  }\n\n  // Live Testing Connections\n  public connections () {\n    return new APIList(this).push('connections');\n  }\n\n}\n\nexport default APIResourceDeviceSession\n","import APIResource from './APIResource'\nimport APIResourceDeviceSession from './APIResourceDeviceSession'\n\nimport APIList from './APIList'\n\n\n/**\n * APIResourceRun\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceRun extends APIResource {\n\n  /**\n   * /runs/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('runs', id);\n  }\n\n  // /runs/{id}/config\n  public config () {\n    return new APIResource(this).push('config');\n  }\n\n  // /runs/{id}/device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /runs/{id}/device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n  // /runs/{id}/steps\n  public steps () {\n    return new APIList(this).push('steps');\n  }\n\n  // /runs/{id}/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /runs/{id}/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n\n  // /runs/{id}/tags\n  public tags () {\n    return new APIList(this).push('tags');\n  }\n\n  // /runs/{id}/tag\n  public tag (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('tags', id);\n  }\n\n}\n\nexport default APIResourceRun\n","import APIResource from './APIResource'\nimport APIResourceRun from './APIResourceRun'\n\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceProject extends APIResource {\n\n  /**\n   * /projects/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('projects', id);\n  }\n\n  // /projects/{id}/runs\n  public runs () {\n    return new APIList(this).push('runs');\n  }\n\n  // /projects/{id}/runs/{id}\n  public run (id: number) {\n    return new APIResourceRun(this, id);\n  }\n\n  // /projects/{id}/runs-extended\n  public runsExtended () {\n    return new APIList(this).push('runs-extended');\n  }\n\n  // /projects/{id}/runs-extended/{id}\n  public runExtended (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('runs-extended', id);\n  }\n\n  // /projects/{id}/files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /projects/{id}/files.zip\n  public filesZip () {\n    return new APIResource(this).push('files.zip');\n  }\n\n  // /projects/{id}/sharings\n  public sharings () {\n    return new APIList(this).push('sharings');\n  }\n\n  // /projects/{id}/sharings/{id}\n  public sharing (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('sharings', id);\n  }\n\n}\n\nexport default APIResourceProject\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceFile\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceFile extends APIResource {\n\n  /**\n   * /files/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('files', id);\n  }\n\n  // use this to download file content\n  public file () {\n    return new APIResource(this).push('file');\n  }\n\n  // /files/{id}/icon\n  public icon () {\n    return new APIResource(this).push('icon');\n  }\n\n  // /files/{id}/tags\n  public tags () {\n    return new APIList(this).push('tags');\n  }\n\n}\n\nexport default APIResourceFile\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceNotification\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceNotification extends APIResource {\n\n  /**\n   * /notifications/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('notifications', id);\n  }\n\n  // /notifications/{id}/test\n  public test () {\n    return new APIResource(this).push('test');\n  }\n\n}\n\nexport default APIResourceNotification\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceAccessGroup\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAccessGroup extends APIResource {\n\n  /**\n   * /device-groups/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('access-groups', id);\n  }\n\n  // /access-groups/{id}/users\n  public users () {\n    return new APIList(this).push('users');\n  }\n\n  // /access-groups/{id}/users/{id}\n  public user (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('users', id);\n  }\n\n  // /access-groups/{id}/resources\n  public resources () {\n    return new APIList(this).push('resources');\n  }\n\n  // /access-groups/{id}/resources/{id}\n  public resource (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('resources', id);\n  }\n\n}\n\nexport default APIResourceAccessGroup\n","import APIResource from './APIResource'\n\n/**\n * APIResourceAdditionalUser\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAdditionalUser extends APIResource {\n\n  /**\n   * /additional-users/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('additional-users', id);\n  }\n\n  // /account/resend-activation\n  public resendActivation () {\n    return new APIResource(this).push('resend-activation');\n  }\n\n}\n\nexport default APIResourceAdditionalUser\n","import APIResource from './APIResource'\nimport APIResourceAdditionalUser from './APIResourceAdditionalUser';\n\nimport APIList from './APIList'\n\n/**\n * APIUserResourceAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIUserResourceAccount extends APIResource {\n\n  /**\n   * /account\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/additional-users\n  public additionalUsers () {\n    return new APIList(this).push('additional-users');\n  }\n\n  // /account/additional-users/{id}\n  public additionalUser (id: number) {\n    return new APIResourceAdditionalUser(this, id);\n  }\n\n  // /account-services/{id}/billing-period\n  public serviceBillingPeriod (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    const a = new APIResource(this);\n    a.last += '-services';\n    a.push(id, 'billing-period');\n    return a;\n  }\n\n}\n\nexport default APIUserResourceAccount\n","import APIList from './APIList'\n\n\n/**\n * APIListDeviceTime\n *\n * @class\n * @extends APIList\n */\nclass APIListDeviceTime extends APIList {\n\n  /**\n   * /device-time\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('device-time');\n  }\n\n  // /device-time/reserved\n  public reserved () {\n    return new APIList(this).push('reserved');\n  }\n\n  // /device-time/used\n  public used () {\n    return new APIList(this).push('used');\n  }\n\n}\n\nexport default APIListDeviceTime;\n","import APIList from './APIList'\n\ninterface UploadObj {\n  /**\n   * Directory\n   */\n  dir: string;\n\n  /**\n   * Filename\n   */\n  filename: string;\n}\n\n/**\n * APIListFiles\n *\n * @class\n * @extends APIList\n */\nclass APIListFiles extends APIList {\n\n  // Constructor\n  constructor (parent: object) {\n    super(parent);\n    this.push('files');\n  }\n\n  // Siplifies process of uploading\n  public upload (obj: UploadObj) {\n    let form;\n\n    // For NodeJS\n    // @ts-ignore\n    if (global.isNodeJs) {\n      // @ts-ignore\n      const fs = require('fs');\n      // @ts-ignore\n      const FormData = require('form-data');\n\n      form = new FormData();\n      form.append('file', fs.createReadStream(obj.dir + '/' + obj.filename), {\n        filename: obj.filename\n      });\n\n    /**\n     * Browser\n     * @todo\n     */\n    } else {\n      throw new Error('Not supported yet!');\n    }\n\n    this.post().headers(form.getHeaders()).data(form);\n  }\n\n}\n\nexport default APIListFiles\n","import APIList from './APIList'\n\n\n/**\n * APIListPurchased\n *\n * @class\n * @extends APIList\n */\nclass APIListPurchased extends APIList {\n\n  /**\n   * /purchased\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('purchased');\n  }\n\n}\n\nexport default APIListPurchased\n","import APIList from './APIList'\nimport APIListPurchased from './APIListPurchased'\n\n\n/**\n * APIListServices\n *\n * @class\n * @extends APIList\n */\nclass APIListServices extends APIList {\n\n  // Constructor\n  constructor (parent: object) {\n    super(parent);\n    this.push('services');\n  }\n\n  // /services/purchased\n  public purchased () {\n    return new APIListPurchased(this);\n  }\n\n  // /services/available\n  public available () {\n    return new APIList(this).push('available');\n  }\n\n  public active () {\n    const a = new APIList(this);\n    if (this.first === 'me') {\n      a.push('active');\n    } else {\n      a.params({\n        notArchived: true\n      });\n    }\n    return a;\n  }\n\n}\n\nexport default APIListServices\n","import APIList from './APIList'\nimport APIResource from './APIResource'\n\n\n/**\n * APIListRuns\n *\n * @class\n * @extends APIList\n */\nclass APIListRuns extends APIList {\n\n  /**\n   * /runs\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('runs');\n  }\n\n  // /runs/config\n  public config () {\n    return new APIResource(this).push('config');\n  }\n\n}\n\nexport default APIListRuns\n","import APIList from './APIList'\n\n\n/**\n * APIListNotifications\n *\n * @class\n * @extends APIList\n */\nclass APIListNotifications extends APIList {\n\n  /**\n   * /notifications\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('notifications');\n  }\n\n  // /notifications/scopes\n  public scopes () {\n    return new APIList(this).push('scopes');\n  }\n\n  // /notifications/channels\n  public channels () {\n    return new APIList(this).push('channels');\n  }\n\n}\n\nexport default APIListNotifications\n","import APIList from './APIList'\n\n/**\n * APIListSmartbearTunnels\n *\n * @class\n * @extends APIList\n */\nclass APIListSmartbearTunnels extends APIList {\n\n  /**\n   * /tunnels\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('tunnels');\n  }\n\n  /**\n   * Sets tunnel activity parameter\n   *\n   * @public\n   * @param {number} active - fetching active or inactive tunnels\n   * @returns this\n   */\n  public active (active: boolean) {\n    return this.params({ active: active });\n  }\n}\n\nexport default APIListSmartbearTunnels;\n","import APIResource from './APIResource'\nimport APIResourceBillingPeriod from './APIResourceBillingPeriod'\nimport APIResourceJob from './APIResourceJob'\nimport APIResourceDeviceGroup from './APIResourceDeviceGroup'\nimport APIResourceDeviceSession from './APIResourceDeviceSession'\nimport APIResourceProject from './APIResourceProject'\nimport APIResourceFile from './APIResourceFile'\nimport APIResourceNotification from './APIResourceNotification'\nimport APIResourceAccessGroup from './APIResourceAccessGroup'\n\nimport APIUserResourceAccount from './APIUserResourceAccount';\n\nimport APIList from './APIList'\nimport APIListDeviceTime from './APIListDeviceTime'\nimport APIListFiles from './APIListFiles'\nimport APIListServices from './APIListServices'\nimport APIListRuns from './APIListRuns'\nimport APIListNotifications from './APIListNotifications'\nimport APIListSmartbearTunnels from './APIListSmartbearTunnels'\n\n\n/**\n * APIResourceUser\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceUser extends APIResource {\n\n  /**\n   * /users/{id} | /me\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number | 'me') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n\n    if (id === 'me') {\n      this.push('me');\n    } else if (typeof id === 'number') {\n      this.push('users', id);\n    } else {\n      throw new TypeError('id is not a number');\n    }\n  }\n\n  // /users/{id}/account\n  public account () {\n    return new APIUserResourceAccount(this);\n  }\n\n  // /users/{id}/device-time\n  public deviceTime () {\n    return new APIListDeviceTime(this);\n  }\n\n  // /users/{id}/device-time-summary\n  public deviceTimeSummary () {\n    return new APIList(this).push('device-time-summary');\n  }\n\n  // /users/{id}/services\n  public services () {\n    return new APIListServices(this);\n  }\n\n  // /users/{id}/services/{id}\n  public service (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('services', id);\n  }\n\n  // /users/{id}/billing-periods\n  public billingPeriods () {\n    return new APIList(this).push('billing-periods');\n  }\n\n  // /users/{id}/billing-periods/{id}\n  public billingPeriod (id: number) {\n    return new APIResourceBillingPeriod(this, id);\n  }\n\n  // /users/{id}/jobs\n  public jobs () {\n    return new APIList(this).push('jobs');\n  }\n\n  // /users/{id}/jobs/{id}\n  public job (id: number) {\n    return new APIResourceJob(this, id);\n  }\n\n  // /users/{id}/device-groups\n  public deviceGroups () {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /users/{id}/device-groups/{id}\n  public deviceGroup (id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /users/{id}/device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('device-sessions');\n  }\n\n  // /users/{id}/device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIResourceDeviceSession(this, id);\n  }\n\n  // /users/{id}/projects\n  public projects () {\n    return new APIList(this).push('projects');\n  }\n\n  // /users/{id}/projects/{id}\n  public project (id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /users/{id}/files\n  public files () {\n    return new APIListFiles(this);\n  }\n\n  // /users/{id}/files/{id}\n  public file (id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /users/{id}/runs\n  public runs () {\n    return new APIListRuns(this);\n  }\n\n  // /users/{id}/available-build-executors\n  public availableBuildExecutors () {\n    return new APIList(this).push('available-build-executors');\n  }\n\n  // /users/{id}/available-frameworks\n  public availableFrameworks () {\n    return new APIList(this).push('available-frameworks');\n  }\n\n  /**\n   * /users/{id}/\n   * /users/{id}/reset-api-key\n   */\n  public resetApiKey () {\n    return new APIResource(this).push('reset-api-key');\n  }\n\n  // /users/{id}/restore\n  public restore () {\n    return new APIResource(this).push('restore');\n  }\n\n  // /users/{id}/feedback\n  public feedback () {\n    return new APIResource(this).push('feedback');\n  }\n\n  // /users/{id}/notifications\n  public notifications () {\n    return new APIListNotifications(this);\n  }\n\n  // /users/{id}/notifications/{id}\n  public notification (id: number) {\n    return new APIResourceNotification(this, id);\n  }\n\n  // /users/{id}/receipts\n  public receipts () {\n    return new APIList(this).push('receipts');\n  }\n\n  // /users/{id}/preferences\n  public preferences () {\n    return new APIResource(this).push('preferences');\n  }\n\n  // /users/{id}/ui-preferences\n  public uiPreferences () {\n    return new APIResource(this).push('ui-preferences');\n  }\n\n  // /users/{id}/integrations\n  public integrations () {\n    return new APIList(this).push('integrations');\n  }\n\n  // /users/{id}/integrations/{id}\n  public integration (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('integrations', id);\n  }\n\n  // /users/{id}/device-usage\n  public deviceUsage () {\n    return new APIList(this).push('device-usage');\n  }\n\n  // /users/{id}/statistics\n  public statistics () {\n    return new APIList(this).push('statistics');\n  }\n\n  // /users/{id}/statistics\n  public deviceStatistics () {\n    return new APIList(this).push('device-statistics');\n  }\n\n  // /users/{id}/access-groups\n  public accessGroups () {\n    return new APIList(this).push('access-groups');\n  }\n\n  // /users/{id}/access-groups/{id}\n  public accessGroup (id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /users/{id}/tunnels/{id}\n  public smartbearTunnel (id: number) {\n    return new APIResource(this).push('tunnels', id);\n  }\n\n  // /users/{id}/tunnels\n  public smartbearTunnels () {\n    return new APIListSmartbearTunnels(this);\n  }\n}\n\nexport default APIResourceUser\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceDevice extends APIResource {\n\n  /**\n   * /devices/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('devices', id);\n  }\n\n  // /devices/{id}/properties\n  public properties () {\n    return new APIList(this).push('properties');\n  }\n\n}\n\nexport default APIResourceDevice\n","import APIResource from './APIResource'\n\n\n/**\n * APIResourceUserSession\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceUserSession extends APIResource {\n\n  // Constructor\n  // /user-sessions\n  constructor (parent: object) {\n    super(parent);\n    this.push('user-sessions');\n  }\n\n  // /user-sessions/login\n  public login (data: object) {\n    return new APIResource(this).push('login').post().data(data);\n  }\n\n  // /user-sessions/logout\n  public logout () {\n    return new APIResource(this).push('logout').post();\n  }\n\n  // /user-sessions/{name}-login\n  public sso (name: string) {\n    return new APIResource(this).push(name + '-login');\n  }\n\n  // /user-sessions/portal-login\n  public portalLogin () {\n    return new APIResource(this).push('portal-login').post();\n  }\n\n}\n\nexport default APIResourceUserSession\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceCluster\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceCluster extends APIResource {\n\n  /**\n   * /clusters/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('clusters', id);\n  }\n\n  // /clusters/{id}/devices\n  public devices () {\n    return new APIList(this).push('devices');\n  }\n\n}\n\nexport default APIAdminResourceCluster\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceDeviceTime\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDeviceTime extends APIResource {\n\n  /**\n   * /device-time\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('admin', 'device-time');\n  }\n\n  // /device-time/count-session-report\n  public countSessionReport () {\n    return new APIList(this).push('count-session-report');\n  }\n\n  // /device-time/step-time-report\n  public stepTimeReport () {\n    return new APIList(this).push('step-time-report');\n  }\n\n}\n\nexport default APIAdminResourceDeviceTime\n","import APIList from './APIList'\nimport APIResource from './APIResource'\nimport APIResourceRun from './APIResourceRun'\n\n\n/**\n * APIAdminResourceRun\n *\n * @class\n * @extends APIResourceRun\n */\nclass APIAdminResourceRun extends APIResourceRun {\n\n  // /runs/{id}/abort\n  public abort () {\n    return new APIResource(this).push('abort').post();\n  }\n\n  // /runs/{id}/retry\n  public retry (ids?: Array<number>) {\n    const a = new APIResource(this).push('retry').setRequestConfig({\n      timeout: 0\n    }).post();\n\n    if (ids != null) {\n      a.params({\n        deviceRunIds: ids\n      });\n    }\n\n    return a;\n  }\n\n  // /runs/{id}/changebillable\n  public changeBillable () {\n    return new APIResource(this).push('changebillable');\n  }\n\n  // /runs/{id}/changepriority\n  public changePriority () {\n    return new APIResource(this).push('changepriority');\n  }\n\n  // /runs/{id}/screenshot-names\n  public screenshotNames () {\n    return new APIList(this).push('screenshot-names');\n  }\n\n  // /runs/{id}/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /runs/{id}/data-availability\n  public dataAvailability () {\n    return new APIList(this).push('data-availability');\n  }\n\n  // /runs/{id}/build-logs.zip\n  public buildLogsZip (ids?: Array<number>) {\n    const a = new APIResource(this).push('build-logs.zip');\n\n    if (ids != null) {\n      a.params({\n        deviceRunIds: ids\n      });\n    }\n\n    return a;\n  }\n\n  // /runs/{id}/logs.zip\n  public logsZip () {\n    return new APIResource(this).push('logs.zip');\n  }\n\n  // /runs/{id}/performance.zip\n  public performanceZip () {\n    return new APIResource(this).push('performance.zip');\n  }\n\n  // /runs/{id}/screenshots.zip\n  public screenshotsZip () {\n    return new APIResource(this).push('screenshots.zip');\n  }\n\n}\n\nexport default APIAdminResourceRun\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDevice extends APIResource {\n\n  /**\n   * /admin/devices/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'devices', id);\n  }\n\n  // /admin/devices/{id}/queue\n  public queue () {\n    return new APIList(this).push('queue');\n  }\n\n}\n\nexport default APIAdminResourceDevice\n","import APIResource from './APIResource'\nimport APIList from './APIList';\n\nimport InputFileset from './extra-class/InputFileset';\nimport OutputFileset from './extra-class/OutputFileset';\n\n\n/**\n * APIAdminResourceDevice\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceDeviceSession extends APIResource {\n\n  /**\n   * /device-sessions/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('device-sessions', id);\n  }\n\n  // /admin/device-sessions/{id}/changebillable\n  public changeBillable () {\n    const a = new APIResource(this);\n    a.stack.splice(a.stack.length - 2, 0, 'admin');\n    return a.push('changebillable').post();\n  }\n\n  // /device-sessions/{id}/connections\n  public connections () {\n    return new APIList(this).push('connections');\n  }\n\n  // /device-sessions/{id}/connections/{id}\n  public connection (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('connections', id);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  public input () {\n    return new InputFileset(this);\n  }\n\n  // /device-sessions/{id}/output-file-set\n  public output () {\n    return new OutputFileset(this);\n  }\n\n  // /device-sessions/{id}/release\n  public release () {\n    return new APIResource(this).push('release').post();\n  }\n\n  // /device-sessions/{id}/screenshots\n  public screenshots () {\n    return new APIList(this).push('screenshots');\n  }\n\n  // /device-sessions/{id}/screenshots/{id}\n  public screenshot (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('screenshots', id);\n  }\n\n  // /device-sessions/{id}/steps\n  public steps () {\n    return new APIList(this).push('steps');\n  }\n\n  // /device-sessions/{id}/steps/{id}\n  public step (id: number | 'current') {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('steps', id);\n  }\n\n  // /device-sessions/{id}/steps/current\n  public currentStep () {\n    return this.step('current');\n  }\n\n  // /device-sessions/{id}/test-case-runs\n  public testCaseRuns () {\n    return new APIList(this).push('test-case-runs');\n  }\n\n}\n\nexport default APIAdminResourceDeviceSession\n","import APIResource from './APIResource'\n\n/**\n * APIAdminResourceAccountService\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceAccountService extends APIResource {\n\n  /**\n   * /account-services/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'account-services', id);\n  }\n\n  // /account-services/{id}/activate\n  public activate () {\n    return new APIResource(this).push('activate').post();\n  }\n\n  // /account-services/{id}/deactivate\n  public deactivate () {\n    return new APIResource(this).push('deactivate').post();\n  }\n\n}\n\nexport default APIAdminResourceAccountService\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\n\n/**\n * APIAdminResourceUserAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceUserAccount extends APIResource {\n\n  /**\n   * /acount\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n    this.push('account');\n  }\n\n  // /account/roles\n  public roles () {\n    return new APIList(this).push('roles');\n  }\n\n  // /account/roles/{id}\n  public role (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    return new APIResource(this).push('roles', id);\n  }\n\n  // /account-services\n  public services () {\n    const a = new APIList(this);\n    a.last += '-services';\n    return a;\n  }\n\n  // /update-account\n  public update () {\n    const a = new APIResource(this);\n    a.last = 'update-account';\n    return a.post();\n  }\n\n}\n\nexport default APIAdminResourceUserAccount\n","import APIResource from './APIResource'\nimport APIList from './APIList'\n\nimport APIAdminResourceUserAccount from './APIAdminResourceUserAccount';\n\n\n/**\n * APIAdminResourceUser\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResourceUser extends APIResource {\n\n  /**\n   * /users/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('admin', 'users', id);\n  }\n\n  // /users/{id}/disable\n  public disable () {\n    return new APIResource(this).push('disable');\n  }\n\n  // /users/{id}/enable\n  public enable () {\n    return new APIResource(this).push('enable');\n  }\n\n  // /users/{id}/licenses\n  public licenses () {\n    return new APIList(this).push('licenses');\n  }\n\n  // /users/{id}/resend-activation\n  public resendActivation () {\n    return new APIResource(this).push('resend-activation').post();\n  }\n\n  // users/{id}/account\n  public account () {\n    return new APIAdminResourceUserAccount(this);\n  }\n\n}\n\nexport default APIAdminResourceUser\n","import APIList from './APIList'\n\nimport APIResource from './APIResource'\nimport APIResourceFile from './APIResourceFile'\nimport APIResourceProject from './APIResourceProject';\nimport APIResourceAccessGroup from './APIResourceAccessGroup';\n\nimport APIAdminResourceCluster from './APIAdminResourceCluster';\nimport APIAdminResourceDeviceTime from './APIAdminResourceDeviceTime';\nimport APIAdminResourceRun from './APIAdminResourceRun';\nimport APIAdminResourceDevice from './APIAdminResourceDevice';\nimport APIAdminResourceDeviceSession from './APIAdminResourceDeviceSession';\nimport APIAdminResourceAccountService from './APIAdminResourceAccountService';\nimport APIAdminResourceUser from './APIAdminResourceUser';\n\n\n/**\n * APIAdminResource\n *\n * @class\n * @extends APIResource\n */\nclass APIAdminResource extends APIResource {\n\n  /**\n   * /admin\n   *\n   * Constructor\n   */\n  constructor (parent: object) {\n    super(parent);\n  }\n\n  // /access-groups\n  public accessGroups () {\n    return new APIList(this).push('access-groups');\n  }\n\n  // /access-groups/{id}\n  public accessGroup (id: number) {\n    return new APIResourceAccessGroup(this, id);\n  }\n\n  // /admin/accounts\n  public accounts () {\n    return new APIList(this).push('admin', 'accounts');\n  }\n\n  // /admin/accounts/{id}\n  public account (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    \n    return new APIResource(this).push('admin', 'accounts', id);\n  }\n\n  // /admin/account-services\n  public accountServices () {\n    return new APIList(this).push('admin', 'account-services');\n  }\n\n  // /admin/account-services/{id}\n  public accountService (id: number) {\n    return new APIAdminResourceAccountService(this, id);\n  }\n\n  // activities\n  public activities () {\n    return new APIList(this).push('admin', 'activities');\n  }\n\n  // /admin/billing-periods\n  public billingPeriods () {\n    return new APIList(this).push('admin', 'billing-periods');\n  }\n\n  // /admin/billing-periods/{id}\n  public billingPeriod (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    \n    return new APIResource(this).push('admin', 'billing-periods', id);\n  }\n\n  // /clusters\n  public clusters () {\n    return new APIList(this).push('clusters');\n  }\n\n  // /clusters/{id}\n  public cluster (id: number) {\n    return new APIAdminResourceCluster(this, id);\n  }\n  \n  // /admin/country-vat-rates\n  public countryVatRates () {\n    return new APIList(this).push('admin', 'country-vat-rates');\n  }\n\n  // /admin/country-vat-rates/{id}\n  public countryVatRate (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    \n    return new APIResource(this).push('admin', 'country-vat-rates', id);\n  }\n\n  // /admin/devices\n  public devices () {\n    return new APIList(this).push('admin', 'devices');\n  }\n\n  // /admin/devices/{id}\n  public device (id: number) {\n    return new APIAdminResourceDevice(this, id);\n  }\n\n  // /admin/device-models\n  public deviceModels () {\n    return new APIList(this).push('admin', 'device-models');\n  }\n\n  // /admin/device-models/{id}\n  public deviceModel (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    \n    return new APIResource(this).push('admin', 'device-models', id);\n  }\n\n  // /admin/device-model-criteria\n  public deviceModelCriterias () {\n    return new APIList(this).push('admin', 'device-model-criteria');\n  }\n\n  // /admin/device-model-criteria/{id}\n  public deviceModelCriteria (id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n    \n    return new APIResource(this).push('admin', 'device-model-criteria', id);\n  }\n\n  // /device-sessions\n  public deviceSessions () {\n    return new APIList(this).push('admin', 'device-sessions');\n  }\n\n  // /device-sessions/{id}\n  public deviceSession (id: number) {\n    return new APIAdminResourceDeviceSession(this, id);\n  }\n\n  // /device-status\n  public deviceStatuses () {\n    return new APIList(this).push('device-status');\n  }\n\n  // /device-time\n  public deviceTime () {\n    return new APIAdminResourceDeviceTime(this);\n  }\n\n  // /admin/interactive-queue\n  public interactiveQueue () {\n    return new APIList(this).push('admin', 'interactive-queue');\n  }\n\n  // /files\n  public files () {\n    return new APIList(this).push('files');\n  }\n\n  // /files/{id}\n  public file (id: number) {\n    return new APIResourceFile(this, id);\n  }\n\n  // /admin/overview\n  public overview () {\n    return new APIResource(this).push('admin', 'overview');\n  }\n\n  // /projects\n  public projects () {\n    return new APIList(this).push('projects');\n  }\n\n  // /projects/{id}\n  public project (id: number) {\n    return new APIResourceProject(this, id);\n  }\n\n  // /admin/runs\n  public runs () {\n    return new APIList(this).push('admin', 'runs');\n  }\n\n  // /runs/{id}\n  public run (id: number) {\n    return new APIAdminResourceRun(this, id);\n  }\n\n  // /users\n  public users () {\n    return new APIList(this).push('users');\n  }\n\n  // /admin/users\n  public createUser () {\n    return new APIList(this).push('admin', 'users').post();\n  }\n\n  // /users/{id}\n  public user (id: number) {\n    return new APIAdminResourceUser(this, id);\n  }\n\n}\n\nexport default APIAdminResource\n","import APIResource from './APIResource'\n\n/**\n * APIResourceAccount\n *\n * @class\n * @extends APIResource\n */\nclass APIResourceAccount extends APIResource {\n\n  /**\n   * /accounts/{id}\n   *\n   * Constructor\n   */\n  constructor (parent: object, id: number) {\n    if (id == null) {\n      throw new Error('Resource ID cannot be null!');\n    }\n\n    super(parent);\n    this.push('accounts', id);\n  }\n\n  // /accounts/{id}/concurrency-status\n  public concurrencyStatus () {\n    return new APIResource(this).push('concurrency-status');\n  }\n\n  // /accounts/{id}/preferences\n  public preferences () {\n    return new APIResource(this).push('preferences');\n  }\n\n}\n\nexport default APIResourceAccount\n","import './finka';\nimport ApiConfig from './ApiConfig';\n\nimport axios, { AxiosInstance } from 'axios';\n\n// @ts-ignore\nimport { version } from '../package.json';\n\nimport APIList from './api/APIList';\nimport APIListDevices from './api/APIListDevices';\nimport APIListUsers from './api/APIListUsers';\n\nimport APIResourceUser from './api/APIResourceUser';\nimport APIResourceDevice from './api/APIResourceDevice';\nimport APIResourceDeviceGroup from './api/APIResourceDeviceGroup';\nimport APIResourceUserSession from './api/APIResourceUserSession';\n\nimport APIAdminResource from './api/APIAdminResource';\nimport APIResourceAccount from './api/APIResourceAccount';\n\n// @ts-ignore\nif (global.isNodeJs) {\n  // Set User-Agent\n  axios.defaults.headers.common['User-Agent'] = `Bitbar Cloud API Client for JavaScript v${version}`;\n}\n\n// Disable max content length\naxios.defaults.maxContentLength = 1073741824; // 1GB\n\n\n/**\n * API\n * Root for other API resources\n */\nclass API {\n\n  // Main config\n  private config: ApiConfig;\n\n  // axios config\n  private axiosConfig: ApiConfig;\n\n  // axios instance\n  public axios: AxiosInstance;\n\n\n  constructor (config: ApiConfig) {\n    if (config == null) {\n      throw new Error('config cannot be empty');\n    }\n\n    this.config = config;\n    this.axiosConfig = <ApiConfig> {};\n\n    if (this.config.cloudUrl == null) {\n      throw new TypeError('cloudUrl cannot be empty');\n    } else if (typeof this.config.cloudUrl !== 'string') {\n      throw new TypeError('cloudUrl must be a string');\n    } else if (!/^https?:\\/\\/.{2,}/.test(this.config.cloudUrl)) {\n      throw new Error(\"cloudUrl doesn't look like a URL\");\n    }\n\n    // Validate and correct cloudUrl if needed\n    this.axiosConfig.baseURL = this.config.cloudUrl.replace(/\\/+$/, '') + '/api'\n\n    // Check v2\n    this.config.v2 = !!this.config.v2;\n    if (this.config.v2) {\n      this.axiosConfig.baseURL += '/v2';\n    }\n\n    // Check if apiKey is set\n    if (this.config.apiKey) {\n      if (typeof this.config.apiKey !== 'string') {\n        throw new TypeError('apiKey must be a string');\n      } else if (!/^[A-Za-z0-9]{32}$/.test(this.config.apiKey)) {\n        throw new Error(\"apiKey is in the wrong format\");\n      }\n\n      this.axiosConfig.auth = {\n        username: <string> this.config.apiKey,\n        password: ''\n      };\n    }\n\n    // With credentials\n    this.axiosConfig.withCredentials = config.withCredentials == null ? false : config.withCredentials;\n\n    // Create axios instance\n    this.axios = axios.create(this.axiosConfig);\n  }\n\n\n  // --- Resources starts here --- //\n\n  // /user-sessions\n  public userSession () {\n    return new APIResourceUserSession(this);\n  }\n\n  // /user/{id}\n  public user (id: number | 'me') {\n    return new APIResourceUser(this, id);\n  }\n\n  // /users\n  public users () {\n    return new APIListUsers(this);\n  }\n\n  // /account/{id}\n  public account (id: number) {\n    return new APIResourceAccount(this, id);\n  }\n\n  // /me\n  public me () {\n    return this.user('me');\n  }\n\n  // /admin\n  public admin () {\n    return new APIAdminResource(this);\n  }\n\n  // /devices\n  public devices () {\n    return new APIListDevices(this);\n  }\n\n  // /devices/{id}\n  public device (id: number) {\n    return new APIResourceDevice(this, id);\n  }\n\n  // /device-groups\n  public deviceGroups () {\n    return new APIList(this).push('device-groups');\n  }\n\n  // /device-groups/{id}\n  public deviceGroup (id: number) {\n    return new APIResourceDeviceGroup(this, id);\n  }\n\n  // /label-groups\n  public labelGroups () {\n    return new APIList(this).push('label-groups');\n  }\n\n  // /device-statistics\n  public deviceStatistics () {\n    return new APIList(this).push('device-statistics');\n  }\n\n}\n\n\nexport default API;\n","import API from './API';\nimport FilterBuilder from './FilterBuilder';\n\n/**\n * Cloud API Client\n */\nconst CloudAPIClient = {\n  API,\n  FilterBuilder\n}\n\nexport default CloudAPIClient;\n"],"names":["finka","ALLOWED_HTTP_METHODS","APIEntity","[object Object]","parent","this","stack","requestConfig","root","Array","isArray","push","setRequestConfig","items","item","pop","first","val","last","length","absolute","url","join","axiosConfig","baseURL","Object","deepAssign","key","headers","_headers","replace","letter","toUpperCase","name","NAME","toLocaleUpperCase","Error","keys","method","params","data","Content-Type","qs","stringify","arrayFormat","startsWith","paramsSerializer","axios","request","Filter","value","operand","FilterBuilder","filters","checkNull","wrap","i","v","Date","getTime","endsWith","add","undefined","filter","isFilterPart","SyntaxError","str","test","parts","part","APIOrder","APIList","post","send","order","asc","sort","limit","Number","isNatural","getParams","offset","from","to","idx","page","getLimit","query","search","isFilterBuilder","toString","prototype","all","noLimit","cut","between","APIResource","APIListDevices","super","id","APIListUsers","APIResourceBillingPeriod","responseType","APIResourceBuild","APIResourceJob","APIResourceDeviceGroup","InputFileset","NON_MEDIA_FILES_FILTER","eq","notin","OutputFileset","screenshot","files","tag","APIResourceDeviceSession","step","output","videos","APIResourceRun","APIResourceProject","APIResourceFile","APIResourceNotification","APIResourceAccessGroup","APIResourceAdditionalUser","APIUserResourceAccount","a","APIListDeviceTime","APIListFiles","obj","form","global","isNodeJs","fs","require","append","createReadStream","dir","filename","getHeaders","APIListPurchased","APIListServices","notArchived","APIListRuns","APIListNotifications","APIListSmartbearTunnels","active","APIResourceUser","TypeError","APIResourceDevice","APIResourceUserSession","APIAdminResourceCluster","APIAdminResourceDeviceTime","APIAdminResourceRun","ids","timeout","deviceRunIds","APIAdminResourceDevice","APIAdminResourceDeviceSession","splice","APIAdminResourceAccountService","APIAdminResourceUserAccount","APIAdminResourceUser","APIAdminResource","APIResourceAccount","defaults","common","maxContentLength","API","config","cloudUrl","v2","apiKey","auth","username","password","withCredentials","create","user"],"mappings":"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"}